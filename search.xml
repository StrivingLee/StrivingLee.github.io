<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>《C陷阱与缺陷》读书笔记</title>
    <url>/c-traps-pitfalls-notes/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="总述">总述</h2>
<blockquote>
<p>C 陷阱与缺陷读书笔记，批判阅读</p>
</blockquote>
<span id="more"></span>
<h1 id="c-陷阱与缺陷">C 陷阱与缺陷</h1>
<h2 id="第1章-词法陷阱">第1章 词法陷阱</h2>
<h3 id="不同于">1.1 =不同于==</h3>
<p>不应该关闭警告选项，而应进行显式比较</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// improper</span></span><br><span class="line"><span class="keyword">if</span> (x = y)</span><br><span class="line">    foo();</span><br><span class="line"></span><br><span class="line"><span class="comment">// proper</span></span><br><span class="line"><span class="keyword">if</span> ((x = y) != <span class="number">0</span>)</span><br><span class="line">    foo();</span><br></pre></td></tr></table></figure>
<p>赋值误写为比较</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ((filedsc == open(argv[i], <span class="number">0</span>)) &lt; <span class="number">0</span>)</span><br><span class="line">    error();</span><br><span class="line"><span class="comment">// 完全没有调用error的机会</span></span><br></pre></td></tr></table></figure>
<h3 id="和不同于和">1.2 &amp;和|不同于&amp;&amp;和||</h3>
<p>见后</p>
<h3 id="词法分析中的贪心法">1.3 词法分析中的“贪心法”</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a---b;</span><br><span class="line"><span class="comment">/* is same as</span></span><br><span class="line"><span class="comment"> * a -- -b</span></span><br><span class="line"><span class="comment"> * is different from</span></span><br><span class="line"><span class="comment"> * a - --b</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">y = x<span class="comment">/*p; // is regarded as MULTI</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">y = x / *p; <span class="comment">// x point to p</span></span><br><span class="line">y = x/(*p);</span><br></pre></td></tr></table></figure>
<h3 id="整型常量">1.4 整型常量</h3>
<p>1-4.c</p>
<p>不允许出现9</p>
<h3 id="字符和字符串">1.5 字符和字符串</h3>
<p>双引号引起的字符串代表指向无名数组起始字符的指针，无名数组用引号之间的字符以及二进制为0的字符
<code>\0</code> 初始化</p>
<h3 id="练习题">练习题</h3>
<h2 id="第2章-语法陷阱">第2章 语法陷阱</h2>
<h3 id="理解函数声明">2.1 理解函数声明</h3>
<p>C
变量的声明由两部分构成：类型以及一组类似表达式的声明符(declarator)</p>
<p>声明符与表达式类似，对它求值返回一个声明中给定类型的结果</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> ((f));</span><br></pre></td></tr></table></figure>
<p>这个声明的含义是，当对其求值时，<code>((f))</code>
的类型为浮点类型，由此推知 <code>f</code> 的类型也是浮点类型</p>
<p>且 <code>()</code> 结合优先级高于 <code>*</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> *<span class="title function_">g</span><span class="params">()</span>, <span class="params">(*h)</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">// is same as the following statement</span></span><br><span class="line"><span class="type">float</span> *(g()), (*h)();</span><br></pre></td></tr></table></figure>
<p>知道如何声明一个类型的变量后就很容易得到该类型的类型转换符了：去掉声明中的变量名和末尾分号</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(<span class="type">float</span> (*)())</span><br></pre></td></tr></table></figure>
<p>调用函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(*fp)();</span><br><span class="line"><span class="comment">// abbr</span></span><br><span class="line">fp();</span><br></pre></td></tr></table></figure>
<p>todo</p>
<h2 id="第3章-语义陷阱">第3章 语义陷阱</h2>
<h3 id="指针与数组">3.1 指针与数组</h3>
<p>二维数组事实上是一个指向一维数组的指针数组</p>
<p>所以取行就只需取一个下标</p>
<h3 id="非数组的指针">3.2 非数组的指针</h3>
<p><code>malloc()</code> 可能会返回 <code>NULL</code>
作为内存分配失败的标志（不过一般来说也许不用？）</p>
<h3 id="作为参数的数组声明">3.3 作为参数的数组声明</h3>
<p>用数组作为函数参数没什么意义，和传入首地址是等效的</p>
<p>他卖了个关子 todo</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="type">char</span> *hello;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">char</span> hello[];</span><br></pre></td></tr></table></figure>
<h3 id="避免举隅法">3.4 避免“举隅法”</h3>
<p>玄之又玄，大概就是表达复制指针并不复制原始内容，即shallow
copy，当然，修改字符串常量的行为貌似是UB，与编译器实现有关</p>
<h3 id="空指针并非空字符串">3.5 空指针并非空字符串</h3>
<p>编译器保证由0转换而来的指针不等于任何有效的指针</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> NULL 0</span></span><br></pre></td></tr></table></figure>
<p>不能访问空指针指向的内容</p>
<h3 id="边界计算与不对称边界">3.6 边界计算与不对称边界</h3>
<p>不对称边界：左闭右开，在数学上的不对称的丑陋带来了编程时出奇的方便</p>
<p>另一种看待不对称问题的方式：把上界视作某序列中第一个被占用的元素，把下界视作序列中第一个被释放的元素</p>
<p>来看一段例子：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> N 1024</span></span><br><span class="line"><span class="type">static</span> <span class="type">char</span> buffer[N];</span><br><span class="line"><span class="type">static</span> <span class="type">char</span> *bufptr;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bufwrite</span><span class="params">(<span class="type">char</span> *p, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (--n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (bufptr == &amp;buffer[N])</span><br><span class="line">            flushbuffer();</span><br><span class="line">        -bufptr++ = *p++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ANSI C 标准中允许与“溢界”的元素地址相比较，但是对其引用是非法的</p>
<p><code>memcpy()</code>
提供了一次复制多个字符的方法，并且通常借助汇编语言的实现提高速度</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">bufwrite</span><span class="params">(<span class="type">char</span> *p, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (n &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> k, rem;</span><br><span class="line">        <span class="keyword">if</span> (bufptr == &amp;buffer[N])</span><br><span class="line">            flushbuffer();</span><br><span class="line">        rem = N - (bufptr - buffer);</span><br><span class="line">        k = n &gt; rem ? rem : n;</span><br><span class="line">        <span class="built_in">memcpy</span>(bufptr, p, k);</span><br><span class="line">        bufptr += k;</span><br><span class="line">        p += k;</span><br><span class="line">        n -= k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在“师出有名”的情况下，我们应该有信心写对这些技巧性很强的代码</p>
<p>另一个打印给定行号or列号字符的函数</p>
<h3 id="求值顺序">3.7 求值顺序</h3>
<p>主要说了短路求值</p>
<h3 id="运算符和">3.8 运算符&amp;&amp;、||和!</h3>
<p>逻辑运算符只会返回0或1</p>
<p>&amp;和|两侧的值都会算出，而不会短路求值</p>
<h3 id="溢出">3.9 溢出</h3>
<h3 id="为函数-main-提供返回值">3.10 为函数 main 提供返回值</h3>
<p>忘记显示声明 main 返回值为 int，而又在前面定义了其他 struct</p>
<h2 id="第4章-连接">第4章 连接</h2>
<h3 id="什么是连接器">4.1 什么是连接器</h3>
<h3 id="声明与定义">4.2 声明与定义</h3>
<p>外部变量尽量不要重复定义</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// file1.c</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// file2.c</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">9</span>;</span><br></pre></td></tr></table></figure>
<h3 id="命名冲突与static修饰符">4.3 命名冲突与static修饰符</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">int</span> a;</span><br></pre></td></tr></table></figure>
<p>将 a 的作用域限制在一个源文件内</p>
<p>因此，如果若干个函数需要共享一组外部对象，可以将这些函数放到一个源文件中，把他们需要用到的对象在同一个源文件中用
static
声明，如果一个函数仅仅被同一个源文件中的其他函数调用，我们就应该声明该函数为
static</p>
<h3 id="形参实参与返回值">4.4 形参、实参与返回值</h3>
<p>如果一个函数在被定义或声明之前被调用，它的返回类型默认为 int</p>
<p>C 中形参和实参匹配的规则略为复杂，ANSI C
允许程序员在声明时指定函数的参数类型，如</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">square</span><span class="params">(<span class="type">double</span>)</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">square(<span class="number">2</span>); <span class="comment">// legal, is same as square((double)2)</span></span><br></pre></td></tr></table></figure>
<p>如果一个函数没有 float、short 或者 char
类型的参数，在函数声明中可以省略参数类型的说明</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">isvowel</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">isvowel</span><span class="params">(<span class="type">int</span> c)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> c == <span class="string">&#x27;a&#x27;</span> || c == <span class="string">&#x27;e&#x27;</span> || c == <span class="string">&#x27;i&#x27;</span> || c == <span class="string">&#x27;o&#x27;</span> || c == <span class="string">&#x27;u&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>scanf 和 printf</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// expected: 0 1 2 3 4</span></span><br><span class="line"><span class="comment">// actual:   0 0 0 0 0</span></span><br></pre></td></tr></table></figure>
<p>字符 c 附近的内存因为整型所占存储空间大于字符型而被覆盖</p>
<h3 id="检查外部类型">4.5 检查外部类型</h3>
<p>保证 extern 变量与其声明一致</p>
<h3 id="头文件">4.6 头文件</h3>
<h2 id="第5章-库函数">第5章 库函数</h2>
<p><strong>尽可能</strong>使用库函数</p>
<h3 id="返回整数的getchar函数">5.1 返回整数的getchar函数</h3>
<p>不知所云，不管了</p>
<h3 id="更新顺序文件">5.2 更新顺序文件</h3>
<p>fread 操作，用到时候再细究</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (fread( (<span class="type">char</span> *)&amp;rec, <span class="keyword">sizeof</span>(rec), <span class="number">1</span>, fp) == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// do something on rec</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="comment">/*rec needs to be update*/</span>) &#123;</span><br><span class="line">        fseek(fp, -(<span class="type">long</span>)<span class="keyword">sizeof</span>(rec), <span class="number">1</span>);</span><br><span class="line">        fwrite( (<span class="type">char</span> *)&amp;rec, <span class="keyword">sizeof</span>(rec))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="缓存输出与内存分配">5.3 缓存输出与内存分配</h3>
<p>程序输出的两种方式：</p>
<ul>
<li>即时处理（系统负担较大）</li>
<li>先暂存再大块写入</li>
</ul>
<p>因此 C
语言实现通常都允许程序员进行实际的写操作之前控制产生的输出数据量，一般通过库函数
<code>setbuf(stdout, buf)</code> 实现</p>
<p>这个语句通知输入/输出库，所有写入到 stdout 的输出都应该使用 buf
作为缓冲区，直到 buf 被填满或者程序员直接调用
fflush（对于写操作打开的文件，fflush
会直接导致输出缓冲区的内容被实际写入该文件）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> BUF[BUFSIZ];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line">    </span><br><span class="line">    setbuf(<span class="built_in">stdout</span>, buf);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) != EOF)</span><br><span class="line">        <span class="built_in">putchar</span>(c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="使用errno检测错误">5.4 使用errno检测错误</h3>
<p>先检测作为错误指示的返回值，确定已经执行失败，再检查 errno
确定出错原因</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="comment">/*wrong return value*/</span>) &#123;</span><br><span class="line">    <span class="comment">// check errno</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="库函数signal">5.5 库函数signal</h3>
<p>signal 是一种捕获异步事件的方式</p>
<p>信号是真正的“异步”，可能在 C
语言执行期间的任何时刻发生，甚至可能出现在 malloc
等复杂函数的执行过程中。因此从安全角度考虑，信号处理函数不应该调用上述类型的库函数</p>
<p>唯一绝对安全可移植的操作：print 错误语句，exit 退出</p>
<h2 id="第6章-预处理器">第6章 预处理器</h2>
<blockquote>
<p>主要讲的宏的事情</p>
</blockquote>
<h3 id="不能忽视宏定义中的空格">6.1 不能忽视宏定义中的空格</h3>
<h3 id="宏并不是函数">6.2 宏并不是函数</h3>
<p>主要是括号的问题</p>
<p>但是比如下面这段就会出现重复计算的bug</p>
<p>经典的把 <code>toupper</code> 定义成宏：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">toupper</span>(*p++);</span><br></pre></td></tr></table></figure>
<p>嵌套宏也可能导致代码过长，比如四层嵌套的 <code>max</code> 语句</p>
<p>其实写成四行 if-else 更好</p>
<h3 id="宏并不是语句">6.3 宏并不是语句</h3>
<h3 id="宏并不是类型定义">6.4 宏并不是类型定义</h3>
<blockquote>
<p>省流：用 typedef</p>
</blockquote>
<h2 id="第7章-可移植性缺陷">第7章 可移植性缺陷</h2>
<p>就感觉...没太大必要</p>
<p>就摸了（不是）</p>
]]></content>
      <tags>
        <tag>C</tag>
        <tag>读书笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>OO Pre Review</title>
    <url>/OO-Pre-Review/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="写在前面">写在前面</h2>
<blockquote>
<p>OO Pre 的学期总结，痛并快乐着</p>
</blockquote>
<span id="more"></span>
<p>[TOC]</p>
<p>也记得找jsgg debug的时候，他说：你push到仓库里，我明天帮你看看</p>
<p>可惜我当时甚至还没学会用idea进行版本管理</p>
<h2 id="pre0_task1">Pre0_task1</h2>
<blockquote>
<p>本次目标：完成git和idea的安装，学习其基本用法</p>
</blockquote>
<p>题外话，Git 这东西真的魔力很大，但是确实也有点难学</p>
<p>课程组推荐给大家的我也推荐给大家（</p>
<h3 id="git-相关">Git 相关：</h3>
<ol type="1">
<li><p><a href="https://juejin.cn/post/6844904191203213326">Git 使用心得
&amp; 常见问题整理</a></p></li>
<li><p><a
href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰老师的 Git
教程</a></p></li>
<li><p><a href="https://learngitbranching.js.org/">Git
基础可视化教程</a> 与 <a
href="https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1">Git
进阶可视化教程</a></p></li>
<li><p><a href="https://www.progit.cn/">Git Pro</a></p></li>
</ol>
<h3 id="java相关">Java相关：</h3>
<p><a href="https://docs.oracle.com/en/java/javase/18/docs/api/">JDK
Document</a></p>
<h3 id="commit-message">Commit message</h3>
<p>可以采用插件规范自己的 <code>commit message</code>
，摘录一些如下：（来源于<a
href="https://blog.csdn.net/m0_46636892/article/details/122093889">陈大大的期待的CSDN博客</a>）</p>
<p>Git Commit Template插件在使用时选择的git提交类型解释：</p>
<blockquote>
<p>feat
功能feature的意思，也是最常用的。当你的功能有变更的时候，都可以采用这种类型的type</p>
<p>fix 当然指的是bug修复</p>
<p>docs 更新了文档，或者更新了注释</p>
<p>style 代码格式调整，比如执行了format、更改了tab显示等</p>
<p>refactor
重构代码。指的是代码结构的调整，比如使用了一些设计模式重新组织了代码</p>
<p>perf
对项目或者模块进行了性能优化。比如一些jvm的参数改动，把stringbuffer改为stringbuilder等</p>
<p>test 这个简单，就是增加了单元测试和自动化相关的代码</p>
<p>build 影响编译的一些更改，比如更改了maven插件、增加了npm的过程等</p>
<p>ci
持续集成方面的更改。现在有些build系统喜欢把ci功能使用yml描述。如有这种更改，建议使用ci</p>
<p>chore
其他改动。比如一些注释修改或者文件清理。不影响src和test代码文件的，都可以放在这里</p>
<p>revert 回滚了一些前面的代码</p>
</blockquote>
<h2 id="pre1_task1">Pre1_task1</h2>
<blockquote>
<p>本次目标：初识Java，实现一系列基础的类，并且熟悉类、属性和方法的使用</p>
</blockquote>
<p>本次作业只需要使用Java基础语法、容器和简单的getter、setter，以及对大数类
<code>BigInteger</code> 用法有基本了解即可完成</p>
<h3 id="关于容器">关于容器：</h3>
<p>容器是好用的，容器是需要学习的</p>
<p><strong>容器是现代程序设计非常基础而重要的手段</strong></p>
<p>如果采用类似C语言结构体数组的写法，通过遍历数组查找所需要的信息，就不太符合Java的感觉，更好的做法是采用HashMap。概括起来就是下面这句话：</p>
<blockquote>
<p>不要重复造轮子！不要重复造轮子！不要重复造轮子！</p>
</blockquote>
<h3 id="关于面向对象">关于面向对象：</h3>
<blockquote>
<p>面向对象是一种主流的软件开发方法，也是一种思维方式，其核心是识别类，并在类之间建立层次式的协作关系。</p>
</blockquote>
<p>有兴趣的同学也可以看这篇读书笔记——《面向对象是如何工作的（第2版）》读书笔记</p>
<p><del>啊当然也是还在紧锣密鼓地筹备当中辣</del></p>
<h3 id="关于构造函数constructor">关于构造函数Constructor</h3>
<p>一个压行的方法是将参数传入constuctor，省去了多次调用set方法</p>
<blockquote>
<p>关于构造函数的理解：</p>
<p>构造函数的用途是在你需要创建一个对象的时候完成一些初始化工作，并给对象的所有属性赋予初始值。</p>
<p>也就是这两步：①创建这个对象 ②给这个对象部分初始化</p>
</blockquote>
<p>一个愚蠢的压行方法：不用中间变量存储读入，直接将读入传入</p>
<p>详细说明如下<del>，但是貌似不符合软工要求</del></p>
<p>有条理的写法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ...</span><br><span class="line">    </span><br><span class="line"><span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> in.next();</span><br><span class="line"><span class="type">String</span> <span class="variable">bottleId</span> <span class="operator">=</span> in.next();</span><br><span class="line">function(userId, bottleId);</span><br></pre></td></tr></table></figure>
<p>不太好的压行写法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ...</span><br><span class="line">    </span><br><span class="line"><span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">function(in.next(), in.next());</span><br></pre></td></tr></table></figure>
<h3 id="多说一嘴">多说一嘴</h3>
<p>为什么 ArrayList
可以存不同的对象呢？（这会在本单元第2、3次作业中有所体现），记住Java中一句非常重要的话：<code>Everything is reference</code>
，这会帮助你理解很多问题</p>
<p>什么、不太明白，请耐心看下去哦~</p>
<p>toString() 方法</p>
<p>操作10要求输出特定的<code>Bottle</code>类型实例的属性，建议在
<code>Bottle</code> 类中重写<code>toString</code> 方法，示例如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Bottle</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="meta">@Override</span> <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;The bottle&#x27;s id is &quot;</span> + id + <span class="string">&quot;.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] argv)</span> &#123;</span><br><span class="line">        <span class="type">Bottle</span> <span class="variable">bottle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bottle</span>();</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        System.out.println(bottle);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出 : The bottle&#x27;s id is 1.</span></span><br></pre></td></tr></table></figure>
<p><code>java.io.PrintStream.println(Object x)</code>函数将调用<code>String.valueOf(x)</code>以获得实例<code>x</code>的字符串描述，而<code>java.lang.String.valueOf(Object x)</code>函数将在<code>x</code>不为<code>null</code>时返回<code>x.toString()</code>，因此我们可以通过重写<code>toString</code>方法使<code>println</code>函数输出自定义格式的“实例属性”。详见
<a
href="https://docs.oracle.com/en/java/javase/18/docs/api/java.base/java/io/PrintStream.html#println()">println()
- JDK Documentation</a> 和 <a
href="https://docs.oracle.com/en/java/javase/18/docs/api/java.base/java/lang/String.html#valueOf(java.lang.Object)">valueOf()
- JDK Documentation</a> 。</p>
<blockquote>
<p>简而言之这个 toString() 就是对象的字符串描述，println() 会打印它</p>
</blockquote>
<h2 id="pre1_task2">Pre1_task2</h2>
<blockquote>
<p>本次目标：多态和继承的练习，以及了解工厂模式</p>
</blockquote>
<p><del>虽然我没写出来工厂模式，但是我觉得这很漂亮，很符合我对设计模式的想象</del></p>
<p><del>工厂模式可以看我的另一篇博客（啊写好了会post上来的，问就是还在紧锣密鼓地筹备当中）</del></p>
<h3 id="一继承">一、继承</h3>
<blockquote>
<p>继承就是定义子类继承父类的特征和行为，使得子类可以拥有父类的属性和方法，从而起到代码复用的目的。</p>
<p><strong>从语义上来说，在 <code>A</code> 和 <code>B</code> 类型满足
<em>is-a</em> 关系（A is a B），即<code>A</code> 类型是 <code>B</code>
类型的一种时，可以使用继承来在程序表述。</strong></p>
</blockquote>
<h3 id="二向上转型upcasting">二、向上转型（Upcasting）</h3>
<blockquote>
<p>在建立了继承关系之后，可以使用<strong>父类型</strong>去引用通过<strong>子类型</strong>创建的对象。</p>
</blockquote>
<p>在调用构造函数的时候会涉及先后问题，这里要注意，是先调用父类的构造函数，再调用子类的构造函数，具体代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 父类构造函数</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Equipment</span><span class="params">(<span class="type">int</span> tmpId, String tmpName, <span class="type">long</span> tmpPrice)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.id = tmpId;</span><br><span class="line">    <span class="built_in">this</span>.name = tmpName;</span><br><span class="line">    <span class="built_in">this</span>.price = tmpPrice;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子类构造函数</span></span><br><span class="line"><span class="comment">// public class Bottle extends Equipment</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Bottle</span><span class="params">(<span class="type">int</span> tmpId, String tmpName, <span class="type">long</span> tmpPrice,</span></span><br><span class="line"><span class="params">                  <span class="type">double</span> tmpCapacity, <span class="type">boolean</span> tmpFilled)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(tmpId, tmpName, tmpPrice);</span><br><span class="line">    <span class="built_in">this</span>.capacity = tmpCapacity;</span><br><span class="line">    <span class="built_in">this</span>.filled = tmpFilled;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// public class HealingPotion extends Bottle</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">HealingPotion</span><span class="params">(<span class="type">int</span> tmpId, String tmpName, <span class="type">long</span> tmpPrice,</span></span><br><span class="line"><span class="params">                         <span class="type">double</span> tmpCap, <span class="type">boolean</span> tmpFilled, <span class="type">double</span> tmpEff)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(tmpId, tmpName, tmpPrice, tmpCap, tmpFilled);</span><br><span class="line">    <span class="built_in">this</span>.efficiency = tmpEff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="三向下转型downcasting">三、向下转型（Downcasting）</h3>
<blockquote>
<p>一种比较危险的行为，需要搭配 instanceof 来使用</p>
</blockquote>
<p>Java 语言提供了一个特殊的关键词 <code>instanceof</code>
用来判断一个对象引用所指向的对象的创建类型是否为特定的某个类，一般写为
<code>obj instanceof A</code>，其中 obj 为一个对象引用，A
为一个类型（类或接口），这个表达式的取值结果为布尔型，如果 obj
的创建类型为 A，则结果为 true，否则为 false。在这个表达式取值为 true
的情况下，可以使用<strong>向下转型</strong> (down cast) 来使用一个 A
类型的对象来引用obj： <code>A ao = (A)obj</code> 。注意，实际上 obj
所指向对象的创建类型永远不会发生变化，转型的只是对象引用类型。</p>
<p>本次作业中的应用为：哦好像没有应用，在下一个 task 里有应用</p>
<h3 id="四对象方法的重写和复用">四、对象方法的重写和复用</h3>
<blockquote>
<p>有时候，具有继承关系的类的某些行为具有递进关系，但又有自己特定的行为。</p>
<p>我们期望这两个类中实现的特定方法同名。<strong>这种让子类重新实现一个在父类中已经实现的方法是面向对象的一个重要机制，称为方法重写。</strong>方法重写获得的直接好处是让子类与父类在相应方法的调用上保持了一致性。</p>
<p>更通俗的说，重写方法与父类方法在行为上具有相似功能，但子类重写的方法一般额外增加一些行为。</p>
<p>在程序编写方面，一般会为重写方法标上一个@Override标签。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Course</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    Course(String name) &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">displayInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这门课很难&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OOCourse</span> <span class="keyword">extends</span> <span class="title class_">Course</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">displayInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这门课很难&quot;</span>); <span class="comment">// 这里出现了代码拷贝，是低质量的代码</span></span><br><span class="line">        System.out.println(<span class="string">&quot;上面那句是放p&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建议更换为下面的代码：</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OOCourse</span> <span class="keyword">extends</span> <span class="title class_">Course</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">displayInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.displayInfo(); <span class="comment">// 调用了类Course中定义的方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;上面那句是放p&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Java语言提供了一个重要的关键词<strong>super</strong>，它实际指代的是当前对象从父类继承得到的内容</p>
<blockquote>
<p>联想上面构造函数里的super，你甚至可以理解为，这个super会替换为这个类的父类名称，这里使用
<code>Course.displayInfo()</code> 也是一样的效果，同理，构造函数
<code>super(argument)</code> 也可以替换为
<code>Course(argument)</code></p>
</blockquote>
<h3 id="五多态">五、多态</h3>
<p>实际调用的方法与对象<strong>引用的类型</strong>无关，取决于被引用对象的<strong>创建类型</strong>。请看下面的代码示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Course</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Course</span>();</span><br><span class="line"><span class="type">Course</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OOCourse</span>();</span><br><span class="line">c1.displayInfo();</span><br><span class="line">c2.displayInfo();</span><br></pre></td></tr></table></figure>
<p>其中通过c1调用的实际是Course类实现的displayInfo方法，而通过c2调用的则是OOCourse类重写的displayInfo方法，但实际上c1和c2的引用类型都是Course。上面我们提到的这个特性，就叫做多态。</p>
<p><strong>参差多态，乃是幸福本源</strong>（逃）</p>
<h3 id="六异常处理">六、异常处理</h3>
<blockquote>
<p>异常：程序运行时发生了意外的事件，阻止了程序按照程序员的预期正常执行</p>
</blockquote>
<p>运行出错后，Java
提供了一种优秀的解决办法：异常处理机制，它采取显式的方式处理异常，包括两个方面：</p>
<ul>
<li>引入了专门的表达和处理方式，代码上一目了然就能看出是异常处理；</li>
<li>一旦发生异常，会强迫程序执行进入异常处理分支。</li>
</ul>
<p>在Java语言中，每个异常都被封装为Exception，异常有抛出和捕捉两种处理方式。所谓抛出，就是使用Java提供的throw关键词来产生一个Exception或者其某个子类的对象；而捕捉则是通过catch关键词来捕捉在一段代码的执行过程中所抛出的相关异常对象。</p>
<p>课程推荐使用异常处理机制来区分处理显著不同于一般情况下的数据状态。使用异常处理可以让你的代码更加清晰易于理解，降低出现
bug 的可能性。</p>
<p>👆上面内容来自指导书<del>，相信我不说你也看出来了</del></p>
<p>前面代码出现异常后，后面的代码不会执行，程序会抛出异常并结束（×）</p>
<p>异常发生并不意味着程序终止，找到地方可以处理这个异常即可</p>
<p>当然，当前作用域，异常后面的部分不会执行</p>
<p>具体运行过程为：</p>
<p><img src="..\images\exception-execution.png" /></p>
<p>一个很全面覆盖上面流程图的例子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayIndex</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">f</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        a[<span class="number">10</span>] = <span class="number">10</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">g</span><span class="params">()</span> &#123;</span><br><span class="line">        f();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">h</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">100</span>) &#123;</span><br><span class="line">            g();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">k</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            h();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NullPointerException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;k()&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            k();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NullPointerException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;caught&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;main&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<p>解释：</p>
<p>f产生异常，所处不是try，所处是函数g，返回调用者g</p>
<p>g与f同理，返回调用者h</p>
<p>h产生异常，所处不是try，所处是if语句，不是函数，退出到if大括号的外层，此时所处是函数，返回调用者k</p>
<p>k产生异常，产生异常的代码块所处是try，catch异常不匹配（因为是AIOOBE），退出到外层</p>
<p>能不能把所有代码放到一个try块里，这样啥异常都能输出啊（逃）</p>
<p>《Core Java》的第七章相关内容请见：<del>紧锣密鼓筹备中</del></p>
<h2 id="pre1_task3">Pre1_task3</h2>
<h3 id="前言-碎碎念">前言 &amp; 碎碎念</h3>
<blockquote>
<p>这次作业真的有点难度，我也是借助了 bygg <span class="citation"
data-cites="一个虚空的blog地址">@一个虚空的blog地址</span> 的力量才勉强
AK 了</p>
</blockquote>
<p>难点主要在 deep clone 和 所属关系的复制</p>
<p>deep clone 这里呼应了前面说的向下转型 downcasting，具体来说，需要根据
Commodity 的类型创建对应的 Commodity 副本，此时需要用到 instanceof
运算符</p>
<p>具体的实现可以见代码，代码我放到 GitHub仓库 里了</p>
<p>这里的版本控制的实现，和 Git
的好像不大一样，先挖个坑，有空思考了回来填上</p>
<p>一个细的点在于，不能对 Adventurer 所拥有的 Adventurer 直接 deep
clone</p>
<p>举个例子，A 雇佣了 B，如果 deep clone，B 使用道具后的后果不能同步给 A
雇佣的这个 B，所以两个 B 就不一样了。这里直接 shallow
copy即可（其实也节省了代码量）</p>
<h2 id="pre2_task1">Pre2_task1</h2>
<p>挺好做的，可以用捕获组，也可以用字符串类的方法，不过后面迭代比较痛苦</p>
<p>另外，关于 substring()
方法，建议大家多试试下标的选择。不要怕麻烦，这个地方很可能背刺你</p>
<h2 id="pre2_task2">Pre2_task2</h2>
<p>这次也很简单。我感觉正则的题目比第一次的大模拟还是友好不少的</p>
<h2 id="pre2_task3">Pre2_task3</h2>
<p>注意跨年日期的判断（可以参考我的狼人样例，能过了强测基本没问题）</p>
<h2 id="pre3_task1">Pre3_task1</h2>
<p>想起pre1_task3那周，我在图书馆坐了整整一周，最后还是de不出bug，果然肉眼debug的形式是不行的。</p>
<p>建议大家自己捏一些数据</p>
<p>我的数据也放在 GitHub仓库 里了</p>
<p>正则表达式的题目，就建议大家多试多练多学习。我个人感觉没什么好说的，大家比我聪明，看一看就能学会</p>
<p>我一直没学先验后验什么的，挖个坑，下学期学，下学期一定学，嗯</p>
<h2 id="最后的最后">最后的最后</h2>
<p>看过很多博客，还是觉得qsgg的“<strong>只有</strong>一个曲别针的小男孩”的故事最入我心</p>
<p>小男孩经过一系列的交换，把手里的曲别针换成了别墅</p>
<p>可我觉得这故事没什么意思，我更想看到小男孩用别墅继续交换继续交换，最后虽然损失了别墅，但是收获了远比别墅珍贵更多的东西，最后云淡风轻：“嗯，不过损失一个曲别针而已，我得到的是更大的世界”</p>
<p>我来的时候连一个曲别针也没有，我走的时候却收获了很多故事，认识了很多朋友，收获了比别墅价值大得多的东西</p>
<p>很多很多年以后，可能我还会想起那个新主楼的夜晚和风景，和五教二楼的美丽对拍</p>
<p>或许要问有什么遗憾，那就是最后一次的作业赶时间没用递归下降完成。以及这门课确实有点耽误我计组的时间了，不过这都过去了</p>
<p>他给我的最大的宝藏就是，如果方法得当，愿意多做调试愿意自己多捏数据，你能够对自己的成绩有十足的把握，每次强测之前我都有信心这次再拿100。以及，他让我知道小白也有从零开始成为金刚的权利，真的让我尝到了取得小成就的满足</p>
<p>后面的文字写的有些仓促，主要是计组进度压上来，顶不住了，对不住各位认真读到这里的看官</p>
<p>以及正则的题目确实不难，希望大家认真学认真练</p>
<p>希望诸位看官能从我这堆毫无章法的文字中读出些东西</p>
<p>如果看完什么也没看明白，那是怪我水平粗浅，与诸位无关</p>
<p>一路顺风</p>
]]></content>
      <categories>
        <category>OO</category>
        <category>S3</category>
      </categories>
      <tags>
        <tag>OO</tag>
        <tag>Pre</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora数学公式</title>
    <url>/MarkDown-Grammar/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>MarkDown 比较全的数学公式语法集合</p>
</blockquote>
<span id="more"></span>
<p>[TOC] &gt; 其实本质是对 Tex 语法的支持</p>
<h3 id="一打开typora选择数学模块">一、打开Typora选择数学模块</h3>
<p>三种打开方式： * 点击“段落” --&gt; “公式块” * 快捷键ctrl + shift +m *
“$$” + 回车</p>
<h3 id="二添加数学公式">二、添加数学公式</h3>
<p>输出美观的数学公式，需要知道他们的格式和代码！
ps:Typora有时出现公式块无法删除，可能是软件bug，Ctrl + /
打开源代码模式，在这里面可以进行删除 <span class="math display">\[
e^{i\pi + 1} = 2
\]</span> ### 三、常用的公式格式代码练习</p>
<ol type="1">
<li>公式块内换行</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">\\ 公式块内换行</span><br></pre></td></tr></table></figure>
<ol start="2" type="1">
<li>常用基本函数：</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">1、x^2 //上下标</span><br><span class="line">2、1/2 //分式1</span><br><span class="line">3、\frac&#123;1&#125;&#123;2&#125; //分式2</span><br><span class="line">4、\cdots //省略号</span><br><span class="line">5、\sqrt&#123;4&#125; //开根号</span><br><span class="line">6、\vec&#123;a&#125; //矢量</span><br><span class="line">7、\int&#123;x&#125;dx //积分1</span><br><span class="line">8、\int_&#123;1&#125;^&#123;2&#125;dx //积分2</span><br><span class="line">9、\lim&#123;a + b&#125; //极限1</span><br><span class="line">10、\lim_&#123;n\rightarrow + \infty&#125; //极限2</span><br><span class="line">11、\sum_&#123;n=1&#125;^&#123;100&#125;&#123;a_n&#125; //累加</span><br><span class="line">12、\prod_&#123;n=1&#125;^&#123;199&#125;&#123;x_n&#125; //累乘</span><br><span class="line">13、\sin&#123;(x + y)&#125; //三角函数</span><br><span class="line">14、\ln2 //对数函数1</span><br><span class="line">15、\log_28 //对数函数2</span><br><span class="line">16、a&#x27; //导数</span><br><span class="line">17、\partial&#123;F&#125; //偏微分</span><br><span class="line">18、\iint&#123;xy&#125;dxdy //二重积分</span><br><span class="line">19、\oiint&#123;x + y&#125;dxdy //二重环路积分</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p><span class="math display">\[
1、x^2\\
2、1/2\\
3、\frac{1}{2}\\
4、\cdots\\
5、\sqrt{4}\\
6、\vec{a}\\
7、\int{x}dx\\
8、\int_{1}^{2}dx\\
9、\lim{a + b}\\
10、\lim_{n\rightarrow + \infty}\\
11、\sum_{n=1}^{100}{a_n}\\
12、\prod_{n=1}^{199}{x_n}\\
13、\sin{(x + y)}\\
14、\ln2\\
15、\log_28\\
16、a&#39;\\
17、\partial{F}\\
18、\iint{xy}dxdy\\
19、\oiint{(x + y)}dxdy\\
\]</span></p>
<ol start="3" type="1">
<li>公式块内左对齐：</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;aligned&#125; //</span><br><span class="line">&amp;1、y = \sin(x) \\&amp;为对齐格式符</span><br><span class="line">&amp;2、</span><br><span class="line">\end&#123;aligned&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p><span class="math display">\[
\begin{aligned}
&amp;1、y = \sin(x) \\
&amp;2、
\end{aligned}
\]</span></p>
<ol start="4" type="1">
<li>下标</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">v_1\\</span><br><span class="line">v_&#123;体积&#125; 下标为多个英文字母时，使用&#123;&#125;包起来：</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p><span class="math display">\[
v_1\\
v_{体积}
\]</span></p>
<ol start="5" type="1">
<li>关系运算符：</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">\pm // ± plus&amp;minor</span><br><span class="line">\times // ×</span><br><span class="line">\div // ÷ divide</span><br><span class="line">\equiv // == equal</span><br><span class="line">\le // &lt;= lower&amp;equal</span><br><span class="line">\ge // &gt;= greater&amp;equal</span><br></pre></td></tr></table></figure>
<p><span class="math display">\[
\pm\\
\times \\
\div\\
\equiv\\
\leq\\
\geq
\]</span></p>
<ol start="6" type="1">
<li>花括号公式组合：</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">c(u) =</span><br><span class="line">\begin&#123;cases&#125; </span><br><span class="line">\sqrt\frac&#123;1&#125;&#123;N&#125;, u = 0 \\ </span><br><span class="line">\sum_&#123;n=1&#125;^&#123;100&#125;&#123;a_n&#125;, n \neq0  neq:not equal</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p><span class="math display">\[
c(u) =
\begin{cases}
\sqrt\frac{1}{N}, u = 0 \\
\sum_{n=1}^{100}{a_n}, n \neq0
\end{cases}
\]</span></p>
<ol start="7" type="1">
<li>空格：</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">a \quad b</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p><span class="math display">\[
a \quad b
\]</span></p>
<ol start="8" type="1">
<li>矩阵：</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;matrix&#125;</span><br><span class="line">0&amp;1&amp;1\\</span><br><span class="line">1&amp;1&amp;0\\</span><br><span class="line">1&amp;0&amp;1\\</span><br><span class="line">\end&#123;matrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p><span class="math display">\[
\begin{matrix}
0&amp;1&amp;1\\
1&amp;1&amp;0\\
1&amp;0&amp;1\\
\end{matrix}
\]</span></p>
<blockquote>
<p>在起始、结束标记用下列词替换 matrix：</p>
<p>pmatrix：小括号边框 bmatrix：中括号边框 ` Bmatrix：大括号边框
vmatrix：单竖线边框 Vmatrix：双竖线边框</p>
</blockquote>
<p><span class="math display">\[
\begin{pmatrix}
0&amp;1&amp;1\\
1&amp;1&amp;0\\
1&amp;0&amp;1\\
\end{pmatrix}
\]</span></p>
<p><span class="math display">\[
\begin{vmatrix}
0&amp;1&amp;1\\
1&amp;1&amp;0\\
1&amp;0&amp;1\\
\end{vmatrix}
\]</span></p>
<ol start="9" type="1">
<li>特殊字符及希腊字母表：</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\infty //无穷</span><br><span class="line">\emptyset //空集</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p><span class="math display">\[
\infty \\
\emptyset
\]</span></p>
<ol start="10" type="1">
<li>更多字符 更多特殊字符及希腊字母代码见wps中LaTex公式符号</li>
</ol>
<p>① 常用字母字符</p>
<figure>
<img
src="https://i0.hdslb.com/bfs/article/a76a8e35df7722e6b3d02b70f579380bc768afbf.png@921w_459h_progressive.webp"
alt="img" />
<figcaption aria-hidden="true">img</figcaption>
</figure>
<p>② 特殊符号</p>
<figure>
<img
src="https://i0.hdslb.com/bfs/article/5f471724c265c39e6c832a9a3212f67aa094791e.png@942w_387h_progressive.webp"
alt="img" />
<figcaption aria-hidden="true">img</figcaption>
</figure>
<figure>
<img
src="https://i0.hdslb.com/bfs/article/a750d31bd5a69f8dd8b58c6b2d690988025d323c.png@942w_1500h_progressive.webp"
alt="img" />
<figcaption aria-hidden="true">img</figcaption>
</figure>
]]></content>
      <categories>
        <category>Grammar</category>
        <category>S2</category>
      </categories>
      <tags>
        <tag>Grammar</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode配置latex</title>
    <url>/vscode-configure-latex/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>记录采用 <span class="math inline">\(MixTEX\)</span> 在 <span
class="math inline">\(VSCode\)</span> 搭建 <span
class="math inline">\(\LaTeX\)</span> 环境的过程</p>
</blockquote>
<span id="more"></span>
<h2 id="安装编译器">安装编译器</h2>
<p>原 <code>TexLive</code> 体积过大，采用包管理器进行安装</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 MikTeX</span></span><br><span class="line">scoop install miktex</span><br></pre></td></tr></table></figure>
<h2 id="配置-vscode">配置 VSCode</h2>
<p>安装 <code>LaTeX Workshop</code> 扩展</p>
<p>加入如下配置：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;latex-workshop.latex.tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-shell-escape&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;%DOC%&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;%DOCFILE%&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;latex-workshop.latex.recipes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;xelatex&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex -&gt; bibtex -&gt; xelatex*2&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span> <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="解决报错">解决报错</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">major issue: So far, you have not checked for MiKTeX updates.</span><br></pre></td></tr></table></figure>
<p>找到MikTex
Console这个程序，右键点击“以管理员身份运行”，然后点击“检查更新”</p>
<blockquote>
<p><em>Ref:</em></p>
<p><em><a href="https://zhuanlan.zhihu.com/p/139210056">搭建 LaTeX
舒适写作环境（VSCode） - 知乎 (zhihu.com)</a></em></p>
</blockquote>
]]></content>
      <categories>
        <category>Path</category>
        <category>Latex</category>
        <category>S5</category>
      </categories>
      <tags>
        <tag>Path</tag>
        <tag>Latex</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Group Theory</title>
    <url>/visual-group-theory-notes/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="7b39abf5d4c52d59169650b66a3c0d769ba1bcd391532fa661ee6ba7b34e329c"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>群论</tag>
        <tag>数学基础</tag>
        <tag>课程笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Python基础教程（第3版）阅读笔记</title>
    <url>/python-book-notes/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="1aeddc6824504eccbe18f91a3538b6929ecaf0a176605b68836d5819d0f51bfb"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Python</category>
        <category>读书笔记</category>
        <category>S3 Winter</category>
        <category>S4 Summer</category>
      </categories>
      <tags>
        <tag>读书笔记</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>WangDao OS Chapter3</title>
    <url>/WD-OS-Chap3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>王道考研 OS 的枯燥无味的 第三章 内存管理 知识点罗列</p>
</blockquote>
<span id="more"></span>
<h2 id="内存的基础知识">内存的基础知识</h2>
<p>按xx编址，一个地址对应的存储单元对应的是1xx</p>
<p>比如按字节编址</p>
<p>程序执行前需要先放到内存中才能被CPU处理</p>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230301211427483.png"
alt="image-20230301211427483" />
<figcaption aria-hidden="true">image-20230301211427483</figcaption>
</figure>
<h2 id="内存管理的概念">内存管理的概念</h2>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230301211633198.png"
alt="image-20230301211633198" />
<figcaption aria-hidden="true">image-20230301211633198</figcaption>
</figure>
<p>重定位寄存器中存放的是进程的起始物理地址。界地址寄存器中存放的是进程的最大逻辑地址。</p>
<h2
id="覆盖与交换内存空间的扩充方式">覆盖与交换（内存空间的扩充方式）</h2>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230301212008948.png"
alt="image-20230301212008948" />
<figcaption aria-hidden="true">image-20230301212008948</figcaption>
</figure>
<p>暂时换出外存等待的进程状态为挂起状态（挂起态，suspend）</p>
<p>文件区空间：离散分配方式</p>
<p>对换区空间：连续分配方式</p>
<p>对换区的I/O速度更快</p>
<p>交换通常在许多进程运行且内存吃紧时进行，而系统负荷降低就暂停</p>
<p>PCB会常驻内存，不会被换出外存</p>
<h2 id="连续分配管理方式">连续分配管理方式</h2>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230302080121468.png"
alt="image-20230302080121468" />
<figcaption aria-hidden="true">image-20230302080121468</figcaption>
</figure>
<p>三种连续分配管理都无外部碎片</p>
<h2 id="动态内存分配方法">动态内存分配方法</h2>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230302084959938.png"
alt="image-20230302084959938" />
<figcaption aria-hidden="true">image-20230302084959938</figcaption>
</figure>
<p>​</p>
<h2 id="基本分页存储管理的基本概念">基本分页存储管理的基本概念</h2>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230302085922698.png"
alt="image-20230302085922698" />
<figcaption aria-hidden="true">image-20230302085922698</figcaption>
</figure>
<p>页号可以隐藏存储（如用hash来保存）</p>
<p>然进程的各个页面是离散存放的，但是页面内部是连续存放的</p>
<p>页号 = 逻辑地址/页面长度</p>
<p>页内偏移量 = 逻辑地址 % 页面长度</p>
<h2 id="基本地址变换结构">基本地址变换结构</h2>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230303145710216.png"
alt="image-20230303145710216" />
<figcaption aria-hidden="true">image-20230303145710216</figcaption>
</figure>
<p>过程再整理下</p>
<h2 id="具有快表的地址变换机构">具有快表的地址变换机构</h2>
<p>是基本地址变换机构的改进版本</p>
<h2 id="两级页表">两级页表</h2>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230303150047904.png"
alt="image-20230303150047904" />
<figcaption aria-hidden="true">image-20230303150047904</figcaption>
</figure>
<h2 id="基本分段存储管理方式">基本分段存储管理方式</h2>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230303150248805.png"
alt="image-20230303150248805" />
<figcaption aria-hidden="true">image-20230303150248805</figcaption>
</figure>
<h2 id="段页式管理">段页式管理</h2>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230303150603552.png"
alt="image-20230303150603552" />
<figcaption aria-hidden="true">image-20230303150603552</figcaption>
</figure>
<h2 id="虚拟内存的基本概念">虚拟内存的基本概念</h2>
<p>在传统存储管理方式的基础上引入了交换技术、覆盖技术，使得内存利用率有所提升，并且能从逻辑上扩充内存容量</p>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230303150658994.png"
alt="image-20230303150658994" />
<figcaption aria-hidden="true">image-20230303150658994</figcaption>
</figure>
<p>虚拟内存的最大容量是由计算机的地址结构（CPU寻址范围）确定的</p>
<p>虚拟内存的实际容量 = min（内存和外存容量之和，CPU寻址范围）</p>
<h2 id="请求分页管理方式">请求分页管理方式</h2>
<h2 id="页面置换算法">页面置换算法</h2>
<p>好多，详见 PPT，不做总结了，直接贴图吧（不是）</p>
<h2 id="页面分配策略">页面分配策略</h2>
]]></content>
      <categories>
        <category>OS</category>
        <category>WangDao</category>
        <category>S3 Winter</category>
      </categories>
      <tags>
        <tag>OS</tag>
        <tag>WangDao</tag>
      </tags>
  </entry>
  <entry>
    <title>Pro Git 读书笔记</title>
    <url>/Pro-Git-notes/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p><em>Written on 08-09-2022</em></p>
<p>很重要的先导内容，但是 missing 了</p>
</blockquote>
<span id="more"></span>
<p><del>你一定会在我这里看到 Table of Contents</del></p>
<p>[TOC]</p>
<h2 id="起步">起步</h2>
<h3 id="不重要的part">不重要的part</h3>
<h3 id="git-基础但我认为叫git原理更好些">Git
基础（但我认为叫Git原理更好些）</h3>
<p>理解原理有助于使用</p>
<h4 id="直接记录快照">直接记录快照</h4>
<p>其它大部分系统以文件变更列表的方式存储信息。
这类系统将它们保存的信息看作是一组基本文件和每个文件随时间逐步累积的差异。</p>
<figure>
<img src="https://www.progit.cn/images/deltas.png"
alt="存储每个文件与初始版本的差异。" />
<figcaption
aria-hidden="true">存储每个文件与初始版本的差异。</figcaption>
</figure>
<p>Git 更像是把数据看作是对小型文件系统的一组快照。每次你提交更新，或在
Git
中保存项目状态时，它主要对当时的全部文件制作一个快照并保存这个快照的索引。
Git 对待数据更像是一个 <strong>快照流</strong>。</p>
<figure>
<img src="https://www.progit.cn/images/snapshots.png"
alt="Git 存储项目随时间改变的快照。" />
<figcaption aria-hidden="true">Git
存储项目随时间改变的快照。</figcaption>
</figure>
<h4 id="本地执行操作">本地执行操作</h4>
<p>快而方便，可以进行离线操作</p>
<h4 id="保证完整性">保证完整性</h4>
<p>Git 中所有数据在存储前都计算校验和，然后以校验和来引用。
这意味着不可能在 Git 不知情时更改任何文件内容或目录内容。 这个功能建构在
Git 底层，是构成 Git 哲学不可或缺的部分。
若你在传送过程中丢失信息或损坏文件，Git 就能发现。</p>
<p>Git 用以计算校验和的机制叫做 SHA-1 散列（hash，哈希）。 这是一个由 40
个十六进制字符（0-9 和 a-f）组成字符串，基于 Git
中文件的内容或目录结构计算出来。 SHA-1 哈希看起来是这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">24b9da6552252987aa493b52f8696cd6d3b00373</span><br></pre></td></tr></table></figure>
<p>Git 中使用这种哈希值的情况很多，你将经常看到这种哈希值。 实际上，Git
数据库中保存的信息都是以文件内容的哈希值来索引，而不是文件名。</p>
<h4 id="只添加数据">只添加数据</h4>
<p>你执行的 Git 操作，几乎只往 Git 数据库中增加数据， 很难让 Git
执行任何不可逆操作，或者让它以任何方式清除数据。 一旦你提交快照到 Git
中，就难以再丢失数据，特别是如果你定期的推送数据库到其它仓库的话。我们可以尽情做各种尝试，而不怕把事情弄糟。</p>
<h4 id="三种状态">三种状态</h4>
<p>好，请注意。 如果你希望后面的学习更顺利，记住下面这些关于 Git
的概念。 Git
有三种状态，你的文件可能处于其中之一：已提交（committed）、已修改（modified）和已暂存（staged）。
已提交表示数据已经安全的保存在本地数据库中。
已修改表示修改了文件，但还没保存到数据库中。
已暂存表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。</p>
<p>由此引入 Git 项目的三个工作区域的概念：Git
仓库、工作目录以及暂存区域。</p>
<figure>
<img src="https://www.progit.cn/images/areas.png"
alt="工作目录、暂存区域以及 Git 仓库。" />
<figcaption aria-hidden="true">工作目录、暂存区域以及 Git
仓库。</figcaption>
</figure>
<p>Git 仓库是 Git 用来保存项目的元数据和对象数据库的地方。 <strong>这是
Git
中最重要的部分</strong>，从其它计算机克隆仓库时，拷贝的就是这里的数据。</p>
<p>工作目录是对项目的某个版本独立提取出来的内容。 这些从 Git
仓库的压缩数据库中提取出来的文件，放在磁盘上供你使用或修改。</p>
<p>暂存区域是一个文件，保存了下次将提交的文件列表信息，一般在 Git
仓库目录中。 有时候也被称作`‘索引’'，不过一般说法还是叫暂存区域。</p>
<p>基本的 Git 工作流程如下：</p>
<ol type="1">
<li>在工作目录中修改文件。</li>
<li>暂存文件，将文件的快照放入暂存区域。</li>
<li>提交更新，找到暂存区域的文件，将快照永久性存储到 Git 仓库目录。</li>
</ol>
<p>如果 Git 目录中保存着特定版本的文件，就属于已提交状态。
如果作了修改并已放入暂存区域，就属于已暂存状态。
如果自上次取出后，作了修改但还没有放到暂存区域，就是已修改状态。 在<a
href="https://www.progit.cn/#_git_basics_chapter">Git
基础</a>一章，你会进一步了解这些状态的细节，并学会如何根据文件状态实施后续操作，以及怎样跳过暂存直接提交。</p>
<h4 id="the-three-states">The Three States</h4>
<p>Pay attention now — here is the main thing to remember about Git if
you want the rest of your learning process to go smoothly. Git has three
main states that your files can reside in: <em>modified</em>,
<em>staged</em>, and <em>committed</em>:</p>
<ul>
<li>Modified means that you have changed the file but have not committed
it to your database yet.</li>
<li>Staged means that you have marked a modified file in its current
version to go into your next commit snapshot.</li>
<li>Committed means that the data is safely stored in your local
database.</li>
</ul>
<p>This leads us to the three main sections of a Git project:
<strong>the working tree, the staging area, and the Git
directory</strong>.The working tree is a single checkout of one version
of the project. These files are pulled out of the compressed database in
the Git directory and placed on disk for you to use or modify.</p>
<p>The staging area is a file, generally contained in your Git
directory, that stores information about what will go into your next
commit. Its technical name in Git parlance is the “index”, but the
phrase “staging area” works just as well.</p>
<p>The Git directory is where Git stores the metadata and object
database for your project. This is the most important part of Git, and
it is what is copied when you <em>clone</em> a repository from another
computer.</p>
<p>The basic Git workflow goes something like this:</p>
<ol type="1">
<li>You modify files in your working tree.</li>
<li>You selectively stage just those changes you want to be part of your
next commit, which adds <em>only</em> those changes to the staging
area.</li>
<li>You do a commit, which takes the files as they are in the staging
area and stores that snapshot permanently to your Git directory.</li>
</ol>
<p>If a particular version of a file is in the Git directory, it’s
considered <em>committed</em>. If it has been modified and was added to
the staging area, it is <em>staged</em>. And if it was changed since it
was checked out but has not been staged, it is <em>modified</em>. In <a
href="https://git-scm.com/book/en/v2/ch00/ch02-git-basics-chapter">Git
Basics</a>, you’ll learn more about these states and how you can either
take advantage of them or skip the staged part entirely.</p>
<blockquote>
<p>这段文字太重要了，<del>中译本又译得太好让人不忍卒读</del>，所以我把中英版本都留在这里了。总结下来就是几个知识点：</p>
<p>① 有三个地方存放文件：working tree、the staging area、Git
directory（按照“从弱到强”的顺序）</p>
<ul>
<li>对三个地方的介绍</li>
</ul>
<p>②
file有三个状态：modified、staged、commited（按照“从弱到强”的顺序）</p>
<ul>
<li>对三种状态的介绍</li>
</ul>
</blockquote>
<h3 id="命令行">命令行</h3>
<p>见其他文章</p>
<h3 id="初次运行-git-前的配置">初次运行 Git 前的配置</h3>
<blockquote>
<p>笔者注：我感觉这才是Git Missing
Semester，这解答了我很多疑问（比如config --global
user）并且指引了解决问题的方法</p>
</blockquote>
<p>既然已经在系统上安装了 Git，你会想要做几件事来定制你的 Git 环境。
每台计算机上只需要配置一次，程序升级时会保留配置信息。
你可以在任何时候再次通过运行命令来修改它们。</p>
<p>Git 自带一个 <code>git config</code> 的工具来帮助设置控制 Git
外观和行为的配置变量。 这些变量存储在三个不同的位置：</p>
<ol type="1">
<li><code>/etc/gitconfig</code> 文件:
包含系统上每一个用户及他们仓库的通用配置。 如果使用带有
<code>--system</code> 选项的 <code>git config</code>
时，它会从此文件读写配置变量。</li>
<li><code>~/.gitconfig</code> 或 <code>~/.config/git/config</code>
文件：只针对当前用户。 可以传递 <code>--global</code> 选项让 Git
读写此文件。</li>
<li>当前使用仓库的 Git 目录中的 <code>config</code> 文件（就是
<code>.git/config</code>）：针对该仓库。</li>
</ol>
<p>每一个级别覆盖上一级别的配置，所以 <code>.git/config</code>
的配置变量会覆盖 <code>/etc/gitconfig</code> 中的配置变量。</p>
<p>在 Windows 系统中，Git 会查找 <code>$HOME</code> 目录下（一般情况下是
<code>C:\Users\$USER</code>）的 <code>.gitconfig</code> 文件。 Git
同样也会寻找 <code>/etc/gitconfig</code> 文件，但只限于 MSys
的根目录下，即安装 Git 时所选的目标位置。</p>
<h4 id="用户信息">用户信息</h4>
<p>当安装完 Git 应该做的第一件事就是设置你的用户名称与邮件地址。
这样做很重要，因为每一个 Git
的提交都会使用这些信息，并且它会写入到你的每一次提交中，不可更改：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global user.name <span class="string">&quot;John Doe&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global user.email johndoe@example.com</span></span><br></pre></td></tr></table></figure>
<p>再次强调，如果使用了 <code>--global</code>
选项，那么该命令只需要运行一次，因为之后无论你在该系统上做任何事情， Git
都会使用那些信息。
当你想针对特定项目使用不同的用户名称与邮件地址时，可以在那个项目目录下运行没有
<code>--global</code> 选项的命令来配置。</p>
<p>很多 GUI 工具都会在第一次运行时帮助你配置这些信息。</p>
<h4 id="文本编辑器">文本编辑器</h4>
<p>既然用户信息已经设置完毕，你可以配置默认文本编辑器了，当 Git
需要你输入信息时会调用它。 如果未配置，Git
会使用操作系统默认的文本编辑器，通常是 Vim。
如果你想使用不同的文本编辑器，例如 Emacs，可以这样做：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global core.editor emacs</span></span><br></pre></td></tr></table></figure>
<table>
<colgroup>
<col style="width: 10%" />
<col style="width: 89%" />
</colgroup>
<thead>
<tr class="header">
<th>WARNING</th>
<th>Vim 和 Emacs 是像 Linux 与 Mac 等基于 Unix
的系统上开发者经常使用的流行的文本编辑器。
如果你对这些编辑器都不是很了解或者你使用的是 Windows
系统，那么可能需要搜索如何在 Git 中配置你最常用的编辑器。
如果你不设置编辑器并且不知道 Vim 或 Emacs
是什么，当它们运行起来后你可能会被弄糊涂、不知所措。</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h4 id="检查配置信息">检查配置信息</h4>
<p>如果想要检查你的配置，可以使用 <code>git config --list</code>
命令来列出所有 Git 当时能找到的配置。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --list</span></span><br><span class="line">user.name=John Doe</span><br><span class="line">user.email=johndoe@example.com</span><br><span class="line">color.status=auto</span><br><span class="line">color.branch=auto</span><br><span class="line">color.interactive=auto</span><br><span class="line">color.diff=auto</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>你可能会看到重复的变量名，因为 Git
会从不同的文件中读取同一个配置（例如：<code>/etc/gitconfig</code> 与
<code>~/.gitconfig</code>）。 这种情况下，Git
会使用它找到的每一个变量的最后一个配置。</p>
<p>你可以通过输入 <code>git config &lt;key&gt;</code>： 来检查 Git
的某一项配置</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config user.name</span></span><br><span class="line">John Doe</span><br></pre></td></tr></table></figure>
<h3 id="获取帮助">获取帮助</h3>
<p>若你使用 Git 时需要获取帮助，有三种方法可以找到 Git
命令的使用手册：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">help</span> &lt;verb&gt;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git &lt;verb&gt; --<span class="built_in">help</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">man git-&lt;verb&gt;</span></span><br></pre></td></tr></table></figure>
<p>例如，要想获得 config 命令的手册，执行</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">help</span> config</span></span><br></pre></td></tr></table></figure>
<p>这些命令很棒，因为你随时随地可以使用而无需联网。
如果你觉得手册或者本书的内容还不够用，你可以尝试在 Freenode IRC 服务器（
irc.freenode.net ）的 <code>#git</code> 或 <code>#github</code>
频道寻求帮助。 这些频道经常有上百人在线，他们都精通 Git
并且乐于助人。</p>
<h2 id="git-基础">Git 基础</h2>
<p><strong>本章是最重要的一章，涵盖使用 Git
完成各种工作中将要使用的各种基本命令。</strong>
在学习完本章之后，你应该能够配置并初始化一个仓库（repository）、开始或停止跟踪（track）文件、暂存（stage）或提交（commit)更改。
本章也将向你演示如何配置 Git
来忽略指定的文件和文件模式、如何迅速而简单地撤销错误操作、如何浏览你的项目的历史版本以及不同提交（commits）间的差异、如何向你的远程仓库推送（push）以及如何从你的远程仓库拉取（pull）文件。</p>
<h3 id="获取-git-仓库">获取 Git 仓库</h3>
<p>有两种取得 Git 项目仓库的方法。
第一种是在现有项目或目录下导入所有文件到 Git 中；
第二种是从一个服务器克隆一个现有的 Git 仓库。</p>
<h4 id="在现有目录中初始化仓库">在现有目录中初始化仓库</h4>
<p>如果你打算使用 Git
来对现有的项目进行管理，你只需要进入该项目目录并输入：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git init</span></span><br></pre></td></tr></table></figure>
<p>该命令将创建一个名为 <code>.git</code>
的子目录，这个子目录含有你初始化的 Git 仓库中所有的必须文件，这些文件是
Git 仓库的骨干。
但是，在这个时候，我们仅仅是做了一个初始化的操作，你的项目里的文件还没有被跟踪。
(参见 <a href="https://www.progit.cn/#_git_internals">Git 内部原理</a>
来了解更多关于到底 <code>.git</code> 文件夹中包含了哪些文件的信息。)</p>
<p>如果你是在一个已经存在文件的文件夹（而不是空文件夹）中初始化 Git
仓库来进行版本控制的话，你应该开始跟踪这些文件并提交。 你可通过
<code>git add</code> 命令来实现对指定文件的跟踪，然后执行
<code>git commit</code> 提交：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add *.c</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add LICENSE</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&#x27;initial project version&#x27;</span></span></span><br></pre></td></tr></table></figure>
<p>稍后我们再逐一解释每一条指令的意思。
现在，你已经得到了一个实际维护（或者说是跟踪）着若干个文件的 Git
仓库。</p>
<h4 id="克隆现有的仓库">克隆现有的仓库</h4>
<p>如果你想获得一份已经存在了的 Git
仓库的拷贝，比如说，你想为某个开源项目贡献自己的一份力，就要用到
<code>git clone</code> 命令。 Git 克隆的是该 Git
仓库服务器上的几乎所有数据，而不是仅仅复制完成你的工作所需要的文件。
当你执行 <code>git clone</code> 命令的时候，默认配置下远程 Git
仓库中的每一个文件的每一个版本都将被拉取下来。
事实上，如果你的服务器的磁盘坏掉了，你通常可以使用任何一个克隆下来的用户端来重建服务器上的仓库（虽然可能会丢失某些服务器端的挂钩设置，但是所有版本的数据仍在，详见
<a href="https://www.progit.cn/#_git_on_the_server">在服务器上搭建
Git</a> ）。</p>
<p>克隆仓库的命令格式是 <code>git clone [url]</code> 。 比如，要克隆 Git
的可链接库 libgit2，可以用下面的命令：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/libgit2/libgit2</span></span><br></pre></td></tr></table></figure>
<p>这会在当前目录下创建一个名为 “libgit2”
的目录，并在这个目录下初始化一个 <code>.git</code>
文件夹，从远程仓库拉取下所有数据放入 <code>.git</code>
文件夹，然后从中读取最新版本的文件的拷贝。</p>
<p>自定义本地仓库的名字的命令：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/libgit2/libgit2 mylibgit</span></span><br></pre></td></tr></table></figure>
<p>这将执行与上一个命令相同的操作，不过在本地创建的仓库名字变为
<code>mylibgit</code>。</p>
<p>Git 支持多种数据传输协议。 详见<a
href="https://www.progit.cn/#_git_on_the_server">在服务器上搭建
Git</a></p>
<h3 id="记录更新到仓库">记录更新到仓库</h3>
<p>现在我们手上有了一个真实项目的 Git
仓库，并从这个仓库中取出了所有文件的工作拷贝。
接下来，对这些文件做些修改，在完成了一个阶段的目标之后，提交本次更新到仓库。</p>
<p>请记住，<strong>你工作目录下的每一个文件都不外乎这两种状态：已跟踪或未跟踪。</strong>
已跟踪的文件是指那些<strong>被纳入了版本控制</strong>的文件，在上一次快照中有它们的记录，在工作一段时间后，它们的状态可能是未修改，已修改或已放入暂存区。
工作目录中除已跟踪文件以外的所有其它文件都属于未跟踪文件，它们既不存在于上次快照的记录中，也没有放入暂存区。
<strong>初次克隆</strong>某个仓库的时候，工作目录中的所有文件都属于<strong>已跟踪文件</strong>，并处于未修改状态。</p>
<p>编辑过某些文件之后，由于自上次提交后你对它们做了修改，Git
将它们标记为已修改文件。
我们逐步将这些修改过的文件放入暂存区，然后提交所有暂存了的修改，如此反复。所以使用
Git 时文件的生命周期如下：</p>
<figure>
<img src="https://www.progit.cn/images/lifecycle.png"
alt="Git 下文件生命周期图。" />
<figcaption aria-hidden="true">Git 下文件生命周期图。</figcaption>
</figure>
<p>Figure 8. 文件的状态变化周期</p>
<blockquote>
<p>虽然图是down的（划去），但是这个太精辟了，一张图就解释了所有的内容！！！吹爆！！！</p>
</blockquote>
<h4 id="检查当前文件状态">检查当前文件状态</h4>
<p>查看哪些文件处于什么状态的主要手段是 <code>git status</code> 命令。
如果在克隆仓库后立即使用此命令，会看到类似这样的输出：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure>
<p>这说明你现在的工作目录<strong>相当干净</strong>。换句话说，所有已跟踪文件在上次提交后都未被更改过。
此外，上面的信息还表明，当前目录下没有出现任何处于未跟踪状态的新文件，否则
Git 会在这里列出来。
最后，该命令还显示了当前所在分支，并告诉你这个分支同远程服务器上对应的分支没有偏离。
现在，分支名是 “master”,这是默认的分支名。 我们在 <a
href="https://www.progit.cn/#_git_branching">Git 分支</a>
会详细讨论分支和引用。</p>
<p>现在，让我们在项目下创建一个新的 README 文件。
如果之前并不存在这个文件，使用 <code>git status</code>
命令，你将看到一个新的未跟踪文件：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;My Project&#x27;</span> &gt; README</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">    README</span><br><span class="line"></span><br><span class="line">nothing added to commit but untracked files present (use &quot;git add&quot; to track)</span><br></pre></td></tr></table></figure>
<p>在状态报告中可以看到新建的 README 文件出现在
<code>Untracked files</code> 下面。 未跟踪的文件意味着 Git
在之前的快照（提交）中没有这些文件；<strong>Git
不会自动将之纳入跟踪范围</strong>，除非你明明白白地告诉它“我需要跟踪该文件”，
<strong>这样的处理让你不必担心将生成的二进制文件或其它不想被跟踪的文件包含进来</strong>。
不过现在的例子中，我们确实想要跟踪管理 README 这个文件。</p>
<h4 id="跟踪新文件">跟踪新文件</h4>
<p>使用命令 <code>git add</code> 开始跟踪一个文件。 所以，要跟踪 README
文件，运行：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add README</span></span><br></pre></td></tr></table></figure>
<p>此时再运行 <code>git status</code> 命令，会看到 README
文件已被跟踪，并处于暂存状态：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    new file:   README</span><br></pre></td></tr></table></figure>
<p>只要在 <code>Changes to be committed</code>
这行下面的，就说明是已暂存状态。
如果此时提交，那么该文件此时此刻的版本将被留存在历史记录中。
你可能会想起之前我们使用 <code>git init</code> 后就运行了
<code>git add (files)</code> 命令，开始跟踪当前目录下的文件。
<code>git add</code>
命令使用文件或目录的路径作为参数；如果参数是目录的路径，该命令将递归地跟踪该目录下的<strong>所有文件</strong>。</p>
<h4 id="暂存已修改文件">暂存已修改文件</h4>
<p>现在我们来修改一个已被跟踪的文件。 如果你修改了一个名为
<code>CONTRIBUTING.md</code> 的已被跟踪的文件，然后运行
<code>git status</code> 命令，会看到下面内容：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    new file:   README</span><br><span class="line"></span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">    modified:   CONTRIBUTING.md</span><br></pre></td></tr></table></figure>
<p>文件 <code>CONTRIBUTING.md</code> 出现在
<code>Changes not staged for commit</code>
这行下面，说明已跟踪文件的内容发生了变化，但还没有放到暂存区。
要暂存这次更新，需要运行 <code>git add</code> 命令。
这是个多功能命令：<strong>可以用它开始跟踪新文件，或者把已跟踪的文件放到暂存区，还能用于合并时把有冲突的文件标记为已解决状态等</strong>。
<strong>将这个命令理解为“添加内容到下一次提交中”而不是“将一个文件添加到项目中”要更加合适</strong>。
现在让我们运行 <code>git add</code>
将"CONTRIBUTING.md"放到暂存区，然后再看看 <code>git status</code>
的输出：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add CONTRIBUTING.md</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    new file:   README</span><br><span class="line">    modified:   CONTRIBUTING.md</span><br></pre></td></tr></table></figure>
<p>现在两个文件都已暂存，下次提交时就会一并记录到仓库。
假设此时，你想要在 <code>CONTRIBUTING.md</code> 里再加条注释，
重新编辑存盘后，准备好提交。 不过且慢，再运行 <code>git status</code>
看看：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim CONTRIBUTING.md</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    new file:   README</span><br><span class="line">    modified:   CONTRIBUTING.md</span><br><span class="line"></span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">    modified:   CONTRIBUTING.md</span><br></pre></td></tr></table></figure>
<p>怎么回事？ 现在 <code>CONTRIBUTING.md</code>
文件同时出现在暂存区和非暂存区。 这怎么可能呢？ 好吧，实际上 Git
只不过暂存了你运行 <code>git add</code> 命令时的版本，
如果你现在提交，<code>CONTRIBUTING.md</code> 的版本是你最后一次运行
<code>git add</code> 命令时的那个版本，而不是你运行
<code>git commit</code> 时，在工作目录中的当前版本。 所以，运行了
<code>git add</code> 之后又作了修订的文件，需要重新运行
<code>git add</code> 把最新版本重新暂存起来：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add CONTRIBUTING.md</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    new file:   README</span><br><span class="line">    modified:   CONTRIBUTING.md</span><br></pre></td></tr></table></figure>
<h4 id="状态简览">状态简览</h4>
<p><code>git status</code> 命令的输出十分详细，但其用语有些繁琐。
如果你使用 <code>git status -s</code> 命令或
<code>git status --short</code> 命令，你将得到一种更为紧凑的格式输出。
运行 <code>git status -s</code> ，状态报告输出如下：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status -s</span></span><br><span class="line"> M README</span><br><span class="line">MM Rakefile</span><br><span class="line">A  lib/git.rb</span><br><span class="line">M  lib/simplegit.rb</span><br><span class="line">?? LICENSE.txt</span><br></pre></td></tr></table></figure>
<p>新添加的未跟踪文件前面有 <code>??</code>
标记，新添加到暂存区中的文件前面有 <code>A</code>
标记，修改过的文件前面有 <code>M</code> 标记。 你可能注意到了
<code>M</code> 有两个可以出现的位置（即第三行的 <code>MM</code>
，这是两个位置，笔者注），出现在右边的 <code>M</code>
表示该文件被修改了但是还没放入暂存区，出现在靠左边的 <code>M</code>
表示该文件被修改了并放入了暂存区。 例如，上面的状态报告显示：
<code>README</code>
文件在工作区被修改了但是还没有将修改后的文件放入暂存区,<code>lib/simplegit.rb</code>
文件被修改了并将修改后的文件放入了暂存区。 而 <code>Rakefile</code>
在工作区被修改并提交到暂存区后又在工作区中被修改了，所以在暂存区和工作区都有该文件被修改了的记录。</p>
<h4 id="忽略文件">忽略文件</h4>
<p>一般我们总会有些文件无需纳入 Git
的管理，也不希望它们总出现在未跟踪文件列表。
通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。
在这种情况下，我们可以创建一个名为 <code>.gitignore</code>
的文件，列出要忽略的文件模式。 来看一个实际的例子：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> .gitignore</span></span><br><span class="line">*.[oa]</span><br><span class="line">*~</span><br></pre></td></tr></table></figure>
<p>第一行告诉 Git 忽略所有以 <code>.o</code> 或 <code>.a</code>
结尾的文件。一般这类对象文件和存档文件都是编译过程中出现的。 第二行告诉
Git 忽略所有以波浪符（~）结尾的文件，许多文本编辑软件（比如
Emacs）都用这样的文件名保存副本。 此外，你可能还需要忽略 log，tmp 或者
pid 目录，以及自动生成的文档等等。 <strong>要养成一开始就设置好
.gitignore 文件的习惯，以免将来误提交这类无用的文件。</strong></p>
<p>文件 <code>.gitignore</code> 的格式规范如下：</p>
<ul>
<li>所有空行或者以 <code>＃</code> 开头的行都会被 Git 忽略。</li>
<li>可以使用标准的 glob 模式匹配。</li>
<li>匹配模式可以以（<code>/</code>）开头防止递归。</li>
<li>匹配模式可以以（<code>/</code>）结尾指定目录。</li>
<li>要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（<code>!</code>）取反。</li>
</ul>
<p>所谓的 glob 模式是指 shell
所使用的简化了的<strong>正则表达式</strong>。
星号（<code>*</code>）匹配零个或多个任意字符；<code>[abc]</code>
匹配任何一个列在方括号中的字符（这个例子要么匹配一个 a，要么匹配一个
b，要么匹配一个
c）；问号（<code>?</code>）只匹配一个任意字符；如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配（比如
<code>[0-9]</code> 表示匹配所有 0 到 9 的数字）。
使用两个星号（<code>*</code>)
表示匹配任意中间目录，比如<code>a/**/z</code> 可以匹配 <code>a/z</code>,
<code>a/b/z</code> 或 <code>a/b/c/z</code>等。</p>
<blockquote>
<p>注：</p>
<p><strong>Shell</strong>：Shell 是一个用 C
语言编写的应用程序，它是用户使用 Linux
的桥梁。提供了一个访问操作系统内核服务的界面。Shell
既是一种命令语言，又是一种程序设计语言。比如Git Bash（？）</p>
<p><strong>正则表达式</strong>：</p>
</blockquote>
<p>我们再看一个 .gitignore 文件的例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># no .a files</span><br><span class="line">*.a</span><br><span class="line"></span><br><span class="line"># but do track lib.a, even though you&#x27;re ignoring .a files above</span><br><span class="line">!lib.a</span><br><span class="line"></span><br><span class="line"># only ignore the TODO file in the current directory, not subdir/TODO</span><br><span class="line">/TODO</span><br><span class="line"></span><br><span class="line"># ignore all files in the build/ directory</span><br><span class="line">build/</span><br><span class="line"></span><br><span class="line"># ignore doc/notes.txt, but not doc/server/arch.txt</span><br><span class="line">doc/*.txt</span><br><span class="line"></span><br><span class="line"># ignore all .pdf files in the doc/ directory</span><br><span class="line">doc/**/*.pdf</span><br></pre></td></tr></table></figure>
<table>
<colgroup>
<col style="width: 6%" />
<col style="width: 93%" />
</colgroup>
<thead>
<tr class="header">
<th>TIP</th>
<th>GitHub 有一个十分详细的针对数十种项目及语言的
<code>.gitignore</code> 文件列表，你可以在
https://github.com/github/gitignore 找到它.</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h4 id="查看已暂存和未暂存的修改">查看已暂存和未暂存的修改</h4>
<p>如果 <code>git status</code>
命令的输出对于你来说过于模糊，你想知道具体修改了什么地方，可以用
<code>git diff</code> 命令。 稍后我们会详细介绍
<code>git diff</code>，你可能通常会用它来回答这两个问题：当前做的哪些更新还没有暂存？
有哪些更新已经暂存起来准备好了下次提交？ 尽管 <code>git status</code>
已经通过在相应栏下列出文件名的方式回答了这个问题，<code>git diff</code>
将通过文件补丁的格式显示<strong>具体哪些行</strong>发生了改变。</p>
<blockquote>
<p>笔者注：显示了具体内容</p>
</blockquote>
<p>假如再次修改 README 文件后暂存，然后编辑 <code>CONTRIBUTING.md</code>
文件后先不暂存， 运行 <code>status</code> 命令将会看到：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    modified:   README</span><br><span class="line"></span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">    modified:   CONTRIBUTING.md</span><br></pre></td></tr></table></figure>
<p>要查看尚未暂存的文件更新了哪些部分，不加参数直接输入
<code>git diff</code>：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git diff</span></span><br><span class="line">diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md</span><br><span class="line">index 8ebb991..643e24f 100644</span><br><span class="line">--- a/CONTRIBUTING.md</span><br><span class="line">+++ b/CONTRIBUTING.md</span><br><span class="line">@@ -65,7 +65,8 @@ branch directly, things can get messy.</span><br><span class="line"> Please include a nice description of your changes when you submit your PR;</span><br><span class="line"> if we have to read the whole diff to figure out why you&#x27;re contributing</span><br><span class="line"> in the first place, you&#x27;re less likely to get feedback and have your change</span><br><span class="line">-merged in.</span><br><span class="line">+merged in. Also, split your changes into comprehensive chunks if your patch is</span><br><span class="line">+longer than a dozen lines.</span><br><span class="line"></span><br><span class="line"> If you are starting to work on a particular area, feel free to submit a PR</span><br><span class="line"> that highlights your work in progress (and note in the PR title that it&#x27;s</span><br></pre></td></tr></table></figure>
<p>此命令比较的是工作目录中当前文件和暂存区域快照之间的差异，
也就是修改之后还没有暂存起来的变化内容。</p>
<p>若要查看已暂存的将要添加到下次提交里的内容，可以用
<code>git diff --staged</code> 命令。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git diff --staged</span></span><br><span class="line">diff --git a/README b/README</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..03902a1</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/README</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+My Project</span><br></pre></td></tr></table></figure>
<p>请注意，git diff
本身只显示<strong>尚未暂存的改动</strong>，而不是自上次提交以来所做的所有改动。
所以有时候你一下子暂存了所有更新过的文件后，运行 <code>git diff</code>
后却什么也没有，就是这个原因。</p>
<p>像之前说的，暂存 <code>CONTRIBUTING.md</code> 后再编辑，运行
<code>git status</code> 会看到暂存前后的两个版本。
如果我们的环境（终端输出）看起来如下：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add CONTRIBUTING.md</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;# test line&#x27;</span> &gt;&gt; CONTRIBUTING.md</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    modified:   CONTRIBUTING.md</span><br><span class="line"></span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">    modified:   CONTRIBUTING.md</span><br></pre></td></tr></table></figure>
<p>现在运行 <code>git diff</code> 看暂存前后的变化：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git diff</span></span><br><span class="line">diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md</span><br><span class="line">index 643e24f..87f08c8 100644</span><br><span class="line">--- a/CONTRIBUTING.md</span><br><span class="line">+++ b/CONTRIBUTING.md</span><br><span class="line">@@ -119,3 +119,4 @@ at the</span><br><span class="line"><span class="meta prompt_"> #</span><span class="language-bash"><span class="comment"># Starter Projects</span></span></span><br><span class="line"></span><br><span class="line"> See our [projects list](https://github.com/libgit2/libgit2/blob/development/PROJECTS.md).</span><br><span class="line">+# test line</span><br></pre></td></tr></table></figure>
<p>然后用 <code>git diff --staged</code> 查看已经暂存起来的变化：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git diff --staged</span></span><br><span class="line">diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md</span><br><span class="line">index 8ebb991..643e24f 100644</span><br><span class="line">--- a/CONTRIBUTING.md</span><br><span class="line">+++ b/CONTRIBUTING.md</span><br><span class="line">@@ -65,7 +65,8 @@ branch directly, things can get messy.</span><br><span class="line"> Please include a nice description of your changes when you submit your PR;</span><br><span class="line"> if we have to read the whole diff to figure out why you&#x27;re contributing</span><br><span class="line"> in the first place, you&#x27;re less likely to get feedback and have your change</span><br><span class="line">-merged in.</span><br><span class="line">+merged in. Also, split your changes into comprehensive chunks if your patch is</span><br><span class="line">+longer than a dozen lines.</span><br><span class="line"></span><br><span class="line"> If you are starting to work on a particular area, feel free to submit a PR</span><br><span class="line"> that highlights your work in progress (and note in the PR title that it&#x27;s</span><br></pre></td></tr></table></figure>
<table>
<colgroup>
<col style="width: 6%" />
<col style="width: 93%" />
</colgroup>
<thead>
<tr class="header">
<th>NOTE</th>
<th>Git Diff 的插件版本在本书中，我们使用 <code>git diff</code>
来分析文件差异。
但是，如果你喜欢通过图形化的方式或其它格式输出方式的话，可以使用
<code>git difftool</code> 命令来用 Araxis ，emerge 或 vimdiff 等软件输出
diff 分析结果。 使用 <code>git difftool --tool-help</code>
命令来看你的系统支持哪些 Git Diff 插件。</th>
</tr>
</thead>
<tbody>
</tbody>
</table>
<h4 id="提交更新">提交更新</h4>
<p>现在的暂存区域已经准备妥当可以提交了。
在此之前，请一定要确认还有什么修改过的或新建的文件还没有
<code>git add</code> 过，否则提交的时候不会记录这些还没暂存起来的变化。
这些修改过的文件只保留在本地磁盘。 <strong>所以，每次准备提交前，先用
<code>git status</code> 看下，是不是都已暂存起来了， 然后再运行提交命令
<code>git commit</code>：</strong></p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit</span></span><br></pre></td></tr></table></figure>
<p>这种方式会启动文本编辑器以便输入本次提交的说明。 (默认会启用 shell
的环境变量 <code>$EDITOR</code> 所指定的软件，一般都是 vim 或
emacs。当然也可以按照 <a
href="https://www.progit.cn/#_getting_started">起步</a> 介绍的方式，使用
<code>git config --global core.editor</code>
命令设定你喜欢的编辑软件。）</p>
<p>编辑器会显示类似下面的文本信息（本例选用 Vim 的屏显方式展示）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Please enter the commit message for your changes. Lines starting</span><br><span class="line"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span><br><span class="line"># On branch master</span><br><span class="line"># Changes to be committed:</span><br><span class="line">#	new file:   README</span><br><span class="line">#	modified:   CONTRIBUTING.md</span><br><span class="line">#</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">&quot;.git/COMMIT_EDITMSG&quot; 9L, 283C</span><br></pre></td></tr></table></figure>
<p>可以看到，默认的提交消息包含最后一次运行 <code>git status</code>
的输出，放在注释行里，另外开头还有一空行，供你输入提交说明。
你完全可以去掉这些注释行，不过留着也没关系，多少能帮你回想起这次更新的内容有哪些。
(如果想要更详细的对修改了哪些内容的提示，可以用 <code>-v</code>
选项，这会将你所做的改变的 diff
输出放到编辑器中从而使你知道本次提交具体做了哪些修改。）
退出编辑器时，Git 会丢掉注释行，用你输入提交附带信息生成一次提交。</p>
<p>另外，你也可以在 <code>commit</code> 命令后添加 <code>-m</code>
选项，将提交信息与命令放在同一行，如下所示：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&quot;Story 182: Fix benchmarks for speed&quot;</span></span></span><br><span class="line">[master 463dc4f] Story 182: Fix benchmarks for speed</span><br><span class="line"> 2 files changed, 2 insertions(+)</span><br><span class="line"> create mode 100644 README</span><br></pre></td></tr></table></figure>
<p>好，现在你已经创建了第一个提交！
可以看到，提交后它会告诉你，当前是在哪个分支（<code>master</code>）提交的，本次提交的完整
SHA-1
校验和是什么（<code>463dc4f</code>），以及在本次提交中，有多少文件修订过，多少行添加和删改过。</p>
<p>请记住，提交时记录的是放在暂存区域的快照。
任何还未暂存的仍然保持已修改状态，可以在下次提交时纳入版本管理。
每一次运行提交操作，都是对你项目作一次快照，以后可以回到这个状态，或者进行比较。</p>
<h4 id="跳过使用暂存区域">跳过使用暂存区域</h4>
<p>尽管使用暂存区域的方式可以精心准备要提交的细节，但有时候这么做略显繁琐。
Git 提供了一个跳过使用暂存区域的方式， 只要在提交的时候，给
<code>git commit</code> 加上 <code>-a</code> 选项，Git
就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过
<code>git add</code> 步骤：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">    modified:   CONTRIBUTING.md</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -a -m <span class="string">&#x27;added new benchmarks&#x27;</span></span></span><br><span class="line">[master 83e38c7] added new benchmarks</span><br><span class="line"> 1 file changed, 5 insertions(+), 0 deletions(-)</span><br></pre></td></tr></table></figure>
<p>看到了吗？提交之前不再需要 <code>git add</code>
文件“CONTRIBUTING.md”了。</p>
<h4 id="移除文件">移除文件</h4>
<p>要从 Git
中移除某个文件，就必须要从已跟踪文件清单中移除（确切地说，是从<strong>暂存区域移除</strong>），然后提交。
可以用 <code>git rm</code>
命令完成此项工作，并<strong>连带从工作目录中删除指定的文件</strong>，这样以后就不会出现在未跟踪文件清单中了。</p>
<p>如果只是简单地从工作目录中手工删除文件，运行 <code>git status</code>
时就会在 “Changes not staged for commit” 部分（也就是
<em>未暂存清单</em>）看到：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">rm</span> PROJECTS.md</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Your branch is up-to-date with &#x27;origin/master&#x27;.</span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add/rm &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">        deleted:    PROJECTS.md</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure>
<p>然后再运行 <code>git rm</code> 记录此次移除文件的操作：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">rm</span> PROJECTS.md</span></span><br><span class="line">rm &#x27;PROJECTS.md&#x27;</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    deleted:    PROJECTS.md</span><br></pre></td></tr></table></figure>
<p>下一次提交时，该文件就不再纳入版本管理了。
如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项
<code>-f</code>（译注：即 force 的首字母）。
这是一种安全特性，用于防止误删还没有添加到快照的数据，这样的数据不能被
Git 恢复。</p>
<p>另外一种情况是，我们想<strong>把文件从 Git
仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中</strong>。
换句话说，你想让文件保留在磁盘，但是并不想让 Git 继续跟踪。 当你忘记添加
<code>.gitignore</code> 文件，不小心把一个很大的日志文件或一堆
<code>.a</code> 这样的编译生成文件添加到暂存区时，这一做法尤其有用。
为达到这一目的，使用 <code>--cached</code> 选项：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">rm</span> --cached README</span></span><br></pre></td></tr></table></figure>
<p><code>git rm</code> 命令后面可以列出文件或者目录的名字，也可以使用
<code>glob</code> 模式。 比方说：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">rm</span> <span class="built_in">log</span>/\*.<span class="built_in">log</span></span></span><br></pre></td></tr></table></figure>
<p>注意到星号 <code>*</code> 之前的反斜杠 <code>\</code>， 因为 Git
有它自己的文件模式扩展匹配方式，所以我们不用 shell 来帮忙展开。
此命令删除 <code>log/</code> 目录下扩展名为 <code>.log</code>
的所有文件。 类似的比如：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">rm</span> \*~</span></span><br></pre></td></tr></table></figure>
<p>该命令为删除以 <code>~</code> 结尾的所有文件。</p>
<h4 id="移动文件">移动文件</h4>
<p>不像其它的 VCS 系统，Git 并不显式跟踪文件移动操作。 如果在 Git
中重命名了某个文件，仓库中存储的元数据并不会体现出这是一次改名操作。
不过 Git
非常聪明，它会推断出究竟发生了什么，至于具体是如何做到的，我们稍后再谈。</p>
<p>既然如此，当你看到 Git 的 <code>mv</code> 命令时一定会困惑不已。 要在
Git 中对文件改名，可以这么做：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">mv</span> file_from file_to</span></span><br></pre></td></tr></table></figure>
<p>它会恰如预期般正常工作。
实际上，即便此时查看状态信息，也会明白无误地看到关于重命名操作的说明：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">mv</span> README.md README</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    renamed:    README.md -&gt; README</span><br></pre></td></tr></table></figure>
<p>其实，运行 <code>git mv</code> 就相当于运行了下面三条命令：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mv</span> README.md README</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">rm</span> README.md</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add README</span></span><br></pre></td></tr></table></figure>
<p>如此分开操作，Git
也会意识到这是一次改名，所以不管何种方式结果都一样。
两者唯一的区别是，<code>mv</code>
是一条命令而另一种方式需要三条命令，直接用 <code>git mv</code>
轻便得多。
不过有时候用其他工具批处理改名的话，要记得在提交前删除老的文件名，再添加新的文件名。</p>
<h3 id="查看提交历史">查看提交历史</h3>
<p>在提交了若干更新，又或者克隆了某个项目之后，你也许想<strong>回顾下提交历史</strong>。
完成这个任务最简单而又有效的工具是 <code>git log</code> 命令。</p>
<p>接下来的例子会用我专门用于演示的 simplegit 项目，
运行下面的命令获取该项目源代码：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/schacon/simplegit-progit</span><br></pre></td></tr></table></figure>
<p>然后在此项目中运行 git log，应该会看到下面的输出：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span></span></span><br><span class="line">commit ca82a6dff817ec66f44342007202690a93763949</span><br><span class="line">Author: Scott Chacon &lt;schacon@gee-mail.com&gt;</span><br><span class="line">Date:   Mon Mar 17 21:52:11 2008 -0700</span><br><span class="line"></span><br><span class="line">    changed the version number</span><br><span class="line"></span><br><span class="line">commit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7</span><br><span class="line">Author: Scott Chacon &lt;schacon@gee-mail.com&gt;</span><br><span class="line">Date:   Sat Mar 15 16:40:33 2008 -0700</span><br><span class="line"></span><br><span class="line">    removed unnecessary test</span><br><span class="line"></span><br><span class="line">commit a11bef06a3f659402fe7563abf99ad00de2209e6</span><br><span class="line">Author: Scott Chacon &lt;schacon@gee-mail.com&gt;</span><br><span class="line">Date:   Sat Mar 15 10:31:28 2008 -0700</span><br><span class="line"></span><br><span class="line">    first commit</span><br></pre></td></tr></table></figure>
<p>默认不用任何参数的话，<code>git log</code>
会按提交时间列出所有的更新，最近的更新排在最上面。
正如你所看到的，这个命令会列出每个提交的 SHA-1
校验和、作者的名字和电子邮件地址、提交时间以及提交说明。</p>
<p><code>git log</code> 有许多选项可以帮助你搜寻你所要找的提交，
接下来我们介绍些最常用的。</p>
<p>一个常用的选项是 <code>-p</code>，用来显示每次提交的内容差异。
你也可以加上 <code>-2</code> 来仅显示最近两次提交：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> -p -2</span></span><br><span class="line">commit ca82a6dff817ec66f44342007202690a93763949</span><br><span class="line">Author: Scott Chacon &lt;schacon@gee-mail.com&gt;</span><br><span class="line">Date:   Mon Mar 17 21:52:11 2008 -0700</span><br><span class="line"></span><br><span class="line">    changed the version number</span><br><span class="line"></span><br><span class="line">diff --git a/Rakefile b/Rakefile</span><br><span class="line">index a874b73..8f94139 100644</span><br><span class="line">--- a/Rakefile</span><br><span class="line">+++ b/Rakefile</span><br><span class="line">@@ -5,7 +5,7 @@ require &#x27;rake/gempackagetask&#x27;</span><br><span class="line"> spec = Gem::Specification.new do |s|</span><br><span class="line">     s.platform  =   Gem::Platform::RUBY</span><br><span class="line">     s.name      =   &quot;simplegit&quot;</span><br><span class="line">-    s.version   =   &quot;0.1.0&quot;</span><br><span class="line">+    s.version   =   &quot;0.1.1&quot;</span><br><span class="line">     s.author    =   &quot;Scott Chacon&quot;</span><br><span class="line">     s.email     =   &quot;schacon@gee-mail.com&quot;</span><br><span class="line">     s.summary   =   &quot;A simple gem for using Git in Ruby code.&quot;</span><br><span class="line"></span><br><span class="line">commit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7</span><br><span class="line">Author: Scott Chacon &lt;schacon@gee-mail.com&gt;</span><br><span class="line">Date:   Sat Mar 15 16:40:33 2008 -0700</span><br><span class="line"></span><br><span class="line">    removed unnecessary test</span><br><span class="line"></span><br><span class="line">diff --git a/lib/simplegit.rb b/lib/simplegit.rb</span><br><span class="line">index a0a60ae..47c6340 100644</span><br><span class="line">--- a/lib/simplegit.rb</span><br><span class="line">+++ b/lib/simplegit.rb</span><br><span class="line">@@ -18,8 +18,3 @@ class SimpleGit</span><br><span class="line">     end</span><br><span class="line"></span><br><span class="line"> end</span><br><span class="line">-</span><br><span class="line">-if $0 == __FILE__</span><br><span class="line">-  git = SimpleGit.new</span><br><span class="line">-  puts git.show</span><br><span class="line">-end</span><br><span class="line">\ No newline at end of file</span><br></pre></td></tr></table></figure>
<p>该选项除了显示基本信息之外，<strong>还附带了每次 commit
的变化</strong>。 当进行代码审查，或者快速浏览某个搭档提交的 commit
所带来的变化的时候，这个参数就非常有用了。 你也可以为
<code>git log</code> 附带一系列的总结性选项。
比如说，如果你想看到每次提交的简略的统计信息，你可以使用
<code>--stat</code> 选项：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --<span class="built_in">stat</span></span></span><br><span class="line">commit ca82a6dff817ec66f44342007202690a93763949</span><br><span class="line">Author: Scott Chacon &lt;schacon@gee-mail.com&gt;</span><br><span class="line">Date:   Mon Mar 17 21:52:11 2008 -0700</span><br><span class="line"></span><br><span class="line">    changed the version number</span><br><span class="line"></span><br><span class="line"> Rakefile | 2 +-</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line"></span><br><span class="line">commit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7</span><br><span class="line">Author: Scott Chacon &lt;schacon@gee-mail.com&gt;</span><br><span class="line">Date:   Sat Mar 15 16:40:33 2008 -0700</span><br><span class="line"></span><br><span class="line">    removed unnecessary test</span><br><span class="line"></span><br><span class="line"> lib/simplegit.rb | 5 -----</span><br><span class="line"> 1 file changed, 5 deletions(-)</span><br><span class="line"></span><br><span class="line">commit a11bef06a3f659402fe7563abf99ad00de2209e6</span><br><span class="line">Author: Scott Chacon &lt;schacon@gee-mail.com&gt;</span><br><span class="line">Date:   Sat Mar 15 10:31:28 2008 -0700</span><br><span class="line"></span><br><span class="line">    first commit</span><br><span class="line"></span><br><span class="line"> README           |  6 ++++++</span><br><span class="line"> Rakefile         | 23 +++++++++++++++++++++++</span><br><span class="line"> lib/simplegit.rb | 25 +++++++++++++++++++++++++</span><br><span class="line"> 3 files changed, 54 insertions(+)</span><br></pre></td></tr></table></figure>
<p>正如你所看到的，<code>--stat</code>
选项在每次提交的下面列出额所有被修改过的文件、有多少文件被修改了以及被修改过的文件的哪些行被移除或是添加了。
在每次提交的最后还有一个总结。</p>
<p>另外一个常用的选项是 <code>--pretty</code>。
这个选项可以指定使用不同于默认格式的方式展示提交历史。
这个选项有一些内建的子选项供你使用。 比如用 <code>oneline</code>
将每个提交放在一行显示，查看的提交数很大时非常有用。 另外还有
<code>short</code>，<code>full</code> 和 <code>fuller</code>
可以用，展示的信息或多或少有些不同，请自己动手实践一下看看效果如何。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --pretty=oneline</span></span><br><span class="line">ca82a6dff817ec66f44342007202690a93763949 changed the version number</span><br><span class="line">085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7 removed unnecessary test</span><br><span class="line">a11bef06a3f659402fe7563abf99ad00de2209e6 first commit</span><br></pre></td></tr></table></figure>
<p>但最有意思的是 format，可以定制要显示的记录格式。
这样的输出对后期提取分析格外有用 — 因为你知道输出的格式不会随着 Git
的更新而发生改变：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --pretty=format:<span class="string">&quot;%h - %an, %ar : %s&quot;</span></span></span><br><span class="line">ca82a6d - Scott Chacon, 6 years ago : changed the version number</span><br><span class="line">085bb3b - Scott Chacon, 6 years ago : removed unnecessary test</span><br><span class="line">a11bef0 - Scott Chacon, 6 years ago : first commit</span><br></pre></td></tr></table></figure>
<p><a
href="https://www.progit.cn/#pretty_format"><code>git log --pretty=format</code>
常用的选项</a> 列出了常用的格式占位符写法及其代表的意义。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: left;">选项</th>
<th style="text-align: left;">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><code>%H</code></td>
<td style="text-align: left;">提交对象（commit）的完整哈希字串</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>%h</code></td>
<td style="text-align: left;">提交对象的简短哈希字串</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>%T</code></td>
<td style="text-align: left;">树对象（tree）的完整哈希字串</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>%t</code></td>
<td style="text-align: left;">树对象的简短哈希字串</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>%P</code></td>
<td style="text-align: left;">父对象（parent）的完整哈希字串</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>%p</code></td>
<td style="text-align: left;">父对象的简短哈希字串</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>%an</code></td>
<td style="text-align: left;">作者（author）的名字</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>%ae</code></td>
<td style="text-align: left;">作者的电子邮件地址</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>%ad</code></td>
<td style="text-align: left;">作者修订日期（可以用 --date=
选项定制格式）</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>%ar</code></td>
<td style="text-align: left;">作者修订日期，按多久以前的方式显示</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>%cn</code></td>
<td style="text-align: left;">提交者（committer）的名字</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>%ce</code></td>
<td style="text-align: left;">提交者的电子邮件地址</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>%cd</code></td>
<td style="text-align: left;">提交日期</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>%cr</code></td>
<td style="text-align: left;">提交日期，按多久以前的方式显示</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>%s</code></td>
<td style="text-align: left;">提交说明</td>
</tr>
</tbody>
</table>
<p>你一定奇怪 <em>作者</em> 和 <em>提交者</em> 之间究竟有何差别，
其实作者指的是实际作出修改的人，提交者指的是最后将此工作成果提交到仓库的人。
所以，当你为某个项目发布补丁，然后某个核心成员将你的补丁并入项目时，你就是作者，而那个核心成员就是提交者。
我们会在 <a href="https://www.progit.cn/#_distributed_git">分布式
Git</a> 再详细介绍两者之间的细微差别。</p>
<p>当 oneline 或 format 与另一个 <code>log</code> 选项
<code>--graph</code> 结合使用时尤其有用。
这个选项添加了一些ASCII字符串来形象地展示你的分支、合并历史：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --pretty=format:<span class="string">&quot;%h %s&quot;</span> --graph</span></span><br><span class="line">* 2d3acf9 ignore errors from SIGCHLD on trap</span><br><span class="line">*  5e3ee11 Merge branch &#x27;master&#x27; of git://github.com/dustin/grit</span><br><span class="line">|\</span><br><span class="line">| * 420eac9 Added a method for getting the current branch.</span><br><span class="line">* | 30e367c timeout code and tests</span><br><span class="line">* | 5a09431 add timeout protection to grit</span><br><span class="line">* | e1193f8 support for heads with slashes in them</span><br><span class="line">|/</span><br><span class="line">* d6016bc require time for xmlschema</span><br><span class="line">*  11d191e Merge branch &#x27;defunkt&#x27; into local</span><br></pre></td></tr></table></figure>
<p>这种输出类型会在我们下一章学完分支与合并以后变得更加有趣。</p>
<p>以上只是简单介绍了一些 <code>git log</code> 命令支持的选项。 <a
href="https://www.progit.cn/#log_options"><code>git log</code>
的常用选项</a>
列出了我们目前涉及到的和没涉及到的选项，以及它们是如何影响 log
命令的输出的：</p>
<table>
<colgroup>
<col style="width: 22%" />
<col style="width: 77%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">选项</th>
<th style="text-align: left;">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><code>-p</code></td>
<td style="text-align: left;">按补丁格式显示每个更新之间的差异。</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>--stat</code></td>
<td style="text-align: left;">显示每次更新的文件修改统计信息。</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>--shortstat</code></td>
<td style="text-align: left;">只显示 --stat
中最后的行数修改添加移除统计。</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>--name-only</code></td>
<td style="text-align: left;">仅在提交信息后显示已修改的文件清单。</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>--name-status</code></td>
<td style="text-align: left;">显示新增、修改、删除的文件清单。</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>--abbrev-commit</code></td>
<td style="text-align: left;">仅显示 SHA-1 的前几个字符，而非所有的 40
个字符。</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>--relative-date</code></td>
<td style="text-align: left;">使用较短的相对时间显示（比如，“2 weeks
ago”）。</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>--graph</code></td>
<td style="text-align: left;">显示 ASCII 图形表示的分支合并历史。</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>--pretty</code></td>
<td
style="text-align: left;">使用其他格式显示历史提交信息。可用的选项包括
oneline，short，full，fuller 和 format（后跟指定格式）。</td>
</tr>
</tbody>
</table>
<h4 id="限制输出长度">限制输出长度</h4>
<p>除了定制输出格式的选项之外，<code>git log</code>
还有许多非常实用的限制输出长度的选项，也就是只输出部分提交信息。
之前你已经看到过 <code>-2</code> 了，它只显示最近的两条提交，
实际上，这是 <code>-&lt;n&gt;</code> 选项的写法，其中的 <code>n</code>
可以是任何整数，表示仅显示最近的若干条提交。
不过实践中我们是不太用这个选项的，Git
在输出所有提交时会自动调用分页程序，所以你一次只会看到一页的内容。</p>
<p>另外还有按照时间作限制的选项，比如 <code>--since</code> 和
<code>--until</code> 也很有用。
例如，下面的命令列出所有最近两周内的提交：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --since=2.weeks</span></span><br></pre></td></tr></table></figure>
<p>这个命令可以在多种格式下工作，比如说具体的某一天
<code>"2008-01-15"</code>，或者是相对地多久以前
<code>"2 years 1 day 3 minutes ago"</code>。</p>
<p>还可以给出若干搜索条件，列出符合的提交。 用 <code>--author</code>
选项显示指定作者的提交，用 <code>--grep</code>
选项搜索提交说明中的关键字。
（请注意，如果要得到同时满足这两个选项搜索条件的提交，就必须用
<code>--all-match</code>
选项。否则，满足任意一个条件的提交都会被匹配出来）</p>
<p>另一个非常有用的筛选选项是
<code>-S</code>，可以列出那些添加或移除了某些字符串的提交。
比如说，你想找出添加或移除了某一个特定函数的引用的提交，你可以这样使用：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> -Sfunction_name</span></span><br></pre></td></tr></table></figure>
<p>最后一个很实用的 <code>git log</code> 选项是路径（path），
如果只关心某些文件或者目录的历史提交，可以在 git log
选项的最后指定它们的路径。
因为是放在最后位置上的选项，所以用两个短划线（--）隔开之前的选项和后面限定的路径名。</p>
<p>在 <a href="https://www.progit.cn/#limit_options">限制
<code>git log</code> 输出的选项</a> 中列出了常用的选项</p>
<table>
<thead>
<tr class="header">
<th style="text-align: left;">选项</th>
<th style="text-align: left;">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><code>-(n)</code></td>
<td style="text-align: left;">仅显示最近的 n 条提交</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>--since</code>,
<code>--after</code></td>
<td style="text-align: left;">仅显示指定时间之后的提交。</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>--until</code>,
<code>--before</code></td>
<td style="text-align: left;">仅显示指定时间之前的提交。</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>--author</code></td>
<td style="text-align: left;">仅显示指定作者相关的提交。</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>--committer</code></td>
<td style="text-align: left;">仅显示指定提交者相关的提交。</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>--grep</code></td>
<td style="text-align: left;">仅显示含指定关键字的提交</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>-S</code></td>
<td style="text-align: left;">仅显示添加或移除了某个关键字的提交</td>
</tr>
</tbody>
</table>
<p>来看一个实际的例子，如果要查看 Git 仓库中，2008 年 10 月期间，Junio
Hamano 提交的但未合并的测试文件，可以用下面的查询命令：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --pretty=<span class="string">&quot;%h - %s&quot;</span> --author=gitster --since=<span class="string">&quot;2008-10-01&quot;</span> \</span></span><br><span class="line"><span class="language-bash">   --before=<span class="string">&quot;2008-11-01&quot;</span> --no-merges -- t/</span></span><br><span class="line">5610e3b - Fix testcase failure when extended attributes are in use</span><br><span class="line">acd3b9e - Enhance hold_lock_file_for_&#123;update,append&#125;() API</span><br><span class="line">f563754 - demonstrate breakage of detached checkout with symbolic link HEAD</span><br><span class="line">d1a43f2 - reset --hard/read-tree --reset -u: remove unmerged new paths</span><br><span class="line">51a94af - Fix &quot;checkout --track -b newbranch&quot; on detached HEAD</span><br><span class="line">b0ad11e - pull: allow &quot;git pull origin $something:$current_branch&quot; into an unborn branch</span><br></pre></td></tr></table></figure>
<p>在近 40000 条提交中，上面的输出仅列出了符合条件的 6 条记录。</p>
<h3 id="撤消操作">撤消操作</h3>
<p>在任何一个阶段，你都有可能想要撤消某些操作。
这里，我们将会学习几个撤消你所做修改的基本工具。
<strong>注意，有些撤消操作是不可逆的。</strong> 这是在使用 Git
的过程中，会因为操作失误而导致之前的工作丢失的少有的几个地方之一。</p>
<p>有时候我们提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了。
此时，可以运行带有 <code>--amend</code> 选项的提交命令尝试重新提交：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit --amend</span></span><br></pre></td></tr></table></figure>
<p>这个命令会将暂存区中的文件提交。
如果自上次提交以来你还未做任何修改（例如，在上次提交后马上执行了此命令），那么快照会保持不变，而你所修改的只是提交信息。</p>
<p>文本编辑器启动后，可以看到之前的提交信息。
编辑后保存会覆盖原来的提交信息。</p>
<p>例如，你提交后发现忘记了暂存某些需要的修改，可以像下面这样操作：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&#x27;initial commit&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add forgotten_file</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit --amend</span></span><br></pre></td></tr></table></figure>
<p>最终你只会有一个提交 - 第二次提交将代替第一次提交的结果。</p>
<h4 id="取消暂存的文件">取消暂存的文件</h4>
<p>接下来的两个小节演示如何操作暂存区域与工作目录中已修改的文件。
这些命令在修改文件状态的同时，也会提示如何撤消操作。
例如，你已经修改了两个文件并且想要将它们作为两次独立的修改提交，但是却意外地输入了
<code>git add *</code> 暂存了它们两个。 如何只取消暂存两个中的一个呢？
<code>git status</code> 命令提示了你：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add *</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    renamed:    README.md -&gt; README</span><br><span class="line">    modified:   CONTRIBUTING.md</span><br></pre></td></tr></table></figure>
<p>在 “Changes to be committed” 文字正下方，提示使用
<code>git reset HEAD &lt;file&gt;...</code> 来取消暂存。
所以，我们可以这样来取消暂存 <code>CONTRIBUTING.md</code> 文件：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git reset HEAD CONTRIBUTING.md</span></span><br><span class="line">Unstaged changes after reset:</span><br><span class="line">M	CONTRIBUTING.md</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    renamed:    README.md -&gt; README</span><br><span class="line"></span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">    modified:   CONTRIBUTING.md</span><br></pre></td></tr></table></figure>
<p>这个命令有点儿奇怪，但是起作用了。 <code>CONTRIBUTING.md</code>
文件已经是修改未暂存的状态了。</p>
<table>
<colgroup>
<col style="width: 6%" />
<col style="width: 93%" />
</colgroup>
<thead>
<tr class="header">
<th>NOTE</th>
<th>虽然在调用时加上 <code>--hard</code> 选项<strong>可以</strong>令
<code>git reset</code>
成为一个危险的命令（译注：可能导致工作目录中所有当前进度丢失！），但本例中工作目录内的文件并不会被修改。
<u>不加选项地调用 <code>git reset</code> 并不危险 —
它只会修改暂存区域。</u></th>
</tr>
</thead>
<tbody>
</tbody>
</table>
<p>到目前为止这个神奇的调用就是你需要对 <code>git reset</code>
命令全部的了解。我们将会在 <a
href="https://www.progit.cn/#_git_reset">重置揭密</a> 中了解
<code>reset</code> 的更多细节以及如何掌握它做一些真正有趣的事。</p>
<h4 id="撤消对文件的修改">撤消对文件的修改</h4>
<p>如果你并不想保留对 <code>CONTRIBUTING.md</code> 文件的修改怎么办？
你该如何方便地撤消修改 -
将它还原成上次提交时的样子（或者刚克隆完的样子，或者刚把它放入工作目录时的样子）？
幸运的是，<code>git status</code> 也告诉了你应该如何做。
在最后一个例子中，未暂存区域是这样：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">    modified:   CONTRIBUTING.md</span><br></pre></td></tr></table></figure>
<p>它非常清楚地告诉了你如何撤消之前所做的修改。
让我们来按照提示执行：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -- CONTRIBUTING.md</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    renamed:    README.md -&gt; README</span><br></pre></td></tr></table></figure>
<p>可以看到那些修改已经被撤消了。</p>
<table>
<colgroup>
<col style="width: 13%" />
<col style="width: 86%" />
</colgroup>
<thead>
<tr class="header">
<th>IMPORTANT</th>
<th>你需要知道 <code>git checkout -- [file]</code>
是一个危险的命令，这很重要。 你对那个文件做的任何修改都会消失 -
你只是拷贝了另一个文件来覆盖它。
除非你确实清楚不想要那个文件了，否则不要使用这个命令。</th>
</tr>
</thead>
<tbody>
</tbody>
</table>
<p>如果你仍然想保留对那个文件做出的修改，但是现在仍然需要撤消，我们将会在
<a href="https://www.progit.cn/#_git_branching">Git 分支</a>
介绍保存进度与分支；这些通常是更好的做法。</p>
<p>记住，在 Git 中任何 <em>已提交的</em> 东西几乎总是可以恢复的。
甚至那些被删除的分支中的提交或使用 <code>--amend</code>
选项覆盖的提交也可以恢复（阅读 <a
href="https://www.progit.cn/#_data_recovery">数据恢复</a>
了解数据恢复）。 然而，任何你未提交的东西丢失后很可能再也找不到了。</p>
<h3 id="远程仓库的使用">远程仓库的使用</h3>
<p>为了能在任意 Git 项目上协作，你需要知道如何管理自己的远程仓库。
远程仓库是指托管在因特网或其他网络中的你的项目的版本库。
你可以有好几个远程仓库，通常有些仓库对你只读，有些则可以读写。
与他人协作涉及管理远程仓库以及根据需要推送或拉取数据。
管理远程仓库包括了解如何添加远程仓库、移除无效的远程仓库、管理不同的远程分支并定义它们是否被跟踪等等。
在本节中，我们将介绍一部分远程管理的技能。</p>
<h4 id="查看远程仓库">查看远程仓库</h4>
<p>如果想查看你已经配置的远程仓库服务器，可以运行
<code>git remote</code> 命令。 它会列出你指定的每一个远程服务器的简写。
如果你已经克隆了自己的仓库，那么至少应该能看到 origin - 这是 Git
给你克隆的仓库服务器的默认名字：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/schacon/ticgit</span></span><br><span class="line">Cloning into &#x27;ticgit&#x27;...</span><br><span class="line">remote: Reusing existing pack: 1857, done.</span><br><span class="line">remote: Total 1857 (delta 0), reused 0 (delta 0)</span><br><span class="line">Receiving objects: 100% (1857/1857), 374.35 KiB | 268.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (772/772), done.</span><br><span class="line">Checking connectivity... done.</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ticgit</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote</span></span><br><span class="line">origin</span><br></pre></td></tr></table></figure>
<p>你也可以指定选项 <code>-v</code>，会显示需要读写远程仓库使用的 Git
保存的简写与其对应的 URL。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote -v</span></span><br><span class="line">origin	https://github.com/schacon/ticgit (fetch)</span><br><span class="line">origin	https://github.com/schacon/ticgit (push)</span><br></pre></td></tr></table></figure>
<p>如果你的远程仓库不止一个，该命令会将它们全部列出。
例如，与几个协作者合作的，拥有多个远程仓库的仓库看起来像下面这样：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> grit</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote -v</span></span><br><span class="line">bakkdoor  https://github.com/bakkdoor/grit (fetch)</span><br><span class="line">bakkdoor  https://github.com/bakkdoor/grit (push)</span><br><span class="line">cho45     https://github.com/cho45/grit (fetch)</span><br><span class="line">cho45     https://github.com/cho45/grit (push)</span><br><span class="line">defunkt   https://github.com/defunkt/grit (fetch)</span><br><span class="line">defunkt   https://github.com/defunkt/grit (push)</span><br><span class="line">koke      git://github.com/koke/grit.git (fetch)</span><br><span class="line">koke      git://github.com/koke/grit.git (push)</span><br><span class="line">origin    git@github.com:mojombo/grit.git (fetch)</span><br><span class="line">origin    git@github.com:mojombo/grit.git (push)</span><br></pre></td></tr></table></figure>
<p>这样我们可以轻松拉取其中任何一个用户的贡献。
此外，我们大概还会有某些远程仓库的推送权限，虽然我们目前还不会在此介绍。</p>
<p>注意这些远程仓库使用了不同的协议；我们将会在 <a
href="https://www.progit.cn/#_git_on_the_server">在服务器上搭建 Git</a>
中了解关于它们的更多信息。</p>
<h4 id="添加远程仓库">添加远程仓库</h4>
<p>我在之前的章节中已经提到并展示了如何添加远程仓库的示例，不过这里将告诉你如何明确地做到这一点。
运行 <code>git remote add &lt;shortname&gt; &lt;url&gt;</code>
添加一个新的远程 Git 仓库，同时指定一个你可以轻松引用的简写：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote</span></span><br><span class="line">origin</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote add pb https://github.com/paulboone/ticgit</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote -v</span></span><br><span class="line">origin	https://github.com/schacon/ticgit (fetch)</span><br><span class="line">origin	https://github.com/schacon/ticgit (push)</span><br><span class="line">pb	https://github.com/paulboone/ticgit (fetch)</span><br><span class="line">pb	https://github.com/paulboone/ticgit (push)</span><br></pre></td></tr></table></figure>
<p>现在你可以在命令行中使用字符串 <code>pb</code> 来代替整个 URL。
例如，如果你想拉取 Paul 的仓库中有但你没有的信息，可以运行
<code>git fetch pb</code>：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git fetch pb</span></span><br><span class="line">remote: Counting objects: 43, done.</span><br><span class="line">remote: Compressing objects: 100% (36/36), done.</span><br><span class="line">remote: Total 43 (delta 10), reused 31 (delta 5)</span><br><span class="line">Unpacking objects: 100% (43/43), done.</span><br><span class="line">From https://github.com/paulboone/ticgit</span><br><span class="line"> * [new branch]      master     -&gt; pb/master</span><br><span class="line"> * [new branch]      ticgit     -&gt; pb/ticgit</span><br></pre></td></tr></table></figure>
<p>现在 Paul 的 master 分支可以在本地通过 <code>pb/master</code> 访问到
-
你可以将它合并到自己的某个分支中，或者如果你想要查看它的话，可以检出一个指向该点的本地分支。
（我们将会在 <a href="https://www.progit.cn/#_git_branching">Git
分支</a> 中详细介绍什么是分支以及如何使用分支。）</p>
<h4 id="从远程仓库中抓取与拉取">从远程仓库中抓取与拉取</h4>
<p>就如刚才所见，从远程仓库中获得数据，可以执行：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git fetch [remote-name]</span></span><br></pre></td></tr></table></figure>
<p>这个命令会访问远程仓库，从中拉取所有你还没有的数据。
执行完成后，你将会拥有那个远程仓库中所有分支的引用，可以随时合并或查看。</p>
<p>如果你使用 <code>clone</code>
命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以 “origin”
为简写。 所以，<code>git fetch origin</code>
会抓取克隆（或上一次抓取）后新推送的所有工作。 必须注意
<code>git fetch</code> 命令会将数据拉取到你的本地仓库 -
它并不会自动合并或修改你当前的工作。
当准备好时你必须手动将其合并入你的工作。</p>
<p>如果你有一个分支设置为跟踪一个远程分支（阅读下一节与 <a
href="https://www.progit.cn/#_git_branching">Git 分支</a>
了解更多信息），可以使用 <code>git pull</code>
命令来自动的抓取然后合并远程分支到当前分支。
这对你来说可能是一个更简单或更舒服的工作流程；默认情况下，<code>git clone</code>
命令会自动设置本地 master 分支跟踪克隆的远程仓库的 master
分支（或不管是什么名字的默认分支）。 运行 <code>git pull</code>
通常会从最初克隆的服务器上抓取数据并自动尝试合并到当前所在的分支。</p>
<h4 id="推送到远程仓库">推送到远程仓库</h4>
<p>当你想分享你的项目时，必须将其推送到上游。
这个命令很简单：<code>git push [remote-name] [branch-name]</code>。
当你想要将 master 分支推送到 <code>origin</code>
服务器时（再次说明，克隆时通常会自动帮你设置好那两个名字），那么运行这个命令就可以将你所做的备份到服务器：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin master</span></span><br></pre></td></tr></table></figure>
<p>只有当你有所克隆服务器的写入权限，并且之前没有人推送过时，这条命令才能生效。
当你和其他人在同一时间克隆，他们先推送到上游然后你再推送到上游，你的推送就会毫无疑问地被拒绝。
你必须先将他们的工作拉取下来并将其合并进你的工作后才能推送。 阅读 <a
href="https://www.progit.cn/#_git_branching">Git 分支</a>
了解如何推送到远程仓库服务器的详细信息。</p>
<h4 id="查看远程仓库-1">查看远程仓库</h4>
<p>如果想要查看某一个远程仓库的更多信息，可以使用
<code>git remote show [remote-name]</code> 命令。
如果想以一个特定的缩写名运行这个命令，例如
<code>origin</code>，会得到像下面类似的信息：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote show origin</span></span><br><span class="line">* remote origin</span><br><span class="line">  Fetch URL: https://github.com/schacon/ticgit</span><br><span class="line">  Push  URL: https://github.com/schacon/ticgit</span><br><span class="line">  HEAD branch: master</span><br><span class="line">  Remote branches:</span><br><span class="line">    master                               tracked</span><br><span class="line">    dev-branch                           tracked</span><br><span class="line">  Local branch configured for &#x27;git pull&#x27;:</span><br><span class="line">    master merges with remote master</span><br><span class="line">  Local ref configured for &#x27;git push&#x27;:</span><br><span class="line">    master pushes to master (up to date)</span><br></pre></td></tr></table></figure>
<p>它同样会列出远程仓库的 URL 与跟踪分支的信息。
这些信息非常有用，它告诉你正处于 master 分支，并且如果运行 git
pull，就会抓取所有的远程引用，然后将远程 master 分支合并到本地 master
分支。 它也会列出拉取到的所有远程引用。</p>
<p>这是一个经常遇到的简单例子。 如果你是 Git
的重度使用者，那么还可以通过 <code>git remote show</code>
看到更多的信息。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote show origin</span></span><br><span class="line">* remote origin</span><br><span class="line">  URL: https://github.com/my-org/complex-project</span><br><span class="line">  Fetch URL: https://github.com/my-org/complex-project</span><br><span class="line">  Push  URL: https://github.com/my-org/complex-project</span><br><span class="line">  HEAD branch: master</span><br><span class="line">  Remote branches:</span><br><span class="line">    master                           tracked</span><br><span class="line">    dev-branch                       tracked</span><br><span class="line">    markdown-strip                   tracked</span><br><span class="line">    issue-43                         new (next fetch will store in remotes/origin)</span><br><span class="line">    issue-45                         new (next fetch will store in remotes/origin)</span><br><span class="line">    refs/remotes/origin/issue-11     stale (use &#x27;git remote prune&#x27; to remove)</span><br><span class="line">  Local branches configured for &#x27;git pull&#x27;:</span><br><span class="line">    dev-branch merges with remote dev-branch</span><br><span class="line">    master     merges with remote master</span><br><span class="line">  Local refs configured for &#x27;git push&#x27;:</span><br><span class="line">    dev-branch                     pushes to dev-branch                     (up to date)</span><br><span class="line">    markdown-strip                 pushes to markdown-strip                 (up to date)</span><br><span class="line">    master                         pushes to master                         (up to date)</span><br></pre></td></tr></table></figure>
<p>这个命令列出了当你在特定的分支上执行 <code>git push</code>
会自动地推送到哪一个远程分支。
它也同样地列出了哪些远程分支不在你的本地，哪些远程分支已经从服务器上移除了，还有当你执行
<code>git pull</code> 时哪些分支会自动合并。</p>
<h4 id="远程仓库的移除与重命名">远程仓库的移除与重命名</h4>
<p>如果想要重命名引用的名字可以运行 <code>git remote rename</code>
去修改一个远程仓库的简写名。 例如，想要将 <code>pb</code> 重命名为
<code>paul</code>，可以用 <code>git remote rename</code> 这样做：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote rename pb paul</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote</span></span><br><span class="line">origin</span><br><span class="line">paul</span><br></pre></td></tr></table></figure>
<p>值得注意的是这同样也会修改你的远程分支名字。 那些过去引用
<code>pb/master</code> 的现在会引用 <code>paul/master</code>。</p>
<p>如果因为一些原因想要移除一个远程仓库 -
你已经从服务器上搬走了或不再想使用某一个特定的镜像了，又或者某一个贡献者不再贡献了
- 可以使用 <code>git remote rm</code> ：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote <span class="built_in">rm</span> paul</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote</span></span><br><span class="line">origin</span><br></pre></td></tr></table></figure>
<h3 id="打标签">打标签</h3>
<p>像其他版本控制系统（VCS）一样，Git
可以给历史中的某一个提交打上标签，以示重要。
比较有代表性的是人们会使用这个功能来标记发布结点（v1.0 等等）。
在本节中，你将会学习如何列出已有的标签、如何创建新标签、以及不同类型的标签分别是什么。</p>
<h4 id="列出标签">列出标签</h4>
<p>在 Git 中列出已有的标签是非常简单直观的。 只需要输入
<code>git tag</code>：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git tag</span></span><br><span class="line">v0.1</span><br><span class="line">v1.3</span><br></pre></td></tr></table></figure>
<p>这个命令以字母顺序列出标签；但是它们出现的顺序并不重要。</p>
<p>你也可以使用特定的模式查找标签。 例如，Git
自身的源代码仓库包含标签的数量超过 500 个。 如果只对 1.8.5
系列感兴趣，可以运行：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git tag -l <span class="string">&#x27;v1.8.5*&#x27;</span></span></span><br><span class="line">v1.8.5</span><br><span class="line">v1.8.5-rc0</span><br><span class="line">v1.8.5-rc1</span><br><span class="line">v1.8.5-rc2</span><br><span class="line">v1.8.5-rc3</span><br><span class="line">v1.8.5.1</span><br><span class="line">v1.8.5.2</span><br><span class="line">v1.8.5.3</span><br><span class="line">v1.8.5.4</span><br><span class="line">v1.8.5.5</span><br></pre></td></tr></table></figure>
<h4 id="创建标签">创建标签</h4>
<p>Git
使用两种主要类型的标签：轻量标签（lightweight）与附注标签（annotated）。</p>
<p>一个轻量标签很像一个不会改变的分支 - 它只是一个特定提交的引用。</p>
<p>然而，附注标签是存储在 Git 数据库中的一个完整对象。
它们是可以被校验的；其中包含打标签者的名字、电子邮件地址、日期时间；还有一个标签信息；并且可以使用
GNU Privacy Guard （GPG）签名与验证。
通常建议创建附注标签，这样你可以拥有以上所有信息；但是如果你只是想用一个临时的标签，或者因为某些原因不想要保存那些信息，轻量标签也是可用的。</p>
<h4 id="附注标签">附注标签</h4>
<p>在 Git 中创建一个附注标签是很简单的。 最简单的方式是当你在运行
<code>tag</code> 命令时指定 <code>-a</code> 选项：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git tag -a v1.4 -m <span class="string">&#x27;my version 1.4&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git tag</span></span><br><span class="line">v0.1</span><br><span class="line">v1.3</span><br><span class="line">v1.4</span><br></pre></td></tr></table></figure>
<p><code>-m</code> 选项指定了一条将会存储在标签中的信息。
如果没有为附注标签指定一条信息，Git 会运行编辑器要求你输入信息。</p>
<p>通过使用 <code>git show</code>
命令可以看到标签信息与对应的提交信息：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git show v1.4</span></span><br><span class="line">tag v1.4</span><br><span class="line">Tagger: Ben Straub &lt;ben@straub.cc&gt;</span><br><span class="line">Date:   Sat May 3 20:19:12 2014 -0700</span><br><span class="line"></span><br><span class="line">my version 1.4</span><br><span class="line"></span><br><span class="line">commit ca82a6dff817ec66f44342007202690a93763949</span><br><span class="line">Author: Scott Chacon &lt;schacon@gee-mail.com&gt;</span><br><span class="line">Date:   Mon Mar 17 21:52:11 2008 -0700</span><br><span class="line"></span><br><span class="line">    changed the version number</span><br></pre></td></tr></table></figure>
<p>输出显示了打标签者的信息、打标签的日期时间、附注信息，然后显示具体的提交信息。</p>
<h4 id="轻量标签">轻量标签</h4>
<p>另一种给提交打标签的方式是使用轻量标签。
轻量标签本质上是将提交校验和存储到一个文件中 - 没有保存任何其他信息。
创建轻量标签，不需要使用 <code>-a</code>、<code>-s</code> 或
<code>-m</code> 选项，只需要提供标签名字：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git tag v1.4-lw</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git tag</span></span><br><span class="line">v0.1</span><br><span class="line">v1.3</span><br><span class="line">v1.4</span><br><span class="line">v1.4-lw</span><br><span class="line">v1.5</span><br></pre></td></tr></table></figure>
<p>这时，如果在标签上运行
<code>git show</code>，你不会看到额外的标签信息。
命令只会显示出提交信息：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git show v1.4-lw</span></span><br><span class="line">commit ca82a6dff817ec66f44342007202690a93763949</span><br><span class="line">Author: Scott Chacon &lt;schacon@gee-mail.com&gt;</span><br><span class="line">Date:   Mon Mar 17 21:52:11 2008 -0700</span><br><span class="line"></span><br><span class="line">    changed the version number</span><br></pre></td></tr></table></figure>
<h4 id="后期打标签">后期打标签</h4>
<p>你也可以对过去的提交打标签。 假设提交历史是这样的：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --pretty=oneline</span></span><br><span class="line">15027957951b64cf874c3557a0f3547bd83b3ff6 Merge branch &#x27;experiment&#x27;</span><br><span class="line">a6b4c97498bd301d84096da251c98a07c7723e65 beginning write support</span><br><span class="line">0d52aaab4479697da7686c15f77a3d64d9165190 one more thing</span><br><span class="line">6d52a271eda8725415634dd79daabbc4d9b6008e Merge branch &#x27;experiment&#x27;</span><br><span class="line">0b7434d86859cc7b8c3d5e1dddfed66ff742fcbc added a commit function</span><br><span class="line">4682c3261057305bdd616e23b64b0857d832627b added a todo file</span><br><span class="line">166ae0c4d3f420721acbb115cc33848dfcc2121a started write support</span><br><span class="line">9fceb02d0ae598e95dc970b74767f19372d61af8 updated rakefile</span><br><span class="line">964f16d36dfccde844893cac5b347e7b3d44abbc commit the todo</span><br><span class="line">8a5cbc430f1a9c3d00faaeffd07798508422908a updated readme</span><br></pre></td></tr></table></figure>
<p>现在，假设在 v1.2 时你忘记给项目打标签，也就是在 “updated rakefile”
提交。 你可以在之后补上标签。
要在那个提交上打标签，你需要在命令的末尾指定提交的校验和（或部分校验和）:</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git tag -a v1.2 9fceb02</span></span><br></pre></td></tr></table></figure>
<p>可以看到你已经在那次提交上打上标签了：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git tag</span></span><br><span class="line">v0.1</span><br><span class="line">v1.2</span><br><span class="line">v1.3</span><br><span class="line">v1.4</span><br><span class="line">v1.4-lw</span><br><span class="line">v1.5</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git show v1.2</span></span><br><span class="line">tag v1.2</span><br><span class="line">Tagger: Scott Chacon &lt;schacon@gee-mail.com&gt;</span><br><span class="line">Date:   Mon Feb 9 15:32:16 2009 -0800</span><br><span class="line"></span><br><span class="line">version 1.2</span><br><span class="line">commit 9fceb02d0ae598e95dc970b74767f19372d61af8</span><br><span class="line">Author: Magnus Chacon &lt;mchacon@gee-mail.com&gt;</span><br><span class="line">Date:   Sun Apr 27 20:43:35 2008 -0700</span><br><span class="line"></span><br><span class="line">    updated rakefile</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h4 id="共享标签">共享标签</h4>
<p>默认情况下，<code>git push</code>
命令并不会传送标签到远程仓库服务器上。
在创建完标签后你必须显式地推送标签到共享服务器上。
这个过程就像共享远程分支一样 - 你可以运行
<code>git push origin [tagname]</code>。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin v1.5</span></span><br><span class="line">Counting objects: 14, done.</span><br><span class="line">Delta compression using up to 8 threads.</span><br><span class="line">Compressing objects: 100% (12/12), done.</span><br><span class="line">Writing objects: 100% (14/14), 2.05 KiB | 0 bytes/s, done.</span><br><span class="line">Total 14 (delta 3), reused 0 (delta 0)</span><br><span class="line">To git@github.com:schacon/simplegit.git</span><br><span class="line"> * [new tag]         v1.5 -&gt; v1.5</span><br></pre></td></tr></table></figure>
<p>如果想要一次性推送很多标签，也可以使用带有 <code>--tags</code> 选项的
<code>git push</code> 命令。
这将会把所有不在远程仓库服务器上的标签全部传送到那里。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin --tags</span></span><br><span class="line">Counting objects: 1, done.</span><br><span class="line">Writing objects: 100% (1/1), 160 bytes | 0 bytes/s, done.</span><br><span class="line">Total 1 (delta 0), reused 0 (delta 0)</span><br><span class="line">To git@github.com:schacon/simplegit.git</span><br><span class="line"> * [new tag]         v1.4 -&gt; v1.4</span><br><span class="line"> * [new tag]         v1.4-lw -&gt; v1.4-lw</span><br></pre></td></tr></table></figure>
<p>现在，当其他人从仓库中克隆或拉取，他们也能得到你的那些标签。</p>
<h4 id="检出标签">检出标签</h4>
<p>在 Git 中你并不能真的检出一个标签，因为它们并不能像分支一样来回移动。
如果你想要工作目录与仓库中特定的标签版本完全一样，可以使用
<code>git checkout -b [branchname] [tagname]</code>
在特定的标签上创建一个新分支：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -b version2 v2.0.0</span></span><br><span class="line">Switched to a new branch &#x27;version2&#x27;</span><br></pre></td></tr></table></figure>
<p>当然，如果在这之后又进行了一次提交，<code>version2</code>
分支会因为改动向前移动了，那么 <code>version2</code> 分支就会和
<code>v2.0.0</code> 标签稍微有些不同，这时就应该当心了。</p>
<h3 id="git-别名">Git 别名</h3>
<p>在我们结束本章 Git 基础之前，正好有一个小技巧可以使你的 Git
体验更简单、容易、熟悉：别名。
我们不会在之后的章节中引用到或假定你使用过它们，但是你大概应该知道如何使用它们。</p>
<p>Git 并不会在你输入部分命令时自动推断出你想要的命令。
如果不想每次都输入完整的 Git 命令，可以通过 <code>git config</code>
文件来轻松地为每一个命令设置一个别名。 这里有一些例子你可以试试：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.co checkout</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.br branch</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.ci commit</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.st status</span></span><br></pre></td></tr></table></figure>
<p>这意味着，当要输入 <code>git commit</code> 时，只需要输入
<code>git ci</code>。 随着你继续不断地使用
Git，可能也会经常使用其他命令，所以创建别名时不要犹豫。</p>
<p>在创建你认为应该存在的命令时这个技术会很有用。
例如，为了解决取消暂存文件的易用性问题，可以向 Git
中添加你自己的取消暂存别名：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.unstage <span class="string">&#x27;reset HEAD --&#x27;</span></span></span><br></pre></td></tr></table></figure>
<p>这会使下面的两个命令等价：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git unstage fileA</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git reset HEAD -- fileA</span></span><br></pre></td></tr></table></figure>
<p>这样看起来更清楚一些。 通常也会添加一个 <code>last</code>
命令，像这样：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.last <span class="string">&#x27;log -1 HEAD&#x27;</span></span></span><br></pre></td></tr></table></figure>
<p>这样，可以轻松地看到最后一次提交：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git last</span></span><br><span class="line">commit 66938dae3329c7aebe598c2246a8e6af90d04646</span><br><span class="line">Author: Josh Goebel &lt;dreamer3@example.com&gt;</span><br><span class="line">Date:   Tue Aug 26 19:48:51 2008 +0800</span><br><span class="line"></span><br><span class="line">    test for current head</span><br><span class="line"></span><br><span class="line">    Signed-off-by: Scott Chacon &lt;schacon@example.com&gt;</span><br></pre></td></tr></table></figure>
<p>可以看出，Git 只是简单地将别名替换为对应的命令。
然而，你可能想要执行外部命令，而不是一个 Git 子命令。
如果是那样的话，可以在命令前面加入 <code>!</code> 符号。
如果你自己要写一些与 Git 仓库协作的工具的话，那会很有用。 我们现在演示将
<code>git visual</code> 定义为 <code>gitk</code> 的别名：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.visual <span class="string">&#x27;!gitk&#x27;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="总结">总结</h3>
<p>现在，你可以完成所有基本的 Git
本地操作－创建或者克隆一个仓库、做更改、暂存并提交这些更改、浏览你的仓库从创建到现在的所有更改的历史。
下一步，本书将介绍 Git 的杀手级特性：分支模型。</p>
<h2 id="git-分支">Git 分支</h2>
<p>在很多版本控制系统中，使用分支常常需要完全创建一个源代码目录的副本。对于大项目来说，这样的过程会耗费很多时间。</p>
<p>有人把 Git 的分支模型称为它的`‘必杀技特性’'。 Git
创建新分支速度快，切换便捷。 与许多其它版本控制系统不同，Git
<strong>鼓励</strong>在工作流程中频繁地使用分支与合并。
理解和精通这一特性，你便会意识到 Git
是如此的强大而又独特，并且从此真正改变你的开发方式。</p>
<h3 id="分支简介">分支简介</h3>
<p>为了真正理解 Git 处理分支的方式，我们需要回顾一下 Git
是如何保存数据的。</p>
<p>或许你还记得 <a
href="https://www.progit.cn/#_getting_started">起步</a> 的内容，Git
保存的不是文件的变化或者差异，而是一系列不同时刻的文件快照。</p>
<p>在进行提交操作时，Git 会保存一个提交对象（commit object）。知道了 Git
保存数据的方式，我们可以很自然的想到——该提交对象会包含一个指向暂存内容快照的指针。
但不仅仅是这样，该提交对象还包含了作者的姓名和邮箱、提交时输入的信息以及<strong>指向它的父对象的指针</strong>。首次提交产生的提交对象没有父对象，普通提交操作产生的提交对象有一个父对象，而由多个分支合并产生的提交对象有多个父对象，</p>
<p>为了更加形象地说明，我们假设现在有一个工作目录，里面包含了三个将要被暂存和提交的文件。
暂存操作会为每一个文件计算校验和（使用我们在 <a
href="https://www.progit.cn/#_getting_started">起步</a> 中提到的 SHA-1
哈希算法），然后会把当前版本的文件快照保存到 Git 仓库中（Git 使用 blob
对象来保存它们），最终将校验和加入到暂存区域等待提交：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add README test.rb LICENSE</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&#x27;The initial commit of my project&#x27;</span></span></span><br></pre></td></tr></table></figure>
<p>当使用 <code>git commit</code> 进行提交操作时，Git
会先计算每一个子目录（本例中只有项目根目录）的校验和，然后在 Git
仓库中这些校验和保存为树对象。 随后，Git
便会创建一个提交对象，它除了包含上面提到的那些信息外，还包含指向这个树对象（项目根目录）的指针。如此一来，Git
就可以在需要的时候重现此次保存的快照。</p>
<p>现在，Git 仓库中有<strong>五个对象</strong>：三个 blob
对象（保存着文件快照）、一个树对象（记录着目录结构和 blob
对象索引）以及一个提交对象（包含着指向前述树对象的指针和所有提交信息）。</p>
<figure>
<img src="https://www.progit.cn/images/commit-and-tree.png"
alt="首次提交对象及其树结构。" />
<figcaption aria-hidden="true">首次提交对象及其树结构。</figcaption>
</figure>
<p>Figure 9. 首次提交对象及其树结构</p>
<p>做些修改后再次提交，那么这次产生的提交对象会包含一个指向上次提交对象（父对象）的指针。</p>
<figure>
<img src="https://www.progit.cn/images/commits-and-parents.png"
alt="提交对象及其父对象。" />
<figcaption aria-hidden="true">提交对象及其父对象。</figcaption>
</figure>
<p>Figure 10. 提交对象及其父对象</p>
<p><strong>Git 的分支，其实本质上仅仅是指向提交对象的可变指针</strong>。
Git 的默认分支名字是 <code>master</code>。
在多次提交操作之后，你其实已经有一个指向最后那个提交对象的
<code>master</code> 分支。 它会在每次的提交操作中自动向前移动。</p>
<table>
<colgroup>
<col style="width: 6%" />
<col style="width: 93%" />
</colgroup>
<thead>
<tr class="header">
<th>NOTE</th>
<th>Git 的 “master” 分支并不是一个特殊分支。
它就跟其它分支完全没有区别。 之所以几乎每一个仓库都有 master
分支，是因为 <code>git init</code>
命令默认创建它，并且大多数人都懒得去改动它。</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td></td>
<td></td>
</tr>
</tbody>
</table>
<figure>
<img src="https://www.progit.cn/images/branch-and-history.png"
alt="分支及其提交历史。" />
<figcaption aria-hidden="true">分支及其提交历史。</figcaption>
</figure>
<p>Figure 11. 分支及其提交历史</p>
<h4 id="分支创建">分支创建</h4>
<p>Git 是怎么创建新分支的呢？
很简单，<strong>它只是为你创建了一个可以移动的新的指针</strong>。
比如，创建一个 testing 分支， 你需要使用 <code>git branch</code>
命令：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch testing</span></span><br></pre></td></tr></table></figure>
<p><strong>这会在当前所在的提交对象上创建一个指针</strong>。</p>
<figure>
<img src="https://www.progit.cn/images/two-branches.png"
alt="两个指向相同提交历史的分支。" />
<figcaption aria-hidden="true">两个指向相同提交历史的分支。</figcaption>
</figure>
<p>Figure 12. 两个指向相同提交历史的分支</p>
<p>那么，Git 又是怎么知道当前在哪一个分支上呢？ 也很简单，它有一个名为
<code>HEAD</code> 的特殊指针。 请注意它和许多其它版本控制系统（如
Subversion 或 CVS）里的 <code>HEAD</code> 概念完全不同。 在 Git
中，它是一个指针，指向当前所在的本地分支（译注：<strong>将
<code>HEAD</code> 想象为当前分支的别名</strong>）。 在本例中，你仍然在
<code>master</code> 分支上。 因为 <code>git branch</code>
命令<strong>仅仅 <em>创建</em></strong>
一个新分支，并不会自动切换到新分支中去。</p>
<figure>
<img src="https://www.progit.cn/images/head-to-master.png"
alt="HEAD 指向当前所在的分支。" />
<figcaption aria-hidden="true">HEAD 指向当前所在的分支。</figcaption>
</figure>
<p>Figure 13. HEAD 指向当前所在的分支</p>
<p>你可以简单地使用 <code>git log</code>
命令查看各个分支当前所指的对象。 提供这一功能的参数是
<code>--decorate</code>。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --oneline --decorate</span></span><br><span class="line">f30ab (HEAD, master, testing) add feature #32 - ability to add new</span><br><span class="line">34ac2 fixed bug #1328 - stack overflow under certain conditions</span><br><span class="line">98ca9 initial commit of my project</span><br></pre></td></tr></table></figure>
<p>正如你所见，当前 “master” 和 “testing” 分支均指向校验和以
<code>f30ab</code> 开头的提交对象。</p>
<h4 id="分支切换">分支切换</h4>
<p>要切换到一个已存在的分支，你需要使用 <code>git checkout</code> 命令。
我们现在切换到新创建的 <code>testing</code> 分支去：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout testing</span></span><br></pre></td></tr></table></figure>
<p>这样 <code>HEAD</code> 就指向 <code>testing</code> 分支了。</p>
<figure>
<img src="https://www.progit.cn/images/head-to-testing.png"
alt="HEAD 指向当前所在的分支。" />
<figcaption aria-hidden="true">HEAD 指向当前所在的分支。</figcaption>
</figure>
<p>Figure 14. HEAD 指向当前所在的分支</p>
<p>那么，这样的实现方式会给我们带来什么好处呢？ 现在不妨再提交一次：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim test.rb</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -a -m <span class="string">&#x27;made a change&#x27;</span></span></span><br></pre></td></tr></table></figure>
<figure>
<img src="https://www.progit.cn/images/advance-testing.png"
alt="HEAD 分支随着提交操作自动向前移动。" />
<figcaption aria-hidden="true">HEAD
分支随着提交操作自动向前移动。</figcaption>
</figure>
<p>Figure 15. HEAD 分支随着提交操作自动向前移动</p>
<p>如图所示，你的 <code>testing</code> 分支向前移动了，但是
<code>master</code> 分支却没有，它仍然指向运行 <code>git checkout</code>
时所指的对象。 这就有意思了，现在我们切换回 <code>master</code>
分支看看：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout master</span></span><br></pre></td></tr></table></figure>
<figure>
<img src="https://www.progit.cn/images/checkout-master.png"
alt="检出时 HEAD 随之移动。" />
<figcaption aria-hidden="true">检出时 HEAD 随之移动。</figcaption>
</figure>
<p>Figure 16. 检出时 HEAD 随之移动</p>
<p><strong>这条命令做了两件事</strong>。 一是使 HEAD 指回
<code>master</code> 分支，二是将工作目录恢复成 <code>master</code>
分支所指向的快照内容。
也就是说，你现在做修改的话，项目将始于一个较旧的版本。
本质上来讲，这就是忽略 <code>testing</code>
分支所做的修改，以便于向另一个方向进行开发。</p>
<table>
<colgroup>
<col style="width: 6%" />
<col style="width: 93%" />
</colgroup>
<thead>
<tr class="header">
<th>NOTE</th>
<th>分支切换会改变你工作目录中的文件。在切换分支时，一定要注意你工作目录里的文件会被改变。
如果是切换到一个较旧的分支，你的工作目录会恢复到该分支最后一次提交时的样子。
如果 Git 不能干净利落地完成这个任务，它将禁止切换分支。</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>我们不妨再稍微做些修改并提交：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim test.rb</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -a -m <span class="string">&#x27;made other changes&#x27;</span></span></span><br></pre></td></tr></table></figure>
<p>现在，这个项目的提交历史已经产生了分叉（参见 <a
href="https://www.progit.cn/#divergent_history">项目分叉历史</a>）。
因为刚才你创建了一个新分支，并切换过去进行了一些工作，随后又切换回
master 分支进行了另外一些工作。
上述两次改动针对的是不同分支：你可以在不同分支间不断地来回切换和工作，并在时机成熟时将它们合并起来。
而所有这些工作，你需要的命令只有
<code>branch</code>、<code>checkout</code> 和 <code>commit</code>。</p>
<figure>
<img src="https://www.progit.cn/images/advance-master.png"
alt="项目分叉历史。" />
<figcaption aria-hidden="true">项目分叉历史。</figcaption>
</figure>
<p>Figure 17. 项目分叉历史</p>
<p>你可以简单地使用 <code>git log</code> 命令查看分叉历史。 运行
<code>git log --oneline --decorate --graph --all</code>
，它会输出你的提交历史、各个分支的指向以及项目的分支分叉情况。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --oneline --decorate --graph --all</span></span><br><span class="line">* c2b9e (HEAD, master) made other changes</span><br><span class="line">| * 87ab2 (testing) made a change</span><br><span class="line">|/</span><br><span class="line">* f30ab add feature #32 - ability to add new formats to the</span><br><span class="line">* 34ac2 fixed bug #1328 - stack overflow under certain conditions</span><br><span class="line">* 98ca9 initial commit of my project</span><br></pre></td></tr></table></figure>
<p>由于 Git 的分支<strong>实质上仅是包含所指对象校验和（长度为 40 的
SHA-1 值字符串）的文件</strong>，所以它的创建和销毁都异常高效。
创建一个新分支就相当于往一个文件中写入 41 个字节（40 个字符和 1
个换行符），如此的简单能不快吗？</p>
<p>这与过去大多数版本控制系统形成了鲜明的对比，它们在创建分支时，将所有的项目文件都复制一遍，并保存到一个特定的目录。
完成这样繁琐的过程通常需要好几秒钟，有时甚至需要好几分钟。所需时间的长短，完全取决于项目的规模。而在
Git 中，任何规模的项目都能在瞬间创建新分支。
同时，由于每次提交都会记录父对象，所以寻找恰当的合并基础（译注：即共同祖先）也是同样的简单和高效。
这些高效的特性使得 Git 鼓励开发人员频繁地创建和使用分支。</p>
<p>接下来，让我们看看你为什么应该这样做。</p>
<h3 id="分支的新建与合并">分支的新建与合并</h3>
<p>让我们来看一个简单的分支新建与分支合并的例子，实际工作中你可能会用到类似的工作流。
你将经历如下步骤：</p>
<ol type="1">
<li>开发某个网站。</li>
<li>为实现某个新的需求，创建一个分支。</li>
<li>在这个分支上开展工作。</li>
</ol>
<p>正在此时，你突然接到一个电话说有个很严重的问题需要紧急修补。
你将按照如下方式来处理：</p>
<ol type="1">
<li>切换到你的线上分支（production branch）。</li>
<li>为这个紧急任务新建一个分支，并在其中修复它。</li>
<li>在测试通过之后，切换回线上分支，然后合并这个修补分支，最后将改动推送到线上分支。</li>
<li>切换回你最初工作的分支上，继续工作。</li>
</ol>
<h4 id="新建分支">新建分支</h4>
<p>首先，我们假设你正在你的项目上工作，并且已经有一些提交。</p>
<figure>
<img src="https://www.progit.cn/images/basic-branching-1.png"
alt="一个简单的提交历史。" />
<figcaption aria-hidden="true">一个简单的提交历史。</figcaption>
</figure>
<p>Figure 18. 一个简单提交历史</p>
<p>现在，你已经决定要解决你的公司使用的问题追踪系统中的 #53 问题。
想要新建一个分支并同时切换到那个分支上，你可以运行一个带有
<code>-b</code> 参数的 <code>git checkout</code> 命令：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -b iss53</span></span><br><span class="line">Switched to a new branch &quot;iss53&quot;</span><br></pre></td></tr></table></figure>
<p>它是下面两条命令的简写：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch iss53</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout iss53</span></span><br></pre></td></tr></table></figure>
<figure>
<img src="https://www.progit.cn/images/basic-branching-2.png"
alt="创建一个新分支指针。" />
<figcaption aria-hidden="true">创建一个新分支指针。</figcaption>
</figure>
<p>Figure 19. 创建一个新分支指针</p>
<p>你继续在 #53 问题上工作，并且做了一些提交。
在此过程中，<code>iss53</code>
分支在不断的向前推进，因为你已经检出到该分支（也就是说，你的
<code>HEAD</code> 指针指向了 <code>iss53</code> 分支）</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim index.html</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -a -m <span class="string">&#x27;added a new footer [issue 53]&#x27;</span></span></span><br></pre></td></tr></table></figure>
<figure>
<img src="https://www.progit.cn/images/basic-branching-3.png"
alt="iss53 分支随着工作的进展向前推进。" />
<figcaption aria-hidden="true">iss53
分支随着工作的进展向前推进。</figcaption>
</figure>
<p>Figure 20. iss53 分支随着工作的进展向前推进</p>
<p>现在你接到那个电话，有个紧急问题等待你来解决。 有了 Git
的帮助，你不必把这个紧急问题和 <code>iss53</code>
的修改混在一起，你也不需要花大力气来还原关于 53#
问题的修改，然后再添加关于这个紧急问题的修改，最后将这个修改提交到线上分支。
你所要做的仅仅是切换回 <code>master</code> 分支。</p>
<p>但是，在你这么做之前，要留意你的工作目录和暂存区里那些还没有被提交的修改，它可能会和你即将检出的分支产生冲突从而阻止
Git 切换到该分支。
最好的方法是，在你切换分支之前，保持好一个干净的状态。
有一些方法可以绕过这个问题（即，保存进度（stashing） 和 修补提交（commit
amending）），我们会在 <a
href="https://www.progit.cn/#_git_stashing">储藏与清理</a>
中看到关于这两个命令的介绍。
现在，我们假设你已经把你的修改全部提交了，这时你可以切换回
<code>master</code> 分支了：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout master</span></span><br><span class="line">Switched to branch &#x27;master&#x27;</span><br></pre></td></tr></table></figure>
<p>这个时候，你的工作目录和你在开始 #53
问题之前一模一样，现在你可以专心修复紧急问题了。
<strong>请牢记：当你切换分支的时候，Git
会重置你的工作目录，使其看起来像回到了你在那个分支上最后一次提交的样子。</strong>
Git
会自动添加、删除、修改文件以确保此时你的工作目录和这个分支最后一次提交时的样子一模一样。</p>
<p>接下来，你要修复这个紧急问题。
让我们建立一个针对该紧急问题的分支（hotfix
branch），在该分支上工作直到问题解决：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -b hotfix</span></span><br><span class="line">Switched to a new branch &#x27;hotfix&#x27;</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim index.html</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -a -m <span class="string">&#x27;fixed the broken email address&#x27;</span></span></span><br><span class="line">[hotfix 1fb7853] fixed the broken email address</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure>
<figure>
<img src="https://www.progit.cn/images/basic-branching-4.png"
alt="基于 master 分支的紧急问题分支（hotfix branch）。" />
<figcaption aria-hidden="true">基于 <code>master</code>
分支的紧急问题分支（hotfix branch）。</figcaption>
</figure>
<p>Figure 21. 基于 <code>master</code> 分支的紧急问题分支
<code>hotfix branch</code></p>
<p>你可以运行你的测试，确保你的修改是正确的，然后将其合并回你的
<code>master</code> 分支来部署到线上。 你可以使用 <code>git merge</code>
命令来达到上述目的：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout master</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge hotfix</span></span><br><span class="line">Updating f42c576..3a0874c</span><br><span class="line">Fast-forward</span><br><span class="line"> index.html | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure>
<p>在合并的时候，你应该注意到了"快进<strong>（fast-forward）</strong>"这个词。
由于当前 <code>master</code> 分支所指向的提交是你当前提交（有关 hotfix
的提交）的直接上游，所以 Git 只是简单的将指针向前移动。
换句话说，当你试图合并两个分支时，如果顺着一个分支走下去能够到达另一个分支，那么
Git
在合并两者的时候，只会简单的将指针向前推进（指针右移），因为这种情况下的合并操作没有需要解决的分歧——这就叫做
“快进（fast-forward）”。</p>
<p>现在，最新的修改已经在 <code>master</code>
分支所指向的提交快照中，你可以着手发布该修复了。</p>
<figure>
<img src="https://www.progit.cn/images/basic-branching-5.png"
alt="master 被快进到 hotfix。" />
<figcaption aria-hidden="true"><code>master</code> 被快进到
<code>hotfix</code>。</figcaption>
</figure>
<p>Figure 22. <code>master</code> 被快进到 <code>hotfix</code></p>
<p>关于这个紧急问题的解决方案发布之后，你准备回到被打断之前时的工作中。
<strong>然而，你应该先删除 <code>hotfix</code>
分支，因为你已经不再需要它了 —— <code>master</code>
分支已经指向了同一个位置。</strong> 你可以使用带 <code>-d</code> 选项的
<code>git branch</code> 命令来删除分支：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -d hotfix</span></span><br><span class="line">Deleted branch hotfix (3a0874c).</span><br></pre></td></tr></table></figure>
<p>现在你可以切换回你正在工作的分支继续你的工作，也就是针对 #53
问题的那个分支（iss53 分支）。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout iss53</span></span><br><span class="line">Switched to branch &quot;iss53&quot;</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim index.html</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -a -m <span class="string">&#x27;finished the new footer [issue 53]&#x27;</span></span></span><br><span class="line">[iss53 ad82d7a] finished the new footer [issue 53]</span><br><span class="line">1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure>
<figure>
<img src="https://www.progit.cn/images/basic-branching-6.png"
alt="继续在 iss53 分支上的工作。" />
<figcaption aria-hidden="true">继续在 <code>iss53</code>
分支上的工作。</figcaption>
</figure>
<p>Figure 23. 继续在 <code>iss53</code> 分支上的工作</p>
<p>你在 <code>hotfix</code> 分支上所做的工作并没有包含到
<code>iss53</code> 分支中。 如果你需要拉取 <code>hotfix</code>
所做的修改，你可以使用 <code>git merge master</code> 命令<strong>将
<code>master</code> 分支合并入 <code>iss53</code> 分支，或者你也可以等到
<code>iss53</code> 分支完成其使命，再将其合并回 <code>master</code>
分支</strong>。</p>
<h4 id="分支的合并">分支的合并</h4>
<p>假设你已经修正了 #53 问题，并且打算将你的工作合并入
<code>master</code> 分支。 为此，你需要合并 <code>iss53</code> 分支到
<code>master</code> 分支，这和之前你合并 <code>hotfix</code>
分支所做的工作差不多。 你只需要检出到你想合并入的分支，然后运行
<code>git merge</code> 命令：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout master</span></span><br><span class="line">Switched to branch &#x27;master&#x27;</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge iss53</span></span><br><span class="line">Merge made by the &#x27;recursive&#x27; strategy.</span><br><span class="line">index.html |    1 +</span><br><span class="line">1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure>
<p>这和你之前合并 <code>hotfix</code> 分支的时候看起来有一点不一样。
在这种情况下，<strong>你的开发历史从一个更早的地方开始分叉开来</strong>（diverged）。
因为，<code>master</code> 分支所在提交并不是 <code>iss53</code>
分支所在提交的直接祖先，Git 不得不做一些额外的工作。
出现这种情况的时候，Git 会使用两个分支的末端所指的快照（<code>C4</code>
和
<code>C5</code>）以及这两个分支的工作祖先（<code>C2</code>），做一个简单的<strong>三方合并</strong>。</p>
<figure>
<img src="https://www.progit.cn/images/basic-merging-1.png"
alt="一次典型合并中所用到的三个快照。" />
<figcaption
aria-hidden="true">一次典型合并中所用到的三个快照。</figcaption>
</figure>
<p>Figure 24. 一次典型合并中所用到的三个快照</p>
<p>和之前将分支指针向前推进所不同的是，Git
将此次三方合并的结果做了一个新的快照<strong>并且自动创建一个新的提交指向它</strong>。
这个被称作一次合并提交，它的特别之处在于他有不止一个父提交。</p>
<figure>
<img src="https://www.progit.cn/images/basic-merging-2.png"
alt="一个合并提交。" />
<figcaption aria-hidden="true">一个合并提交。</figcaption>
</figure>
<p>Figure 25. 一个合并提交</p>
<p>需要指出的是，Git
会自行决定选取哪一个提交作为最优的共同祖先，并以此作为合并的基础；这和更加古老的
CVS 系统或者 Subversion （1.5
版本之前）不同，在这些古老的版本管理系统中，用户需要自己选择最佳的合并基础。
Git 的这个优势使其在合并操作上比其他系统要简单很多。</p>
<p>既然你的修改已经合并进来了，你已经不再需要 <code>iss53</code>
分支了。 现在你可以在任务追踪系统中关闭此项任务，并删除这个分支。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -d iss53</span></span><br></pre></td></tr></table></figure>
<h4 id="遇到冲突时的分支合并">遇到冲突时的分支合并</h4>
<p>有时候合并操作不会如此顺利。
<strong>如果你在两个不同的分支中，对同一个文件的同一个部分进行了不同的修改，Git
就没法干净的合并它们。</strong> 如果你对 #53 问题的修改和有关
<code>hotfix</code>
的修改都涉及到同一个文件的同一处，在合并它们的时候就会产生合并冲突：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge iss53</span></span><br><span class="line">Auto-merging index.html</span><br><span class="line">CONFLICT (content): Merge conflict in index.html</span><br><span class="line">Automatic merge failed; fix conflicts and then commit the result.</span><br></pre></td></tr></table></figure>
<p>此时 Git 做了合并，但是没有自动地创建一个新的合并提交。 Git
会暂停下来，等待你去解决合并产生的冲突。
你可以在合并冲突后的任意时刻使用 <code>git status</code>
命令来查看那些因包含合并冲突而处于未合并（unmerged）状态的文件：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">You have unmerged paths.</span><br><span class="line">  (fix conflicts and run &quot;git commit&quot;)</span><br><span class="line"></span><br><span class="line">Unmerged paths:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to mark resolution)</span><br><span class="line"></span><br><span class="line">    both modified:      index.html</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure>
<p>任何因包含合并冲突而有待解决的文件，都会以未合并状态标识出来。 Git
会在有冲突的文件中加入标准的冲突解决标记，这样你可以打开这些包含冲突的文件然后手动解决冲突。
出现冲突的文件会包含一些特殊区段，看起来像下面这个样子：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:index.html</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;footer&quot;</span>&gt;</span>contact : email.support@github.com<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">=======</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line"> please contact us at support@github.com</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt; iss53:index.html</span><br></pre></td></tr></table></figure>
<p>这表示 <code>HEAD</code> 所指示的版本（也就是你的 <code>master</code>
分支所在的位置，因为你在运行 merge
命令的时候已经检出到了这个分支）在这个区段的上半部分（<code>=======</code>
的上半部分），而 <code>iss53</code> 分支所指示的版本在
<code>=======</code> 的下半部分。 为了解决冲突，你必须选择使用由
<code>=======</code>
分割的两部分中的一个，或者你也可以自行合并这些内容。
例如，你可以通过把这段内容换成下面的样子来解决冲突：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">please contact us at email.support@github.com</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>上述的冲突解决方案仅保留了其中一个分支的修改，并且
<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code> , <code>=======</code> , 和
<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code> 这些行被完全删除了。
在你解决了所有文件里的冲突之后，对每个文件使用 <code>git add</code>
命令来将其标记为冲突已解决。 一旦暂存这些原本有冲突的文件，Git
就会将它们标记为冲突已解决。</p>
<p>如果你想使用图形化工具来解决冲突，你可以运行
<code>git mergetool</code>，该命令会为你启动一个合适的可视化合并工具，并带领你一步一步解决这些冲突：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git mergetool</span></span><br><span class="line"></span><br><span class="line">This message is displayed because &#x27;merge.tool&#x27; is not configured.</span><br><span class="line">See &#x27;git mergetool --tool-help&#x27; or &#x27;git help config&#x27; for more details.</span><br><span class="line">&#x27;git mergetool&#x27; will now attempt to use one of the following tools:</span><br><span class="line">opendiff kdiff3 tkdiff xxdiff meld tortoisemerge gvimdiff diffuse diffmerge ecmerge p4merge araxis bc3 codecompare vimdiff emerge</span><br><span class="line">Merging:</span><br><span class="line">index.html</span><br><span class="line"></span><br><span class="line">Normal merge conflict for &#x27;index.html&#x27;:</span><br><span class="line">  &#123;local&#125;: modified file</span><br><span class="line">  &#123;remote&#125;: modified file</span><br><span class="line">Hit return to start merge resolution tool (opendiff):</span><br></pre></td></tr></table></figure>
<p>如果你想使用除默认工具（在这里 Git 使用 <code>opendiff</code>
做为默认的合并工具，因为作者在 Mac
上运行该程序）外的其他合并工具，你可以在 “下列工具中（one of the
following tools）” 这句后面看到所有支持的合并工具。
然后输入你喜欢的工具名字就可以了。</p>
<table>
<colgroup>
<col style="width: 6%" />
<col style="width: 93%" />
</colgroup>
<thead>
<tr class="header">
<th>NOTE</th>
<th>如果你需要更加高级的工具来解决复杂的合并冲突，我们会在 <a
href="https://www.progit.cn/#_advanced_merging">高级合并</a>
介绍更多关于分支合并的内容。</th>
</tr>
</thead>
<tbody>
</tbody>
</table>
<p>等你退出合并工具之后，Git 会询问刚才的合并是否成功。
如果你回答是，Git 会暂存那些文件以表明冲突已解决： 你可以再次运行
<code>git status</code> 来确认所有的合并冲突都已被解决：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">On branch master</span><br><span class="line">All conflicts fixed but you are still merging.</span><br><span class="line">  (use &quot;git commit&quot; to conclude merge)</span><br><span class="line"></span><br><span class="line">Changes to be committed:</span><br><span class="line"></span><br><span class="line">    modified:   index.html</span><br></pre></td></tr></table></figure>
<p>如果你对结果感到满意，并且确定之前有冲突的的文件都已经暂存了，这时你可以输入
<code>git commit</code> 来完成合并提交。
默认情况下提交信息看起来像下面这个样子：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">Merge branch &#x27;iss53&#x27;</span><br><span class="line"></span><br><span class="line">Conflicts:</span><br><span class="line">    index.html</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># It looks like you may be committing a merge.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">If this is not correct, please remove the file</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">	.git/MERGE_HEAD</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">and try again.</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Please enter the commit message <span class="keyword">for</span> your changes. Lines starting</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">with <span class="string">&#x27;#&#x27;</span> will be ignored, and an empty message aborts the commit.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">On branch master</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">All conflicts fixed but you are still merging.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Changes to be committed:</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">	modified:   index.html</span></span><br><span class="line"><span class="meta prompt_">#</span></span><br></pre></td></tr></table></figure>
<p>如果你觉得上述的信息不够充分，不能完全体现分支合并的过程，你可以修改上述信息，添加一些细节给未来检视这个合并的读者一些帮助，告诉他们你是如何解决合并冲突的，以及理由是什么。</p>
<h3 id="分支管理">分支管理</h3>
<p>现在已经创建、合并、删除了一些分支，让我们看看一些常用的分支管理工具。</p>
<p><code>git branch</code> 命令不只是可以创建与删除分支。
如果不加任何参数运行它，会得到当前所有分支的一个列表：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch</span></span><br><span class="line">  iss53</span><br><span class="line">* master</span><br><span class="line">  testing</span><br></pre></td></tr></table></figure>
<p>注意 <code>master</code> 分支前的 <code>*</code>
字符：它代表现在检出的那一个分支（也就是说，当前 <code>HEAD</code>
指针所指向的分支）。 这意味着如果在这时候提交，<code>master</code>
分支将会随着新的工作向前移动。
如果需要查看每一个分支的最后一次提交，可以运行
<code>git branch -v</code> 命令：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -v</span></span><br><span class="line">  iss53   93b412c fix javascript issue</span><br><span class="line">* master  7a98805 Merge branch &#x27;iss53&#x27;</span><br><span class="line">  testing 782fd34 add scott to the author list in the readmes</span><br></pre></td></tr></table></figure>
<p><code>--merged</code> 与 <code>--no-merged</code>
这两个有用的选项可以过滤这个列表中已经合并或尚未合并到当前分支的分支。
如果要查看哪些分支已经合并到当前分支，可以运行
<code>git branch --merged</code>：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch --merged</span></span><br><span class="line">  iss53</span><br><span class="line">* master</span><br></pre></td></tr></table></figure>
<p>因为之前已经合并了 <code>iss53</code> 分支，所以现在看到它在列表中。
<strong>在这个列表中分支名字前没有 <code>*</code> 号的分支通常可以使用
<code>git branch -d</code>
删除掉；你已经将它们的工作整合到了另一个分支，所以并不会失去任何东西。</strong></p>
<p>查看所有包含未合并工作的分支，可以运行
<code>git branch --no-merged</code>：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch --no-merged</span></span><br><span class="line">  testing</span><br></pre></td></tr></table></figure>
<p>这里显示了其他分支。 因为它包含了还未合并的工作，尝试使用
<code>git branch -d</code> 命令删除它时会失败：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -d testing</span></span><br><span class="line">error: The branch &#x27;testing&#x27; is not fully merged.</span><br><span class="line">If you are sure you want to delete it, run &#x27;git branch -D testing&#x27;.</span><br></pre></td></tr></table></figure>
<p>如果真的想要删除分支并丢掉那些工作，如同帮助信息里所指出的，可以使用
<code>-D</code> 选项强制删除它。</p>
<h3 id="分支开发工作流">分支开发工作流</h3>
<p>现在你已经学会新建和合并分支，那么你可以或者应该用它来做些什么呢？
在本节，我们会介绍一些常见的利用分支进行开发的工作流程。而正是由于分支管理的便捷，才衍生出这些典型的工作模式，你可以根据项目实际情况选择一种用用看。</p>
<h4 id="长期分支">长期分支</h4>
<p>因为 Git
使用简单的三方合并，所以就算在一段较长的时间内，反复把一个分支合并入另一个分支，也不是什么难事。
也就是说，在整个项目开发周期的不同阶段，<strong>你可以同时拥有多个开放的分支；你可以定期地把某些特性分支合并入其他分支中</strong>。</p>
<p>许多使用 Git 的开发者都喜欢使用这种方式来工作，比如只在
<code>master</code>
分支上保留完全稳定的代码——有可能仅仅是已经发布或即将发布的代码。
他们还有一些名为 <code>develop</code> 或者 <code>next</code>
的平行分支，被用来做后续开发或者测试稳定性——这些分支不必保持绝对稳定，但是一旦达到稳定状态，它们就可以被合并入
<code>master</code> 分支了。
这样，在确保这些已完成的特性分支（短期分支，比如之前的
<code>iss53</code> 分支）能够通过所有测试，并且不会引入更多 bug
之后，就可以合并入主干分支中，等待下一次的发布。</p>
<p>事实上我们刚才讨论的，是随着你的提交而不断右移的指针。
稳定分支的指针总是在提交历史中落后一大截，而前沿分支的指针往往比较靠前。</p>
<figure>
<img src="https://www.progit.cn/images/lr-branches-1.png"
alt="渐进稳定分支的线性图。" />
<figcaption aria-hidden="true">渐进稳定分支的线性图。</figcaption>
</figure>
<p>Figure 26. 渐进稳定分支的线性图</p>
<p>通常把他们想象成流水线（work
silos）可能更好理解一点，那些经过测试考验的提交会被遴选到更加稳定的流水线上去。</p>
<figure>
<img src="https://www.progit.cn/images/lr-branches-2.png"
alt="渐进稳定分支的工作流（“silo”）视图。" />
<figcaption
aria-hidden="true">渐进稳定分支的工作流（“silo”）视图。</figcaption>
</figure>
<p>Figure 27. 渐进稳定分支的流水线（“silo”）视图</p>
<p>你可以用这种方法维护不同层次的稳定性。 一些大型项目还有一个
<code>proposed</code>（建议） 或
<code>pu: proposed updates</code>（建议更新）分支，它可能因包含一些不成熟的内容而不能进入
<code>next</code> 或者 <code>master</code> 分支。
这么做的目的是使你的分支具有不同级别的稳定性；当它们具有一定程度的稳定性后，再把它们合并入具有更高级别稳定性的分支中。
再次强调一下，使用多个长期分支的方法并非必要，但是这么做通常很有帮助，尤其是当你在一个非常庞大或者复杂的项目中工作时。</p>
<h4 id="特性分支">特性分支</h4>
<p>特性分支对任何规模的项目都适用。
特性分支是一种短期分支，<strong>它被用来实现单一特性或其相关工作</strong>。
也许你从来没有在其他的版本控制系统（<code>VCS</code>）上这么做过，因为在那些版本控制系统中创建和合并分支通常很费劲。
然而，在 Git 中一天之内多次创建、使用、合并、删除分支都很常见。</p>
<p>你已经在上一节中你创建的 <code>iss53</code> 和 <code>hotfix</code>
特性分支中看到过这种用法。 你在上一节用到的特性分支（<code>iss53</code>
和 <code>hotfix</code>
分支）中提交了一些更新，并且在它们合并入主干分支之后，你又删除了它们。
这项技术能使你快速并且完整地进行上下文切换（context-switch）——因为你的工作被分散到不同的流水线中，在不同的流水线中每个分支都仅与其目标特性相关，因此，在做代码审查之类的工作的时候就能更加容易地看出你做了哪些改动。
你可以把做出的改动在特性分支中保留几分钟、几天甚至几个月，等它们成熟之后再合并，而不用在乎它们建立的顺序或工作进度。</p>
<p>考虑这样一个例子，你在 <code>master</code> 分支上工作到
<code>C1</code>，这时为了解决一个问题而新建 <code>iss91</code> 分支，在
<code>iss91</code> 分支上工作到
<code>C4</code>，然而对于那个问题你又有了新的想法，于是你再新建一个
<code>iss91v2</code> 分支试图用另一种方法解决那个问题，接着你回到
<code>master</code>
分支工作了一会儿，你又冒出了一个不太确定的想法，你便在 <code>C10</code>
的时候新建一个 <code>dumbidea</code> 分支，并在上面做些实验。
你的提交历史看起来像下面这个样子：</p>
<figure>
<img src="https://www.progit.cn/images/topic-branches-1.png"
alt="拥有多个特性分支的提交历史。" />
<figcaption aria-hidden="true">拥有多个特性分支的提交历史。</figcaption>
</figure>
<p>Figure 28. 拥有多个特性分支的提交历史</p>
<p>现在，我们假设两件事情：你决定使用第二个方案来解决那个问题，即使用在
<code>iss91v2</code> 分支中方案；另外，你将 <code>dumbidea</code>
分支拿给你的同事看过之后，结果发现这是个惊人之举。 这时你可以抛弃
<code>iss91</code> 分支（即丢弃 <code>C5</code> 和 <code>C6</code>
提交），然后把另外两个分支合并入主干分支。
最终你的提交历史看起来像下面这个样子：</p>
<figure>
<img src="https://www.progit.cn/images/topic-branches-2.png"
alt="合并了 dumbidea 和 iss91v2 分支之后的提交历史。" />
<figcaption aria-hidden="true">合并了 <code>dumbidea</code> 和
<code>iss91v2</code> 分支之后的提交历史。</figcaption>
</figure>
<p>Figure 29. 合并了 <code>dumbidea</code> 和 <code>iss91v2</code>
分支之后的提交历史</p>
<p>我们将会在 <a href="https://www.progit.cn/#_distributed_git">分布式
Git</a>
中向你揭示更多有关分支工作流的细节，因此，请确保你阅读完那个章节之后，再来决定你的下个项目要使用什么样的分支策略（branching
scheme）。</p>
<p>请牢记，当你做这么多操作的时候，这些分支全部都存于本地。
当你新建和合并分支的时候，所有这一切都只发生在你本地的 Git 版本库中 ——
没有与服务器发生交互。</p>
<h3 id="远程分支">远程分支</h3>
<p>远程引用是对远程仓库的引用（指针），包括分支、标签等等。 你可以通过
<code>git ls-remote (remote)</code>
来显式地获得远程引用的完整列表，或者通过
<code>git remote show (remote)</code> 获得远程分支的更多信息。
然而，一个更常见的做法是利用远程跟踪分支。</p>
<p>远程跟踪分支是远程分支状态的引用。
它们是你不能移动的本地引用，当你做任何网络通信操作时，它们会自动移动。
远程跟踪分支像是你上次连接到远程仓库时，那些分支所处状态的书签。</p>
<p>它们以 <code>(remote)/(branch)</code> 形式命名。
例如，如果你想要看你最后一次与远程仓库 <code>origin</code> 通信时
<code>master</code> 分支的状态，你可以查看 <code>origin/master</code>
分支。 你与同事合作解决一个问题并且他们推送了一个 <code>iss53</code>
分支，你可能有自己的本地 <code>iss53</code>
分支；但是在服务器上的分支会指向 <code>origin/iss53</code> 的提交。</p>
<p>这可能有一点儿难以理解，让我们来看一个例子。 假设你的网络里有一个在
<code>git.ourcompany.com</code> 的 Git 服务器。 如果你从这里克隆，Git 的
<code>clone</code> 命令会为你自动将其命名为
<code>origin</code>，拉取它的所有数据，创建一个指向它的
<code>master</code> 分支的指针，并且在本地将其命名为
<code>origin/master</code>。 Git 也会给你一个与 origin 的
<code>master</code> 分支在指向同一个地方的本地 <code>master</code>
分支，这样你就有工作的基础。</p>
<table>
<colgroup>
<col style="width: 6%" />
<col style="width: 93%" />
</colgroup>
<thead>
<tr class="header">
<th>NOTE</th>
<th>“origin” 并无特殊含义远程仓库名字 “origin” 与分支名字 “master”
一样，在 Git 中并没有任何特别的含义一样。 同时 “master” 是当你运行
<code>git init</code>
时默认的起始分支名字，原因仅仅是它的广泛使用，“origin” 是当你运行
<code>git clone</code> 时默认的远程仓库名字。 如果你运行
<code>git clone -o booyah</code>，那么你默认的远程分支名字将会是
<code>booyah/master</code>。</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td></td>
<td></td>
</tr>
</tbody>
</table>
<figure>
<img src="https://www.progit.cn/images/remote-branches-1.png"
alt="克隆之后的服务器与本地仓库。" />
<figcaption aria-hidden="true">克隆之后的服务器与本地仓库。</figcaption>
</figure>
<p>Figure 30. 克隆之后的服务器与本地仓库</p>
<p>如果你在本地的 <code>master</code>
分支做了一些工作，然而在同一时间，其他人推送提交到
<code>git.ourcompany.com</code> 并更新了它的 <code>master</code>
分支，那么你的提交历史将向不同的方向前进。 也许，只要你不与 origin
服务器连接，你的 <code>origin/master</code> 指针就不会移动。</p>
<figure>
<img src="https://www.progit.cn/images/remote-branches-2.png"
alt="本地与远程的工作可以分叉。" />
<figcaption aria-hidden="true">本地与远程的工作可以分叉。</figcaption>
</figure>
<p>Figure 31. 本地与远程的工作可以分叉</p>
<p>如果要同步你的工作，运行 <code>git fetch origin</code> 命令。
这个命令查找 “origin” 是哪一个服务器（在本例中，它是
<code>git.ourcompany.com</code>），从中抓取本地没有的数据，并且更新本地数据库，移动
<code>origin/master</code> 指针指向新的、更新后的位置。</p>
<figure>
<img src="https://www.progit.cn/images/remote-branches-3.png"
alt="git fetch 更新你的远程仓库引用。" />
<figcaption aria-hidden="true"><code>git fetch</code>
更新你的远程仓库引用。</figcaption>
</figure>
<p>Figure 32. <code>git fetch</code> 更新你的远程仓库引用</p>
<p>为了演示有多个远程仓库与远程分支的情况，我们假定你有另一个内部 Git
服务器，仅用于你的 sprint 小组的开发工作。 这个服务器位于
<code>git.team1.ourcompany.com</code>。 你可以运行
<code>git remote add</code>
命令添加一个新的远程仓库引用到当前的项目，这个命令我们会在 <a
href="https://www.progit.cn/#_git_basics_chapter">Git 基础</a>
中详细说明。 将这个远程仓库命名为 <code>teamone</code>，将其作为整个 URL
的缩写。</p>
<figure>
<img src="https://www.progit.cn/images/remote-branches-4.png"
alt="添加另一个远程仓库。" />
<figcaption aria-hidden="true">添加另一个远程仓库。</figcaption>
</figure>
<p>Figure 33. 添加另一个远程仓库</p>
<p>现在，可以运行 <code>git fetch teamone</code> 来抓取远程仓库
<code>teamone</code> 有而本地没有的数据。 因为那台服务器上现有的数据是
<code>origin</code> 服务器上的一个子集，所以 Git
并不会抓取数据而是会设置远程跟踪分支 <code>teamone/master</code> 指向
<code>teamone</code> 的 <code>master</code> 分支。</p>
<figure>
<img src="https://www.progit.cn/images/remote-branches-5.png"
alt="远程跟踪分支 teamone/master。" />
<figcaption aria-hidden="true">远程跟踪分支
<code>teamone/master</code>。</figcaption>
</figure>
<p>Figure 34. 远程跟踪分支 <code>teamone/master</code></p>
<h4 id="推送">推送</h4>
<p>当你想要公开分享一个分支时，需要将其推送到有写入权限的远程仓库上。
本地的分支并不会自动与远程仓库同步 - 你必须显式地推送想要分享的分支。
这样，你就可以把不愿意分享的内容放到私人分支上，而将需要和别人协作的内容推送到公开分支。</p>
<p>如果希望和别人一起在名为 <code>serverfix</code>
的分支上工作，你可以像推送第一个分支那样推送它。 运行
<code>git push (remote) (branch)</code>:</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin serverfix</span></span><br><span class="line">Counting objects: 24, done.</span><br><span class="line">Delta compression using up to 8 threads.</span><br><span class="line">Compressing objects: 100% (15/15), done.</span><br><span class="line">Writing objects: 100% (24/24), 1.91 KiB | 0 bytes/s, done.</span><br><span class="line">Total 24 (delta 2), reused 0 (delta 0)</span><br><span class="line">To https://github.com/schacon/simplegit</span><br><span class="line"> * [new branch]      serverfix -&gt; serverfix</span><br></pre></td></tr></table></figure>
<p>这里有些工作被简化了。 Git 自动将 <code>serverfix</code>
分支名字展开为
<code>refs/heads/serverfix:refs/heads/serverfix</code>，那意味着，“推送本地的
serverfix 分支来更新远程仓库上的 serverfix 分支。” 我们将会详细学习 <a
href="https://www.progit.cn/#_git_internals">Git 内部原理</a> 的
<code>refs/heads/</code> 部分，但是现在可以先把它放在儿。 你也可以运行
<code>git push origin serverfix:serverfix</code>，它会做同样的事 -
相当于它说，“推送本地的 serverfix 分支，将其作为远程仓库的 serverfix
分支” 可以通过这种格式来推送本地分支到一个命名不相同的远程分支。
如果并不想让远程仓库上的分支叫做 <code>serverfix</code>，可以运行
<code>git push origin serverfix:awesomebranch</code> 来将本地的
<code>serverfix</code> 分支推送到远程仓库上的 <code>awesomebranch</code>
分支。</p>
<table>
<colgroup>
<col style="width: 6%" />
<col style="width: 93%" />
</colgroup>
<thead>
<tr class="header">
<th>NOTE</th>
<th>如何避免每次输入密码如果你正在使用 HTTPS URL 来推送，Git
服务器会询问用户名与密码。
默认情况下它会在终端中提示服务器是否允许你进行推送。如果不想在每一次推送时都输入用户名与密码，你可以设置一个
“credential cache”。
最简单的方式就是将其保存在内存中几分钟，可以简单地运行
<code>git config --global credential.helper cache</code>
来设置它。想要了解更多关于不同验证缓存的可用选项，查看 <a
href="https://www.progit.cn/#_credential_caching">凭证存储</a>。</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>下一次其他协作者从服务器上抓取数据时，他们会在本地生成一个远程分支
<code>origin/serverfix</code>，指向服务器的 <code>serverfix</code>
分支的引用：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git fetch origin</span></span><br><span class="line">remote: Counting objects: 7, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 3 (delta 0)</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From https://github.com/schacon/simplegit</span><br><span class="line"> * [new branch]      serverfix    -&gt; origin/serverfix</span><br></pre></td></tr></table></figure>
<p>要特别注意的一点是当抓取到新的远程跟踪分支时，本地不会自动生成一份可编辑的副本（拷贝）。
换一句话说，这种情况下，不会有一个新的 <code>serverfix</code> 分支 -
只有一个不可以修改的 <code>origin/serverfix</code> 指针。</p>
<p>可以运行 <code>git merge origin/serverfix</code>
将这些工作合并到当前所在的分支。 如果想要在自己的 <code>serverfix</code>
分支上工作，可以将其建立在远程跟踪分支之上：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -b serverfix origin/serverfix</span></span><br><span class="line">Branch serverfix set up to track remote branch serverfix from origin.</span><br><span class="line">Switched to a new branch &#x27;serverfix&#x27;</span><br></pre></td></tr></table></figure>
<p>这会给你一个用于工作的本地分支，并且起点位于
<code>origin/serverfix</code>。</p>
<h4 id="跟踪分支">跟踪分支</h4>
<p>从一个远程跟踪分支检出一个本地分支会自动创建一个叫做
“跟踪分支”（有时候也叫做 “上游分支”）。
跟踪分支是与远程分支有直接关系的本地分支。 如果在一个跟踪分支上输入
<code>git pull</code>，Git
能自动地识别去哪个服务器上抓取、合并到哪个分支。</p>
<p>当克隆一个仓库时，它通常会自动地创建一个跟踪
<code>origin/master</code> 的 <code>master</code> 分支。
然而，如果你愿意的话可以设置其他的跟踪分支 -
其他远程仓库上的跟踪分支，或者不跟踪 <code>master</code> 分支。
最简单的就是之前看到的例子，运行
<code>git checkout -b [branch] [remotename]/[branch]</code>。
这是一个十分常用的操作所以 Git 提供了 <code>--track</code>
快捷方式：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout --track origin/serverfix</span></span><br><span class="line">Branch serverfix set up to track remote branch serverfix from origin.</span><br><span class="line">Switched to a new branch &#x27;serverfix&#x27;</span><br></pre></td></tr></table></figure>
<p>如果想要将本地分支与远程分支设置为不同名字，你可以轻松地增加一个不同名字的本地分支的上一个命令：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -b sf origin/serverfix</span></span><br><span class="line">Branch sf set up to track remote branch serverfix from origin.</span><br><span class="line">Switched to a new branch &#x27;sf&#x27;</span><br></pre></td></tr></table></figure>
<p>现在，本地分支 <code>sf</code> 会自动从 <code>origin/serverfix</code>
拉取。</p>
<p>设置已有的本地分支跟踪一个刚刚拉取下来的远程分支，或者想要修改正在跟踪的上游分支，你可以在任意时间使用
<code>-u</code> 或 <code>--set-upstream-to</code> 选项运行
<code>git branch</code> 来显式地设置。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -u origin/serverfix</span></span><br><span class="line">Branch serverfix set up to track remote branch serverfix from origin.</span><br></pre></td></tr></table></figure>
<table>
<colgroup>
<col style="width: 6%" />
<col style="width: 93%" />
</colgroup>
<thead>
<tr class="header">
<th>NOTE</th>
<th>上游快捷方式当设置好跟踪分支后，可以通过 <code>@&#123;upstream&#125;</code> 或
<code>@&#123;u&#125;</code> 快捷方式来引用它。 所以在 <code>master</code>
分支时并且它正在跟踪 <code>origin/master</code> 时，如果愿意的话可以使用
<code>git merge @&#123;u&#125;</code> 来取代
<code>git merge origin/master</code>。</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>如果想要查看设置的所有跟踪分支，可以使用 <code>git branch</code> 的
<code>-vv</code> 选项。
这会将所有的本地分支列出来并且包含更多的信息，如每一个分支正在跟踪哪个远程分支与本地分支是否是领先、落后或是都有。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -vv</span></span><br><span class="line">  iss53     7e424c3 [origin/iss53: ahead 2] forgot the brackets</span><br><span class="line">  master    1ae2a45 [origin/master] deploying index fix</span><br><span class="line">* serverfix f8674d9 [teamone/server-fix-good: ahead 3, behind 1] this should do it</span><br><span class="line">  testing   5ea463a trying something new</span><br></pre></td></tr></table></figure>
<p>这里可以看到 <code>iss53</code> 分支正在跟踪
<code>origin/iss53</code> 并且 “ahead” 是
2，意味着本地有两个提交还没有推送到服务器上。 也能看到
<code>master</code> 分支正在跟踪 <code>origin/master</code>
分支并且是最新的。 接下来可以看到 <code>serverfix</code> 分支正在跟踪
<code>teamone</code> 服务器上的 <code>server-fix-good</code>
分支并且领先 2 落后
1，意味着服务器上有一次提交还没有合并入同时本地有三次提交还没有推送。
最后看到 <code>testing</code> 分支并没有跟踪任何远程分支。</p>
<p>需要重点注意的一点是这些数字的值来自于你从每个服务器上最后一次抓取的数据。
这个命令并没有连接服务器，它只会告诉你关于本地缓存的服务器数据。
如果想要统计最新的领先与落后数字，需要在运行此命令前抓取所有的远程仓库。
可以像这样做：<code>$ git fetch --all; git branch -vv</code></p>
<h4 id="拉取">拉取</h4>
<p>当 <code>git fetch</code>
命令从服务器上抓取本地没有的数据时，它并不会修改工作目录中的内容。
它只会获取数据然后让你自己合并。 然而，有一个命令叫作
<code>git pull</code> 在大多数情况下它的含义是一个
<code>git fetch</code> 紧接着一个 <code>git merge</code> 命令。
如果有一个像之前章节中演示的设置好的跟踪分支，不管它是显式地设置还是通过
<code>clone</code> 或 <code>checkout</code>
命令为你创建的，<code>git pull</code>
都会查找当前分支所跟踪的服务器与分支，从服务器上抓取数据然后尝试合并入那个远程分支。</p>
<p>由于 <code>git pull</code> 的魔法经常令人困惑所以通常单独显式地使用
<code>fetch</code> 与 <code>merge</code> 命令会更好一些。</p>
<h4 id="删除远程分支">删除远程分支</h4>
<p>假设你已经通过远程分支做完所有的工作了 -
也就是说你和你的协作者已经完成了一个特性并且将其合并到了远程仓库的
<code>master</code> 分支（或任何其他稳定代码分支）。 可以运行带有
<code>--delete</code> 选项的 <code>git push</code>
命令来删除一个远程分支。 如果想要从服务器上删除 <code>serverfix</code>
分支，运行下面的命令：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin --delete serverfix</span></span><br><span class="line">To https://github.com/schacon/simplegit</span><br><span class="line"> - [deleted]         serverfix</span><br></pre></td></tr></table></figure>
<p>基本上这个命令做的只是从服务器上移除这个指针。 Git
服务器通常会保留数据一段时间直到垃圾回收运行，所以如果不小心删除掉了，通常是很容易恢复的。</p>
<h3 id="变基">变基</h3>
<p>在 Git 中整合来自不同分支的修改主要有两种方法：<code>merge</code>
以及 <code>rebase</code>。
在本节中我们将学习什么是“变基”，怎样使用“变基”，并将展示该操作的惊艳之处，以及指出在何种情况下你应避免使用它。</p>
<h4 id="变基的基本操作">变基的基本操作</h4>
<p>请回顾之前在 <a
href="https://www.progit.cn/#_basic_merging">分支的合并</a>
中的一个例子，你会看到开发任务分叉到两个不同分支，又各自提交了更新。</p>
<figure>
<img src="https://www.progit.cn/images/basic-rebase-1.png"
alt="分叉的提交历史。" />
<figcaption aria-hidden="true">分叉的提交历史。</figcaption>
</figure>
<p>Figure 35. 分叉的提交历史</p>
<p>之前介绍过，整合分支最容易的方法是 <code>merge</code> 命令。
它会把两个分支的最新快照（<code>C3</code> 和
<code>C4</code>）以及二者最近的共同祖先（<code>C2</code>）进行三方合并，合并的结果是生成一个新的快照（并提交）。</p>
<figure>
<img src="https://www.progit.cn/images/basic-rebase-2.png"
alt="通过合并操作来整合分叉了的历史。" />
<figcaption
aria-hidden="true">通过合并操作来整合分叉了的历史。</figcaption>
</figure>
<p>Figure 36. 通过合并操作来整合分叉了的历史</p>
<p>其实，还有一种方法：你可以提取在 <code>C4</code>
中引入的补丁和修改，然后在 <code>C3</code> 的基础上应用一次。 在 Git
中，这种操作就叫做 <em>变基</em>。 你可以使用 <code>rebase</code>
命令将提交到某一分支上的所有修改都移至另一分支上，就好像“重新播放”一样。</p>
<p>在上面这个例子中，运行：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout experiment</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git rebase master</span></span><br><span class="line">First, rewinding head to replay your work on top of it...</span><br><span class="line">Applying: added staged command</span><br></pre></td></tr></table></figure>
<p>它的原理是首先找到这两个分支（即当前分支
<code>experiment</code>、变基操作的目标基底分支
<code>master</code>）的最近共同祖先
<code>C2</code>，然后对比当前分支相对于该祖先的历次提交，提取相应的修改并存为临时文件，然后将当前分支指向目标基底
<code>C3</code>,
最后以此将之前另存为临时文件的修改依序应用。（译注：写明了 commit
id，以便理解，下同）</p>
<figure>
<img src="https://www.progit.cn/images/basic-rebase-3.png"
alt="将 C4 中的修改变基到 C3 上。" />
<figcaption aria-hidden="true">将 <code>C4</code> 中的修改变基到
<code>C3</code> 上。</figcaption>
</figure>
<p>Figure 37. 将 <code>C4</code> 中的修改变基到 <code>C3</code> 上</p>
<p>现在回到 <code>master</code> 分支，进行一次快进合并。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout master</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge experiment</span></span><br></pre></td></tr></table></figure>
<figure>
<img src="https://www.progit.cn/images/basic-rebase-4.png"
alt="master 分支的快进合并。" />
<figcaption aria-hidden="true">master 分支的快进合并。</figcaption>
</figure>
<p>Figure 38. master 分支的快进合并</p>
<p>此时，<code>C4'</code> 指向的快照就和上面使用 <code>merge</code>
命令的例子中 <code>C5</code> 指向的快照一模一样了。
这两种整合方法的最终结果没有任何区别，但是变基使得提交历史更加整洁。
你在查看一个经过变基的分支的历史记录时会发现，尽管实际的开发工作是并行的，但它们看上去就像是串行的一样，提交历史是一条直线没有分叉。</p>
<p>一般我们这样做的目的是为了确保在向远程分支推送时能保持提交历史的整洁——例如向某个其他人维护的项目贡献代码时。
在这种情况下，你首先在自己的分支里进行开发，当开发完成时你需要先将你的代码变基到
<code>origin/master</code> 上，然后再向主项目提交修改。
这样的话，该项目的维护者就不再需要进行整合工作，只需要快进合并便可。</p>
<p>请注意，无论是通过变基，还是通过三方合并，整合的最终结果所指向的快照始终是一样的，只不过提交历史不同罢了。
变基是将一系列提交按照原有次序依次应用到另一分支上，而合并是把最终结果合在一起。</p>
<h4 id="更有趣的变基例子">更有趣的变基例子</h4>
<p>在对两个分支进行变基时，所生成的“重放”并不一定要在目标分支上应用，你也可以指定另外的一个分支进行应用。
就像 <a
href="https://www.progit.cn/#rbdiag_e">从一个特性分支里再分出一个特性分支的提交历史</a>
中的例子那样。 你创建了一个特性分支
<code>server</code>，为服务端添加了一些功能，提交了 <code>C3</code> 和
<code>C4</code>。 然后从 <code>C3</code> 上创建了特性分支
<code>client</code>，为客户端添加了一些功能，提交了 <code>C8</code> 和
<code>C9</code>。 最后，你回到 <code>server</code> 分支，又提交了
<code>C10</code>。</p>
<figure>
<img src="https://www.progit.cn/images/interesting-rebase-1.png"
alt="从一个特性分支里再分出一个特性分支的提交历史。" />
<figcaption
aria-hidden="true">从一个特性分支里再分出一个特性分支的提交历史。</figcaption>
</figure>
<p>Figure 39. 从一个特性分支里再分出一个特性分支的提交历史</p>
<p>假设你希望将 <code>client</code>
中的修改合并到主分支并发布，但暂时并不想合并 <code>server</code>
中的修改，因为它们还需要经过更全面的测试。 这时，你就可以使用
<code>git rebase</code> 命令的 <code>--onto</code> 选项，选中在
<code>client</code> 分支里但不在 <code>server</code> 分支里的修改（即
<code>C8</code> 和 <code>C9</code>），将它们在 <code>master</code>
分支上重放：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git rebase --onto master server client</span></span><br></pre></td></tr></table></figure>
<p>以上命令的意思是：“取出 <code>client</code> 分支，找出处于
<code>client</code> 分支和 <code>server</code>
分支的共同祖先之后的修改，然后把它们在 <code>master</code>
分支上重放一遍”。 这理解起来有一点复杂，不过效果非常酷。</p>
<figure>
<img src="https://www.progit.cn/images/interesting-rebase-2.png"
alt="截取特性分支上的另一个特性分支，然后变基到其他分支。" />
<figcaption
aria-hidden="true">截取特性分支上的另一个特性分支，然后变基到其他分支。</figcaption>
</figure>
<p>Figure 40. 截取特性分支上的另一个特性分支，然后变基到其他分支</p>
<p>现在可以快进合并 <code>master</code> 分支了。（如图 <a
href="https://www.progit.cn/#rbdiag_g">快进合并 master
分支，使之包含来自 client 分支的修改</a>）：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout master</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge client</span></span><br></pre></td></tr></table></figure>
<figure>
<img src="https://www.progit.cn/images/interesting-rebase-3.png"
alt="快进合并 master 分支，使之包含来自 client 分支的修改。" />
<figcaption aria-hidden="true">快进合并 master 分支，使之包含来自 client
分支的修改。</figcaption>
</figure>
<p>Figure 41. 快进合并 master 分支，使之包含来自 client 分支的修改</p>
<p>接下来你决定将 <code>server</code> 分支中的修改也整合进来。 使用
<code>git rebase [basebranch] [topicbranch]</code>
命令可以直接将特性分支（即本例中的
<code>server</code>）变基到目标分支（即
<code>master</code>）上。这样做能省去你先切换到 <code>server</code>
分支，再对其执行变基命令的多个步骤。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git rebase master server</span></span><br></pre></td></tr></table></figure>
<p>如图 <a href="https://www.progit.cn/#rbdiag_h">将 server
中的修改变基到 master 上</a> 所示，<code>server</code>
中的代码被“续”到了 <code>master</code> 后面。</p>
<figure>
<img src="https://www.progit.cn/images/interesting-rebase-4.png"
alt="将 server 中的修改变基到 master 上。" />
<figcaption aria-hidden="true">将 server 中的修改变基到 master
上。</figcaption>
</figure>
<p>Figure 42. 将 server 中的修改变基到 master 上</p>
<p>然后就可以快进合并主分支 master 了：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout master</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge server</span></span><br></pre></td></tr></table></figure>
<p>至此，<code>client</code> 和 <code>server</code>
分支中的修改都已经整合到主分支里了，你可以删除这两个分支，最终提交历史会变成图
<a href="https://www.progit.cn/#rbdiag_i">最终的提交历史</a>
中的样子：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -d client</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -d server</span></span><br></pre></td></tr></table></figure>
<figure>
<img src="https://www.progit.cn/images/interesting-rebase-5.png"
alt="最终的提交历史。" />
<figcaption aria-hidden="true">最终的提交历史。</figcaption>
</figure>
<p>Figure 43. 最终的提交历史</p>
<h4 id="变基的风险">变基的风险</h4>
<p>呃，奇妙的变基也并非完美无缺，要用它得遵守一条准则：</p>
<p><strong>不要对在你的仓库外有副本的分支执行变基。</strong></p>
<p>如果你遵循这条金科玉律，就不会出差错。
否则，人民群众会仇恨你，你的朋友和家人也会嘲笑你，唾弃你。</p>
<p>变基操作的实质是丢弃一些现有的提交，然后相应地新建一些内容一样但实际上不同的提交。
如果你已经将提交推送至某个仓库，而其他人也已经从该仓库拉取提交并进行了后续工作，此时，如果你用
<code>git rebase</code>
命令重新整理了提交并再次推送，你的同伴因此将不得不再次将他们手头的工作与你的提交进行整合，如果接下来你还要拉取并整合他们修改过的提交，事情就会变得一团糟。</p>
<p>让我们来看一个在公开的仓库上执行变基操作所带来的问题。
假设你从一个中央服务器克隆然后在它的基础上进行了一些开发。
你的提交历史如图所示：</p>
<figure>
<img src="https://www.progit.cn/images/perils-of-rebasing-1.png"
alt="克隆一个仓库，然后在它的基础上进行了一些开发。" />
<figcaption
aria-hidden="true">克隆一个仓库，然后在它的基础上进行了一些开发。</figcaption>
</figure>
<p>Figure 44. 克隆一个仓库，然后在它的基础上进行了一些开发</p>
<p>然后，某人又向中央服务器提交了一些修改，其中还包括一次合并。
你抓取了这些在远程分支上的修改，并将其合并到你本地的开发分支，然后你的提交历史就会变成这样：</p>
<figure>
<img src="https://www.progit.cn/images/perils-of-rebasing-2.png"
alt="抓取别人的提交，合并到自己的开发分支。" />
<figcaption
aria-hidden="true">抓取别人的提交，合并到自己的开发分支。</figcaption>
</figure>
<p>Figure 45. 抓取别人的提交，合并到自己的开发分支</p>
<p>接下来，这个人又决定把合并操作回滚，改用变基；继而又用
<code>git push --force</code> 命令覆盖了服务器上的提交历史。
之后你从服务器抓取更新，会发现多出来一些新的提交。</p>
<figure>
<img src="https://www.progit.cn/images/perils-of-rebasing-3.png"
alt="有人推送了经过变基的提交，并丢弃了你的本地开发所基于的一些提交。" />
<figcaption
aria-hidden="true">有人推送了经过变基的提交，并丢弃了你的本地开发所基于的一些提交。</figcaption>
</figure>
<p>Figure 46.
有人推送了经过变基的提交，并丢弃了你的本地开发所基于的一些提交</p>
<p>结果就是你们两人的处境都十分尴尬。 如果你执行 <code>git pull</code>
命令，你将合并来自两条提交历史的内容，生成一个新的合并提交，最终仓库会如图所示：</p>
<figure>
<img src="https://www.progit.cn/images/perils-of-rebasing-4.png"
alt="你将相同的内容又合并了一次，生成了一个新的提交。" />
<figcaption
aria-hidden="true">你将相同的内容又合并了一次，生成了一个新的提交。</figcaption>
</figure>
<p>Figure 47. 你将相同的内容又合并了一次，生成了一个新的提交</p>
<p>此时如果你执行 <code>git log</code>
命令，你会发现有两个提交的作者、日期、日志居然是一样的，这会令人感到混乱。
此外，如果你将这一堆又推送到服务器上，你实际上是将那些已经被变基抛弃的提交又找了回来，这会令人感到更加混乱。
很明显对方并不想在提交历史中看到 <code>C4</code> 和
<code>C6</code>，因为之前就是他把这两个提交通过变基丢弃的。</p>
<h4 id="用变基解决变基">用变基解决变基</h4>
<p>如果你 <strong>真的</strong> 遭遇了类似的处境，Git
还有一些高级魔法可以帮到你。
如果团队中的某人强制推送并覆盖了一些你所基于的提交，你需要做的就是检查你做了哪些修改，以及他们覆盖了哪些修改。</p>
<p>实际上，Git 除了对整个提交计算 SHA-1
校验和以外，也对本次提交所引入的修改计算了校验和—— 即 “patch-id”。</p>
<p>如果你拉取被覆盖过的更新并将你手头的工作基于此进行变基的话，一般情况下
Git 都能成功分辨出哪些是你的修改，并把它们应用到新分支上。</p>
<p>举个例子，如果遇到前面提到的 <a
href="https://www.progit.cn/#_pre_merge_rebase_work">有人推送了经过变基的提交，并丢弃了你的本地开发所基于的一些提交</a>
那种情境，如果我们不是执行合并，而是执行
<code>git rebase teamone/master</code>, Git 将会：</p>
<ul>
<li>检查哪些提交是我们的分支上独有的（C2，C3，C4，C6，C7）</li>
<li>检查其中哪些提交不是合并操作的结果（C2，C3，C4）</li>
<li>检查哪些提交在对方覆盖更新时并没有被纳入目标分支（只有 C2 和
C3，因为 C4 其实就是 C4'）</li>
<li>把查到的这些提交应用在 <code>teamone/master</code> 上面</li>
</ul>
<p>从而我们将得到与 <a
href="https://www.progit.cn/#_merge_rebase_work">你将相同的内容又合并了一次，生成了一个新的提交</a>
中不同的结果，如图 <a
href="https://www.progit.cn/#_rebase_rebase_work">在一个被变基然后强制推送的分支上再次执行变基</a>
所示。</p>
<figure>
<img src="https://www.progit.cn/images/perils-of-rebasing-5.png"
alt="在一个被变基然后强制推送的分支上再次执行变基。" />
<figcaption
aria-hidden="true">在一个被变基然后强制推送的分支上再次执行变基。</figcaption>
</figure>
<p>Figure 48. 在一个被变基然后强制推送的分支上再次执行变基</p>
<p>要想上述方案有效，还需要对方在变基时确保 C4' 和 C4 是几乎一样的。
否则变基操作将无法识别，并新建另一个类似 C4
的补丁（而这个补丁很可能无法整洁的整合入历史，因为补丁中的修改已经存在于某个地方了）。</p>
<p>在本例中另一种简单的方法是使用 <code>git pull --rebase</code>
命令而不是直接 <code>git pull</code>。
又或者你可以自己手动完成这个过程，先 <code>git fetch</code>，再
<code>git rebase teamone/master</code>。</p>
<p>如果你习惯使用 <code>git pull</code> ，同时又希望默认使用选项
<code>--rebase</code>，你可以执行这条语句
<code>git config --global pull.rebase true</code> 来更改
<code>pull.rebase</code> 的默认配置。</p>
<p>只要你把变基命令当作是在推送前清理提交使之整洁的工具，并且只在从未推送至共用仓库的提交上执行变基命令，就不会有事。
假如在那些已经被推送至共用仓库的提交上执行变基命令，并因此丢弃了一些别人的开发所基于的提交，那你就有大麻烦了，你的同事也会因此鄙视你。</p>
<p>如果你或你的同事在某些情形下决意要这么做，请一定要通知每个人执行
<code>git pull --rebase</code>
命令，这样尽管不能避免伤痛，但能有所缓解。</p>
<h4 id="变基-vs.-合并">变基 vs. 合并</h4>
<p>至此，你已在实战中学习了变基和合并的用法，你一定会想问，到底哪种方式更好。
在回答这个问题之前，让我们退后一步，想讨论一下提交历史到底意味着什么。</p>
<p>有一种观点认为，仓库的提交历史即是
<strong>记录实际发生过什么</strong>。
它是针对历史的文档，本身就有价值，不能乱改。
从这个角度看来，改变提交历史是一种亵渎，你使用_谎言_掩盖了实际发生过的事情。
如果由合并产生的提交历史是一团糟怎么办？
既然事实就是如此，那么这些痕迹就应该被保留下来，让后人能够查阅。</p>
<p>另一种观点则正好相反，他们认为提交历史是
<strong>项目过程中发生的事</strong>。
没人会出版一本书的第一版草稿，软件维护手册也是需要反复修订才能方便使用。
持这一观点的人会使用 rebase 及 filter-branch
等工具来编写故事，怎么方便后来的读者就怎么写。</p>
<p>现在，让我们回到之前的问题上来，到底合并还是变基好？希望你能明白，这并没有一个简单的答案。
Git
是一个非常强大的工具，它允许你对提交历史做许多事情，但每个团队、每个项目对此的需求并不相同。
既然你已经分别学习了两者的用法，相信你能够根据实际情况作出明智的选择。</p>
<p>总的原则是，只对尚未推送或分享给别人的本地修改执行变基操作清理历史，从不对已推送至别处的提交执行变基操作，这样，你才能享受到两种方式带来的便利。</p>
<h3 id="总结-1">总结</h3>
<p>我们已经讲完了 Git 分支与合并的基础知识。
你现在应该能自如地创建并切换至新分支、在不同分支之间切换以及合并本地分支。
你现在应该也能通过推送你的分支至共享服务以分享它们、使用共享分支与他人协作以及在共享之前使用变基操作合并你的分支。
下一章，我们将要讲到，如果你想要运行自己的 Git
仓库托管服务器，你需要知道些什么。</p>
]]></content>
      <categories>
        <category>OO</category>
        <category>读书笔记</category>
        <category>S3</category>
      </categories>
      <tags>
        <tag>读书笔记</tag>
        <tag>OO</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>WangDao OS Chapter2</title>
    <url>/WD-OS-Chap2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>枯燥无味的王道考研 OS 第二章 进程与线程 知识点罗列</p>
</blockquote>
<span id="more"></span>
<h2 id="进程的概念组成特征">进程的概念、组成、特征</h2>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230124175307299.png"
alt="2.1-总" />
<figcaption aria-hidden="true">2.1-总</figcaption>
</figure>
<h3 id="进程的概念">进程的概念</h3>
<p>程序是静态的，进程是动态的，是程序的一次执行过程</p>
<p>QQ.exe 和启动 QQ</p>
<h3 id="进程的组成">进程的组成</h3>
<blockquote>
<p>准确来说是进程实体的组成</p>
</blockquote>
<h4 id="pcb">PCB</h4>
<p>PCB(Process Control
Block)：进程控制块，保存操作系统管理各个并发进程时所需要的信息</p>
<p><strong>PCB 是进程存在的唯一标志</strong>，进程创建时操作系统会创建
PCB，进程结束时操作系统会回收 PCB</p>
<p><strong>供给操作系统使用</strong></p>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230124174652024.png"
alt="2.1.2.1-PCB组成" />
<figcaption aria-hidden="true">2.1.2.1-PCB组成</figcaption>
</figure>
<h4 id="程序段数据段">程序段、数据段</h4>
<p>程序段：程序代码（指令序列）</p>
<p>数据段：运行过程中产生的各种数据（如定义的变量）</p>
<p><strong>供给进程自身使用</strong>，与进程自身运行逻辑有关</p>
<h4 id="进程实体">进程实体</h4>
<p>进程实体（进程映像）由PCB、程序段、数据段组成，反应了进程在某一时刻的状态</p>
<p>所以可以这样定义进程：<strong>进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位</strong></p>
<blockquote>
<p>调度指上 CPU 运行</p>
</blockquote>
<p>进程是动态的，进程实体（进程映像）是静态的。</p>
<h3 id="进程的特征">进程的特征</h3>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230124175212607.png"
alt="2.1.3" />
<figcaption aria-hidden="true">2.1.3</figcaption>
</figure>
<p>其中，动态性是进程<strong>最基本</strong>的特征</p>
<h2 id="进程的状态与转换">进程的状态与转换</h2>
<figure>
<img
src="C:\Users\Lee/AppData/Roaming/Typora/typora-user-images/image-20230124201936453.png"
alt="2.2总" />
<figcaption aria-hidden="true">2.2总</figcaption>
</figure>
<h3 id="进程的状态">进程的状态</h3>
<p>创建态：进程正在被创建，操作系统为进程分配资源，初始化 PCB</p>
<p>就绪态：进程已经创建完成具备运行条件，但是没有空闲
CPU，暂时不能运行</p>
<p>运行态：进程正在 CPU 上运行，CPU 执行进程对应的程序</p>
<p>阻塞态：进程运行过程中，在等待某个事件的发生而无法继续运行，操作系统会让进程下
CPU 进入阻塞态</p>
<p>终止态：操作系统让进程下 CPU，并回收内存空间与该进程的 PCB</p>
<h3 id="进程的状态转换">进程的状态转换</h3>
<figure>
<img
src="C:\Users\Lee/AppData/Roaming/Typora/typora-user-images/image-20230124201325614.png"
alt="2.2.2丁字裤模型" />
<figcaption aria-hidden="true">2.2.2丁字裤模型</figcaption>
</figure>
<p>PCB 中也有一个变量 state 对应进程的当前状态</p>
<h3 id="进程的组织">进程的组织</h3>
<h4 id="链接">链接</h4>
<p>按照进程状态将 PCB 分为多个队列，指针指向当前处于某状态的进程</p>
<p>如就绪队列指针指向当前处于就绪态的进程</p>
<p>单核 CPU 同一时刻只能有一个进程处于运行态，多核 CPU
可有多个进程同时处于运行态</p>
<h4 id="索引">索引</h4>
<p>按照进程状态的不同建立索引表</p>
<h2 id="进程控制">进程控制</h2>
<p>简而言之就是实现进程状态的转换</p>
<h3 id="相关原语">相关原语</h3>
<p>原语通过“关中断指令”和“开中断指令”两个<strong>特权指令</strong>实现原子性</p>
<p>CPU
在正常情况下每执行完一条指令都会例行检查是否有中断信号，而关中断之后便不再进行该检查</p>
<figure>
<img
src="C:\Users\Lee/AppData/Roaming/Typora/typora-user-images/image-20230124202446434.png"
alt="2.3.1创建" />
<figcaption aria-hidden="true">2.3.1创建</figcaption>
</figure>
<figure>
<img
src="C:\Users\Lee/AppData/Roaming/Typora/typora-user-images/image-20230124202503059.png"
alt="2.3.1终止" />
<figcaption aria-hidden="true">2.3.1终止</figcaption>
</figure>
<p>将任意状态的进程转变为终止态最终消失</p>
<p>正常结束：进程调用 exit 系统调用请求终止</p>
<p>异常结束：除 0，非法使用特权指令等被操作系统杀掉</p>
<p>外界干预：任务管理器用户杀掉</p>
<figure>
<img
src="C:\Users\Lee/AppData/Roaming/Typora/typora-user-images/image-20230124202905434.png"
alt="2.3.1阻塞和唤醒" />
<figcaption aria-hidden="true">2.3.1阻塞和唤醒</figcaption>
</figure>
<p>阻塞和唤醒的原因应为同一件事</p>
<figure>
<img
src="C:\Users\Lee/AppData/Roaming/Typora/typora-user-images/image-20230124202955702.png"
alt="2.3.1切换" />
<figcaption aria-hidden="true">2.3.1切换</figcaption>
</figure>
<p>正确完成切换的前提是先在寄存器中保存进程的运行环境（必要的寄存器信息）</p>
<p>进程控制原语的三点共同点：</p>
<ol type="1">
<li><p>更新 PCB 中的信息</p></li>
<li><p>将 PCB 装入合适的队列</p></li>
<li><p>分配和回收资源</p></li>
</ol>
<h2 id="进程通信ipc">进程通信（IPC）</h2>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20230126055115286.png"
alt="2.4总" />
<figcaption aria-hidden="true">2.4总</figcaption>
</figure>
<p>两个进程之间产生数据交互</p>
<p>因为进程是分配系统资源的单位，所以各进程拥有的内存地址空间相互独立</p>
<h3 id="共享存储">共享存储</h3>
<p>基于数据结构、基于共享空间</p>
<h3 id="消息传递">消息传递</h3>
<p>以格式化的信息（Message）为单位，通过发送消息、接收消息两个原语进行数据交换</p>
<h3 id="管道通信">管道通信</h3>
<p>“管道”是一个特殊的共享文件，又名pipe文件。其实就是在内存中开辟一个大小固定的内存缓冲区</p>
<p>采用半双工通信，单向传输，各进程互斥地访问管道</p>
<p>管道写满，写进程阻塞；管道读空，读进程阻塞</p>
<h2 id="线程概念-多线程模型">线程概念 多线程模型</h2>
<h3 id="线程的概念及属性优点">线程的概念及属性、优点</h3>
<p>有的进程可能需要“同时”做很多事，而传统的进程只能串行地执行一系列程序。为此引入“线程”增加并发度。</p>
<p>可以把线程理解为“轻量级进程”。线程是一个基本的CPU执行单元，也是程序执行流的最小单位。</p>
<p>引入线程之后，不仅是进程之间可以并发，进程内的各线程之间也可以并发，从而进一步提升了系统的并发度，使得一个进程内</p>
<p>也可以并发处理各种任务（如QQ视频、文字聊天、传文件）</p>
<p>引入线程后，进程只作为除CPU之外的系统资源的分配单元（如打印机、内存地址空间等都是分配给进程的）。线程则作为处理机的分配单元。</p>
<h3 id="线程的属性">线程的属性</h3>
<h3 id="线程的实现方式">线程的实现方式</h3>
<p>用户级线程（User-Level Thread, ULT）和内核级线程（Kernel-Level
Thread, KLT）</p>
<p>从代码的角度看，线程其实就是一段代码逻辑。</p>
<table>
<colgroup>
<col style="width: 34%" />
<col style="width: 32%" />
<col style="width: 32%" />
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>ULT</th>
<th>KLT</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>线程的管理工作由谁来完成？</td>
<td>应用程序</td>
<td>OS kernel</td>
</tr>
<tr class="even">
<td>线程切换时 CPU 状态</td>
<td>用户态</td>
<td>核心态</td>
</tr>
<tr class="odd">
<td>操作系统是否能意识到用户级线程的存在？</td>
<td>否，只有用户看来是多线程</td>
<td>是，OS 通过 TCB 对线程进行管理</td>
</tr>
<tr class="even">
<td>优点</td>
<td>不需变态，开销小，效率高</td>
<td>并发能力强，可在多核处理机上并行运行</td>
</tr>
<tr class="odd">
<td>缺点</td>
<td>并发度低，不能在多核处理机上并行运行</td>
<td>需变态，开销大，效率低</td>
</tr>
</tbody>
</table>
<p>注：TCB 类比 PCB，线程控制块</p>
<p>可以看到二者互为优缺点</p>
<h3 id="多线程模型">多线程模型</h3>
<p>在<strong>支持内核级线程 KLT
的系统中</strong>，根据用户级线程和内核级线程的映射关系，划分出几种多线程模型</p>
<p>前面的数目是 ULT，后面的数目是 KLT</p>
<p>一对一有 KLT 的缺点，多对一有 ULT 的缺点，多对多综合了</p>
<p>多对多模型：n 个ULT 映射到 m 个 KLT（n &gt;= m）。每个 ULT 对应 m 个
KLT</p>
<p>克服了多对一模型并发度不高的缺点（一个阻塞全体阻塞），又克服了一对一模型中一个用线程库
户进程占用太多内核级线程，开销太大的缺点。</p>
<p>可以这么理解：</p>
<p>用户级线程是“代码逻辑”的载体</p>
<p>内核级线程是“运行机会”的载体</p>
<p>一段“代码逻辑”只有获得了“运行机会”才能被 CPU <del>CPU</del>执行</p>
<figure>
<img src="image-20230126063144860.png" alt="image-20230126063144860" />
<figcaption aria-hidden="true">image-20230126063144860</figcaption>
</figure>
<h2 id="线程的组织与控制">线程的组织与控制</h2>
<p><img src="TCB%20与线程表.png" /></p>
<h2 id="调度的基本概念">调度的基本概念</h2>
<p>调度研究用某种规则决定处理任务顺序的问题</p>
<p>高级调度（作业调度）。按一定的原则从外存的作业后备队列中挑选一个作业调入内存，并创建进程。每个作业只调入一次，调出一次。作业调入时会建立PCB，调出时才撤销PCB。</p>
<p>低级调度（进程调度/处理机调度）——
按照某种策略从就绪队列中选取一个进程，将处理机分配给它。</p>
<p>进程调度是操作系统中最基本的一种调度，在一般的操作系统中都必须配置进程调度。进程调度的频率很高，一般几十毫秒一次。</p>
<p>内存不够时，可将某些进程的数据调出外存。等内存空闲或者进程需要运行时再重新调入内存。</p>
<p>暂时调到外存等待的进程状态为挂起状态。被挂起的进程PCB会被组织成挂起队列</p>
<p>中级调度（内存调度）——按照某种策略决定将哪个处于挂起状态的进程重新调入内存。</p>
<p>一个进程可能会被多次调出、调入内存，因此中级调度发生的频率要比高级调度更高。</p>
<p>暂时调到外存等待的进程状态为挂起状态（挂起态，suspend）</p>
<p>挂起态又可以进一步细分为就绪挂起、阻塞挂起两种状态</p>
<p>注意“挂起”和“阻塞”的区别，两种状态都是暂时不能获得CPU的服务，但挂起态是将进程映像调到外存去了，而阻塞态下进程映像还在内存中。</p>
<p>有的操作系统会把就绪挂起、阻塞挂起分为两个挂起队列，甚至会根据阻塞原因不同再把阻塞挂起进程进一步细分为多个队列。</p>
<figure>
<img src="三层调度的对比.png" alt="三层调度的对比" />
<figcaption aria-hidden="true">三层调度的对比</figcaption>
</figure>
<h2 id="进程调度的基本概念">进程调度的基本概念</h2>
<figure>
<img src="image-20230126073913377.png" alt="image-20230126073913377" />
<figcaption aria-hidden="true">image-20230126073913377</figcaption>
</figure>
<h2 id="调度器闲逛进程">调度器、闲逛进程</h2>
<h3 id="调度器">调度器</h3>
<p>调度程序决定：</p>
<p>让谁运行？——调度算法</p>
<p>运行多长时间？——时间片大小</p>
<p>调度时机——什么事件会触发“调度程序” ？</p>
<p>• 创建新进程</p>
<p>• 进程退出</p>
<p>• 运行进程阻塞</p>
<p>• I/O中断发生（可能唤醒某些阻塞进程）</p>
<p>• 非抢占式调度策略，只有运行进程阻塞或</p>
<p>退出才触发调度程序工作</p>
<p>• 抢占式调度策略，每个时钟中断或k个时钟</p>
<p>中断会触发调度程序工作</p>
<figure>
<img src="image-20230126074912039.png" alt="image-20230126074912039" />
<figcaption aria-hidden="true">image-20230126074912039</figcaption>
</figure>
<h3 id="闲逛进程">闲逛进程</h3>
<p>没有其他就绪进程时，运行闲逛进程</p>
<p>闲逛进程的特性：</p>
<p>• 优先级最低</p>
<p>•
可以是0地址指令，占一个完整的指令周期（指令周期末尾例行检查中断）</p>
<p>• 能耗低</p>
<h2 id="调度算法一">调度算法（一）</h2>
<p>算法的学习思路</p>
<table>
<colgroup>
<col style="width: 11%" />
<col style="width: 32%" />
<col style="width: 32%" />
<col style="width: 23%" />
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>FCFS</th>
<th>SJF</th>
<th>HRRN</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>算法思想</td>
<td>公平</td>
<td>平均等待时间、平均周转时间、平均带权周转时间最少</td>
<td>综合考虑作业/进程的等待时间和要求服务的时间</td>
</tr>
<tr class="even">
<td>算法规则</td>
<td>按照作业/进程到达的先后顺序进行服务</td>
<td>要求服务时间最短的作业/进程优先得到服务</td>
<td>选择响应比最高的作业/进程为其服务</td>
</tr>
<tr class="odd">
<td>作业调度 还是 进程调度</td>
<td>均可。用于作业调度时，考虑的是哪个作业先到达后备队列；用于进程调度时，考虑的是哪个进程先到达就绪队列</td>
<td>均可。用于进程调度时称为“短进程优先（SPF, Shortest Process
First）算法”</td>
<td>均可</td>
</tr>
<tr class="even">
<td>是否可抢占</td>
<td>非抢占式</td>
<td>非抢占式，抢占式为最短剩余时间优先算法（SRTN, Shortest Remaining
Time Next）</td>
<td>非抢占式</td>
</tr>
<tr class="odd">
<td>优点</td>
<td>公平、算法实现简单</td>
<td>“最短的”平均等待时间、平均周转时间</td>
<td></td>
</tr>
<tr class="even">
<td>缺点</td>
<td>对长作业有利，对短作业不利</td>
<td>对短作业有利，对长作业不利</td>
<td></td>
</tr>
<tr class="odd">
<td>是否会导致饥饿</td>
<td>不会</td>
<td>会（一直是短作业/进程会使长作业/进程饥饿）</td>
<td>不会</td>
</tr>
</tbody>
</table>
<p>饥饿（某进程/作业长期得不到服务）</p>
<p>先来先服务（FCFS, First Come First Serve）</p>
<p>短作业优先（SJF, Shortest Job First）</p>
<p>高响应比优先（HRRN, Highest Response Ratio Next）</p>
<p>常用的计算量如下： <span class="math display">\[
周转时间 = 完成时间 - 到达时间 \\
带权周转时间 = 周转时间/运行时间 \\
等待时间 = 周转时间 – 运行时间 \\
对于有计算和I/O操作的进程，其等待时间 = 周转时间 - 运行时间 -
I/O操作的时间 \\
响应比 = \frac{等待时间+要求服务时间}{要求服务时间}
\]</span> FCFS
算法是在每次调度的时候选择一个等待时间最长的作业（进程）为其服务。但是没有考虑到作业的运行时间，因此导致了对短作业不友好的问题</p>
<p>SJF
算法是选择一个执行时间最短的作业为其服务。但是又完全不考虑各个作业的等待时间，因此导致了对长作业不友好的问题，甚至还会造成饥饿问题</p>
<p>能不能设计一个算法，既考虑到各个作业的等待时间，也能兼顾运行时间呢？——高响应比优先算法</p>
<p>对于 SRTN
算法，每当有进程加入就绪队列改变时就需要调度，如果新到达的进程剩余时间比当前运行的进程剩余时间更短，则由新进程抢占处理机，当前运行进程重新回到就绪队列。另外，当一个进程完成时也需要调度</p>
<p>这几种算法主要关心对用户的公平性、平均周转时间、平均等待时间等评价系统整体性能的指标，但是不关心“响应时间”，也并不区分任务的紧急程度，因此对于用户来说，交互性很糟糕。因此这三种算法一般适合用于早期的批处理系统，当然，FCFS算法也常结合其他的算法使用，在现在也扮演着很重要的角色。而适合用于交互式系统的调度算法将在下个小节介绍</p>
<h2 id="调度算法二">调度算法（二）</h2>
<table>
<colgroup>
<col style="width: 13%" />
<col style="width: 33%" />
<col style="width: 28%" />
<col style="width: 25%" />
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>时间片轮转</th>
<th>优先级调度算法</th>
<th>HRRN</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>算法思想</td>
<td>公平</td>
<td>区分紧急程度</td>
<td>综合考虑作业/进程的等待时间和要求服务的时间</td>
</tr>
<tr class="even">
<td>算法规则</td>
<td>按照进程到达就绪队列的顺序，轮流让各个进程执行一个时间片</td>
<td>要求优先级最高的作业/进程优先得到服务</td>
<td>选择响应比最高的作业/进程为其服务</td>
</tr>
<tr class="odd">
<td>作业调度 还是 进程调度</td>
<td>进程调度</td>
<td>作业调度、进程调度、I/O调度均可</td>
<td>均可</td>
</tr>
<tr class="even">
<td>是否可抢占</td>
<td>抢占式，通过时钟中断通知</td>
<td>均有，抢占式需要在就绪队列变化时检查是否发生抢占</td>
<td>非抢占式</td>
</tr>
<tr class="odd">
<td>优点</td>
<td>公平、响应快、适用分时操作系统</td>
<td>适用于实时操作系统，可以灵活调整</td>
<td></td>
</tr>
<tr class="even">
<td>缺点</td>
<td>进程切换产生系统开销、不区分任务的紧急程度</td>
<td>持续的高优先级进程到来会导致饥饿</td>
<td></td>
</tr>
<tr class="odd">
<td>是否会导致饥饿</td>
<td>不会</td>
<td>会（一直是高优先级进程会使低优先级进程饥饿）</td>
<td>不会</td>
</tr>
</tbody>
</table>
<p>RR
算法常用于分时操作系统，更注重“响应时间”，因而此处不计算周转时间</p>
<p>时间片没用完但是运行完了也会主动放弃处理机发生调度</p>
<p>如果时间片太大，使得每个进程都可以在一个时间片内就完成，则 RR
算法退化为 FCFS 算法，并且会增大进程响应时间。因此时间片不能太大</p>
<p>另一方面，进程调度、切换是有时间代价的（保存、恢复运行环境），因此如果时间片太小，进程切换过于频繁，系统会花大量的时间来处理进程切换，从而导致实际用于进程执行的时间比例减少。可见时间片也不能太小</p>
<p>FCFS算法的优点是公平</p>
<p>SJF 算法的优点是能尽快处理完短作业，平均等待/周转时间等参数很优秀</p>
<p>法</p>
<p>时间片轮转调度算法可以让各个进程得到及时的响应</p>
<p>优先级调度算法可以灵活地调整各种进程被服务的机会</p>
<p>能否对其他算法做个折中权衡？得到一个综合表现优秀平衡的算法呢？——多级反馈队列调度算法</p>
<p>交互式操作系统（包括分时操作系统、实时操作系统等）更注重系统的‘响应时间、公平性、平衡性等指标。而这几种算法恰好也能较好地满足交互式系统的需求。因此这三种算法适合用于交互式系统。</p>
<h2 id="调度算法三">调度算法（三）</h2>
<p>系统中按进程类型设置多个队列，进程创建成功后插入某个队列</p>
<p>!(image-20230128213255504.png)</p>
<p>队列之间可采取固定优先级，或时间片划分</p>
<p>固定优先级：高优先级空时低优先级进程才能被调度</p>
<p>时间片划分：如三个队列分配时间50%、40%、10%</p>
<h2 id="进程同步-进程互斥">进程同步 进程互斥</h2>
<p>进程具有异步性，操作系统要提供“进程同步机制”来解决异步问题</p>
<p>进程的“并发”需要“共享”的支持</p>
<p><strong>临界资源：一个时间段内只允许一个进程使用的资源</strong></p>
<p>对临界资源的访问，必须互斥地进行。也叫做间接制约关系</p>
<p>对临界资源的互斥访问，可以在逻辑上分为如下四个部分：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">	entry section;</span><br><span class="line">    critical section;</span><br><span class="line">    <span class="built_in">exit</span> section;</span><br><span class="line">    remainder section;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>进入区：检查能否进入并上锁</p>
<p>临界区：访问临界资源的代码</p>
<p>退出区：解锁</p>
<p>剩余区：其他处理</p>
<p><strong>四个重要原则：空闲让进、忙则等待、有限等待、让权等待</strong></p>
<ol type="1">
<li><p>空闲让进。临界区空闲时，可以允许一个请求进入临界区的进程立即进入临界区；</p></li>
<li><p>忙则等待。当已有进程进入临界区时，其他试图进入临界区的进程必须等待；</p></li>
<li><p>有限等待。对请求访问的进程，应保证能在有限时间内进入临界区（保证不会饥饿）；</p></li>
<li><p>让权等待。当进程不能进入临界区时，应立即释放处理机，防止进程忙等待。</p></li>
</ol>
<h2 id="进程互斥的软件实现方法">进程互斥的软件实现方法</h2>
<figure>
<img src="image-20230128215145390.png" alt="image-20230128215145390" />
<figcaption aria-hidden="true">image-20230128215145390</figcaption>
</figure>
<p>代码示例：</p>
<p>单标志法</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> turn = <span class="number">0</span>; <span class="comment">// turn是当前允许进入临界区的进程号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// P0 process</span></span><br><span class="line"><span class="keyword">while</span> (turn != <span class="number">0</span>);</span><br><span class="line">critical section;</span><br><span class="line">turn = <span class="number">1</span>;</span><br><span class="line">remainder section;</span><br><span class="line"></span><br><span class="line"><span class="comment">// P1 process</span></span><br><span class="line"><span class="keyword">while</span> (turn != <span class="number">1</span>);</span><br><span class="line">critical section;</span><br><span class="line">turn = <span class="number">0</span>;</span><br><span class="line">remainder section;</span><br></pre></td></tr></table></figure>
<p>双标志先检查法：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> flag[<span class="number">2</span>]; <span class="comment">// 表示进入临界区意愿的数组</span></span><br><span class="line">flag[<span class="number">0</span>] = <span class="literal">false</span>;</span><br><span class="line">flag[<span class="number">1</span>] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// P0 process</span></span><br><span class="line"><span class="keyword">while</span> (flag[<span class="number">1</span>]); <span class="comment">//P1想要进入</span></span><br><span class="line">flag[<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">critical section;</span><br><span class="line">flag[<span class="number">0</span>] = <span class="literal">false</span>;</span><br><span class="line">remainder section;</span><br><span class="line"></span><br><span class="line"><span class="comment">// P1 process</span></span><br><span class="line"><span class="keyword">while</span> (flag[<span class="number">0</span>]);</span><br><span class="line">flag[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">critical section;</span><br><span class="line">flag[<span class="number">1</span>] = <span class="literal">false</span>;</span><br><span class="line">remainder section;</span><br></pre></td></tr></table></figure>
<p>先“检查”后“上锁”，进入区的“检查”和“上锁” 两个处理不是一气呵成的</p>
<p>双标志后检查法：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> flag[<span class="number">2</span>]; <span class="comment">// 表示进入临界区意愿的数组</span></span><br><span class="line">flag[<span class="number">0</span>] = <span class="literal">false</span>;</span><br><span class="line">flag[<span class="number">1</span>] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// P0 process</span></span><br><span class="line">flag[<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (flag[<span class="number">1</span>]); <span class="comment">//P1想要进入</span></span><br><span class="line">critical section;</span><br><span class="line">flag[<span class="number">0</span>] = <span class="literal">false</span>;</span><br><span class="line">remainder section;</span><br><span class="line"></span><br><span class="line"><span class="comment">// P1 process</span></span><br><span class="line">flag[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (flag[<span class="number">0</span>]);</span><br><span class="line">critical section;</span><br><span class="line">flag[<span class="number">1</span>] = <span class="literal">false</span>;</span><br><span class="line">remainder section;</span><br></pre></td></tr></table></figure>
<p>Peterson算法：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> flag[<span class="number">2</span>]; <span class="comment">// 表示进入临界区意愿的数组</span></span><br><span class="line"><span class="type">int</span> turn = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// P0 process</span></span><br><span class="line">flag[<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">turn = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (flag[<span class="number">1</span>] &amp;&amp; turn == <span class="number">1</span>); <span class="comment">//P1想要进入</span></span><br><span class="line">critical section;</span><br><span class="line">flag[<span class="number">0</span>] = <span class="literal">false</span>;</span><br><span class="line">remainder section;</span><br><span class="line"></span><br><span class="line"><span class="comment">// P1 process</span></span><br><span class="line">flag[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">turn = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (flag[<span class="number">0</span>] &amp;&amp; turn == <span class="number">0</span>);</span><br><span class="line">critical section;</span><br><span class="line">flag[<span class="number">1</span>] = <span class="literal">false</span>;</span><br><span class="line">remainder section;</span><br></pre></td></tr></table></figure>
<p>Peterson
算法相较于之前三种软件解决方案来说，是最好的，但依然不够好。</p>
<h2 id="进程互斥的硬件实现方法">进程互斥的硬件实现方法</h2>
<figure>
<img src="image-20230129064919699.png" alt="image-20230129064919699" />
<figcaption aria-hidden="true">image-20230129064919699</figcaption>
</figure>
<p>TSL</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="title function_">TestAndSet</span> <span class="params">(<span class="type">bool</span> *lock)</span> &#123;</span><br><span class="line">    <span class="type">bool</span> pre;</span><br><span class="line">    pre = lock*;</span><br><span class="line">    *lock = <span class="literal">true</span>; <span class="comment">// true表示加锁</span></span><br><span class="line">    <span class="keyword">return</span> pre; <span class="comment">// 你读读就会明白</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 实现互斥</span></span><br><span class="line"><span class="keyword">while</span> (TestAndSet (&amp;lock));</span><br><span class="line">critical section;</span><br><span class="line">lock = <span class="literal">false</span>; <span class="comment">// unlock</span></span><br><span class="line">remainder section;</span><br></pre></td></tr></table></figure>
<p>Swap</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">swap (<span class="type">bool</span> *a, <span class="type">bool</span> *b) &#123;</span><br><span class="line">    <span class="type">bool</span> temp;</span><br><span class="line">    temp = *a;</span><br><span class="line">    *a = *b;</span><br><span class="line">    *b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 实现互斥</span></span><br><span class="line"><span class="type">bool</span> pre = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (pre == <span class="literal">true</span>)</span><br><span class="line">    swap (&amp;lock, &amp;pre);</span><br><span class="line">critical section;</span><br><span class="line">lock = <span class="literal">false</span>; <span class="comment">// unlock</span></span><br><span class="line">remainder section;</span><br></pre></td></tr></table></figure>
<h2 id="互斥锁">互斥锁</h2>
<p>解决临界区最简单的工具就是互斥锁（mutex
lock）。进程在进入临界区时获得锁；退出时释放锁。函数 acquire()
获得锁，release() 释放锁。</p>
<p>每个互斥锁有一个布尔变量 available
表示锁是否可用。如果锁是可用的，调用 acquire()
会成功，且锁不再可用。当一个进程试图获取不可用的锁时，会被阻塞，直到锁被释放。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">acquire() &#123;</span><br><span class="line">    <span class="keyword">while</span> (!available); <span class="comment">// 忙等待</span></span><br><span class="line">    available = <span class="literal">false</span>; <span class="comment">// 获得锁</span></span><br><span class="line">&#125; <span class="comment">// entry section</span></span><br><span class="line">release() &#123;</span><br><span class="line">    available = <span class="literal">true</span>; <span class="comment">// 释放锁</span></span><br><span class="line">&#125; <span class="comment">// exit section</span></span><br></pre></td></tr></table></figure>
<p>acquire() release()
的执行是<strong>原子操作</strong>，因此互斥锁通常采用硬件机制来实现。
<strong>互斥锁的主要缺点是忙等待</strong>，当有一个进程在临界区中，任何其他进程在进入临界区时必须连续循环调用
acquire()。当多个进程共享同一 CPU 时，就浪费了 CPU
周期。因此，互斥锁通常用于<strong>多处理器系统</strong>，一个线程可以在一个处理器上等待，不影响其他线程的执行。
需要连续循环忙等的互斥锁，都可称为自旋锁（spin
lock），如TSL指令、swap指令、单标志法</p>
<p>所以可以得出锁的特性：</p>
<p>• 需忙等，进程时间片用完才下处理机，违反“让权等待”</p>
<p>•
优点：等待期间不用切换进程上下文，多处理器系统中，若上锁的时间短，则等待代价很低</p>
<p>•
常用于多处理器系统，一个核忙等，其他核照常工作，并快速释放临界区</p>
<p>• 不太适用于单处理机系统，忙等的过程中不可能解锁</p>
<h2 id="信号量机制">信号量机制</h2>
<figure>
<img src="image-20230129073214410.png" alt="image-20230129073214410" />
<figcaption aria-hidden="true">image-20230129073214410</figcaption>
</figure>
<p>Dijkstra！</p>
<p>前面遗留的问题：不能同时进行</p>
<p>如果把进入区、退出区的操作都用“原语”实现就能解决</p>
<p><strong>用户进程</strong>可以通过使用操作系统提供的一对原语来对信号量进行操作</p>
<p>信号量其实就是一个变量
，可以用一个信号量来表示系统中某种资源的数量。与整数变量不同的是，对信号量的操作只有三种，初始化、P操作、V操作</p>
<p>比如：系统中只有一台打印机，就可以设置一个初值为 1 的信号量。</p>
<p>一对原语：wait(S) 原语和 signal(S)
原语，可以把原语理解为我们自己写的函数，函数名分别为 wait 和
signal，括号里的信号量 S 其实就是函数调用时传入的一个参数。简称为
P、V操作，分别写为 P(S)、V(S)</p>
<p>整型信号量：</p>
<p>Eg ：某计算机系统中有一台打印机…</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> S = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">wait</span> <span class="params">(<span class="type">int</span> S)</span> &#123; <span class="comment">// 相当于进入区</span></span><br><span class="line">    <span class="keyword">while</span> (S &lt;= <span class="number">0</span>); <span class="comment">// 资源数不够则循环等待</span></span><br><span class="line">    S--; <span class="comment">// 资源数足够则占用一个</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">signal</span> <span class="params">(<span class="type">int</span> S)</span> &#123; <span class="comment">// 相当于退出区</span></span><br><span class="line">    S++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// process P0</span></span><br><span class="line">wait(S);</span><br><span class="line"><span class="comment">// use the printer, critical section</span></span><br><span class="line">signal(S);</span><br><span class="line"></span><br><span class="line"><span class="comment">// process P1</span></span><br><span class="line">wait(S);</span><br><span class="line"><span class="comment">// use the printer, critical section</span></span><br><span class="line">signal(S);</span><br></pre></td></tr></table></figure>
<p>整型信号量存在“忙等”问题，可以用记录型数据结构表示信号量</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> value; <span class="comment">// 剩余资源数</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">process</span> *<span class="title">L</span>;</span> <span class="comment">// 等待队列</span></span><br><span class="line">&#125; semaphore;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">wait</span> <span class="params">(semaphore S)</span> &#123;</span><br><span class="line">    S.value--;</span><br><span class="line">    <span class="keyword">if</span> (S.value &lt; <span class="number">0</span>)</span><br><span class="line">        block (S.L);</span><br><span class="line">    <span class="comment">// 如果剩余资源数不够，使用block原语使进程从运行态进入阻塞态，并把挂到信号量S的等待队列（即阻塞队列）中</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">signal</span> <span class="params">(semaphore S)</span> &#123;</span><br><span class="line">    S.value++;</span><br><span class="line">    <span class="keyword">if</span> (S.value &lt;= <span class="number">0</span>)</span><br><span class="line">        wakeup(S.L);</span><br><span class="line">    <span class="comment">// 释放资源后，若还有别的进程在等待这种资源，则使用wakeup 原语唤醒等待队列中的一个进程，该进程从阻塞态变为就绪态</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>默认为记录型信号量</p>
<h2
id="用信号量机制实现进程互斥同步前驱关系">用信号量机制实现进程互斥、同步、前驱关系</h2>
<figure>
<img src="image-20230129222621004.png" alt="image-20230129222621004" />
<figcaption aria-hidden="true">image-20230129222621004</figcaption>
</figure>
<p>本节核心内容：信号量的值 =
这种资源的剩余数量（信号量的值如果小于0，说明此时有进程在等待这种资源）</p>
<h3 id="互斥关系">互斥关系</h3>
<p>不同的临界资源需要设置不同的互斥信号量。</p>
<p>P、V操作必须成对出现。缺少P(mutex) 就不能保证临界资源的互斥访问。缺少
V(mutex) 会导致资源永不被释放，等待进程永不被唤醒。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">semaphore mutex = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">P1() &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    P(mutex);</span><br><span class="line">    critical section;</span><br><span class="line">    V(mutex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">P2() &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    P(mutex);</span><br><span class="line">    critical section;</span><br><span class="line">    V(mutex);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="同步关系">同步关系</h3>
<p>进程同步问题：让本来异步并发的进程互相配合，有序推进。</p>
<ol type="1">
<li><p>分析什么地方需要实现“同步关系”，即必须保证“一前一后”执行的两个操作（或两句代码）</p></li>
<li><p>设置同步信号量 S, 初始为 0</p></li>
<li><p>在“前操作”之后执行 V(S)</p></li>
<li><p>在“后操作”之前执行 P(S)</p></li>
</ol>
<h3 id="前驱关系">前驱关系</h3>
<p>本质上是多级同步关系</p>
<h2 id="生产者消费者问题">生产者消费者问题</h2>
<p>背景：系统中有一组生产者进程和一组消费者进程，生产者进程每次生产一个产品放入缓冲区，消费者进程每次从缓冲区中取出一个产品并使用。（注：这里的“产品”理解为某种数据）</p>
<p>生产者、消费者共享一个初始为空、大小为n的缓冲区。</p>
<p>只有缓冲区没满时，生产者才能把产品放入缓冲区，否则必须等待。</p>
<p>只有缓冲区不空时，消费者才能从中取出产品，否则必须等待。</p>
<p>缓冲区是临界资源，各进程必须<strong>互斥</strong>地访问。</p>
<p>分析关系、确定PV操作、设置信号量初值</p>
<p>实现互斥是在同一进程中进行一对PV操作</p>
<p>实现两进程的同步关系，是在其中一个进程中执行P，另一进程中执行V</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">semaphore mutex = <span class="number">1</span>;</span><br><span class="line">semaphore empty = n;</span><br><span class="line">semaphore full = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">producer () &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        produce a product;</span><br><span class="line">        P(empty); <span class="comment">// 消耗一个空闲缓冲区</span></span><br><span class="line">        P(mutex);</span><br><span class="line">        put the product into the buffer;</span><br><span class="line">        V(mutex);</span><br><span class="line">        V(full); <span class="comment">// 增加一个产品</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">consumer () &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        P(full); <span class="comment">// 消耗一个产品（非空缓冲区）</span></span><br><span class="line">        P(mutex);</span><br><span class="line">        get a product from the buffer;</span><br><span class="line">        V(mutex);</span><br><span class="line">        V(empty); <span class="comment">// 增加一个空闲缓冲区</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>实现互斥的P操作一定要在实现同步的P操作之后。</p>
<p>V操作不会导致进程阻塞，因此两个V操作顺序可以交换。</p>
<p><strong>本节易错点</strong>：实现互斥和实现同步的两个P操作的先后顺序（死锁问题）</p>
<h2 id="多生产者-多消费者">多生产者-多消费者</h2>
<p>后面有点难了，感觉王道不太够用了，先鸽了后面补</p>
]]></content>
      <categories>
        <category>OS</category>
        <category>WangDao S3 Winter</category>
      </categories>
      <tags>
        <tag>OS</tag>
        <tag>WangDao</tag>
      </tags>
  </entry>
  <entry>
    <title>《满江红》观影感受</title>
    <url>/impressions-of-Azolla/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>说说我个人对《满江红》的一点看法</p>
</blockquote>
<span id="more"></span>
<p>首先要肯定，这部贺岁大戏确实花了心思在里面。取景比较考究，一众演员演技在线，用配乐演进和人物穿巷串联情节。</p>
<p>不过作为张艺谋执导的电影，似乎还有不少地方做的不尽人意。</p>
<p>剧情发展不合理。先说何立之死，何立心狠手辣，城府颇深，称得上有勇有谋。他既能知道刘喜和桃姑娘的关系，能猜出瑶琴是半路加入，便也不至于在临门一脚时匆匆靠近瑶琴打坏了一手稳赢的牌。瑶琴和张大都有枷锁，一把长刀在侧，到手的鸭子怎么看怎么不会飞，这里的发展更像是匆忙草草收尾了事，好让观众挨住隐隐的如厕之意。再者，于情于理没有让张大死的必要。于情，瑶琴守护大义守护真爱半路加入行动，张大本不必死，本可代岳将军见秦桧剐见山河收见国耻平，孙均性情中人，坐视侄儿死在眼前死不瞑目，坐视瑶琴让张大活下去的奉献化为乌有，更太过冷血乖戾，孙均一向鲁莽，喜好速战速决，甚至为秦桧挡下一刀，转变之大让人匪夷所思；于理，只有蓝玉一人在秦桧之侧，短刃也插在张大身上，枷锁解开身上亦无伤，孙均反手便可手刃秦桧昭告天下，退一万步来看，至少挟秦桧背满江红的夙愿可轻松实现，似乎也不必等待蓝绿二人均在时冒险逼迫，彼时二人利刃在手风险数倍，战场出生入死的将军更懂这个道理。最后，孙均一身伤痕，哪有力气纵马远去？不怕一身老伤皮开肉绽吗？</p>
<p>剧情设定本就荒诞。以我对南宋将军的粗浅了解，似乎岳将军并不太在乎遗言是否能流传万古，他应该更在乎百姓的平安和故土的平复，就像辛稼轩本意也不在写词不在种树，“却将万字平戎策，换得东家种树书”，谁他妈要种树，老子要平戎定虏。能有人手刃秦桧厉兵秣马率军出征，岳将军九泉之下也可安息；放秦桧狗贼一条狗命，让他遗臭万年，who
cares？谁他妈在乎秦桧是谁，老子只想看故国收复。确实有比生死重要百倍千倍的东西，但是这东西应该不只是岳将军的一首遗言。不得不说这里对岳将军的理解有些以己度人了，这里有种《1874》里“与你畅游战地”一般扯淡的浪漫。以及替身这件事，至少我个人感觉有些荒谬。</p>
<p>总之，作为贺岁片，导演来分一杯羹，观众看个乐呵看个感动，能想起这位千年前的故人想起这首无人不知无人不晓的不朽词篇，便也还算，说得过去吧。</p>
]]></content>
      <categories>
        <category>生活记录</category>
        <category>S3 Winter</category>
      </categories>
      <tags>
        <tag>观后感</tag>
      </tags>
  </entry>
  <entry>
    <title>时钟参与组合逻辑的心得</title>
    <url>/combinational-logic-concerning-clock/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="写在前面">写在前面</h2>
<blockquote>
<p>计组组合逻辑的一点小小的思考与整理</p>
</blockquote>
<span id="more"></span>
<p>关于clock参与逻辑运算的问题，黑书英文版第二版（《Degital design and
computer architecture》(2nd Edition) ）中 P116
已有对此问题的阐释，摘录如下：</p>
<blockquote>
<p>Generally, performing logic on the clock is a <strong>BAD
IDEA</strong>. Clock gating delays the clock and can cause timing
errors, as we will see in Section 3.5.3, so do it only if you are sure
you know what you are doing.</p>
</blockquote>
<p>这种时钟偏移 <code>timing error</code>
简言之是<strong>时钟不同时到达各个寄存器</strong>。时钟偏移也显著地增加了建立时间
<span class="math display">\[t_{setup}\]</span> 和保持时间 <span
class="math display">\[t_{hold}\]</span>
及时序总开销，减少了组合逻辑的有效工作时间，增加了通过组合逻辑所需要的最小延迟。（证明可参见黑书中文版
P87 或黑书英文版
P148）从而，部分器件在一定条件下会不满足时钟约束。太多的时钟偏移还会导致严重的保持时间错误，有时还需要将触发器设置为特别慢来防止相关问题。这会使得时序分析的最坏情况变糟，<strong>影响电路的适用性</strong>。</p>
<p>那么怎么叫<code>you are sure you know what you are doing?</code></p>
<p>我个人认为比如在普通的D触发器的实现中，需要用反相时钟组，<strong>确实没有其他好的办法时</strong>才会使时钟参与逻辑运算。实现带使能的D触发器时确实有两种方法，但是<strong>有时钟不参与逻辑运算的方法，就没必要采用另一种</strong>。甚至高老板的PPT里没有提到这一种内部电路。</p>
<figure>
<img src="C:\Users\Lee\Desktop\internal-copy.png" alt="internal" />
<figcaption aria-hidden="true">internal</figcaption>
</figure>
<p><del>更优质的解答：我也没法保证</del></p>
<p>所以能有严谨的方法，就不必冒险而产生可能的冒险（）</p>
<hr />
<p><strong>省流</strong>：clock参与运算会使电路变差，<strong>尽量避免时钟参与逻辑运算</strong>。</p>
<hr />
<p>最后，希望大家能从讨论区中相互借鉴，相互帮助，共同学习~</p>
]]></content>
      <categories>
        <category>CO</category>
        <category>S3</category>
      </categories>
      <tags>
        <tag>CO</tag>
        <tag>S3</tag>
      </tags>
  </entry>
  <entry>
    <title>概率统计复习</title>
    <url>/Probability-and-Statistics-Review/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>缓考笨比的临时抱佛脚<del>，是时候开始预习了</del></p>
</blockquote>
<span id="more"></span>
<p>时间紧任务重，格式问题先摆烂了，各位看官对不住。毕竟考试要紧，考试要紧</p>
<p><strong>8.5、9.3、9.4、11.5、12.3不考</strong></p>
<h1 id="前言">前言</h1>
<p>笔记不重要，写不完鸽了就行，重要的是学会东西<del>（啊对对对，我也没见你学会啊）</del></p>
<p><strong>本书结构</strong>：1-6章概率论</p>
<p>7-9章数理统计</p>
<p>10-12章随机过程</p>
<h1 id="第一章-随机事件的概率">第一章 随机事件的概率</h1>
<h2 id="随机事件与样本空间">1.1 随机事件与样本空间</h2>
<h3 id="试验和事件">1.试验和事件</h3>
<p>随机：其结果事先不可预言</p>
<p><strong>不特殊说明，本书中试验都指随机试验</strong></p>
<p>随机试验特征：</p>
<ul>
<li>相同条件下可以重复进行</li>
<li>能够事先明确所有可能的实验结果范围</li>
<li>实验前不能准确预言试验结果</li>
</ul>
<p>事件：试验的结果</p>
<p>随机事件：试验中可能发生，也可能不发生，用大写字母 <span
class="math inline">\(A, B\dots\)</span> 表示</p>
<p>基本事件：随机试验的每一个可能结果，也是最简单的随机事件，用小写字母
<span class="math inline">\(e, w\)</span> 表示</p>
<p>必然事件、不可能事件：</p>
<p>必然事件用 <span class="math inline">\(S\)</span> 或 <span
class="math inline">\(Ω\)</span> 表示，不可能事件用 <span
class="math inline">\(\empty\)</span> 表示</p>
<p>不是随机事件，讨论时为方便当作随机事件</p>
<h3 id="样本空间">2.样本空间</h3>
<p>试验 <span class="math inline">\(E\)</span>
的<strong>全部基本事件</strong>组成的集合</p>
<p><strong>随机事件是样本空间的子集</strong></p>
<p>不可能事件 <span class="math inline">\(\empty\)</span>
表示空集，必然事件 <span class="math inline">\(S\)</span>
表示样本空间</p>
<p>==为后文用集合论讨论事件间关系和运算做准备==</p>
<h3 id="随机事件的关系和运算">3.随机事件的关系和运算</h3>
<p>包含、和、积、互不相容（互斥）、互逆（对立）、差</p>
<p>推广到有限多个、用图形表示、运算律</p>
<p><img src="Examples\Chapter1\1.1.3-1.png" /></p>
<p>第一章比较简单，先鸽了，后面有空再补，因为🐓组、大⑤、离散赶得有点紧了（手动百丽破防哥）</p>
<h1 id="第二章-随机变量及其分布">第二章 随机变量及其分布</h1>
<h2 id="随机变量">2.1 随机变量</h2>
<p><img src="Notes\Chapter2\2.1.1-1.png" /></p>
<p>数学本质是一个可测函数</p>
<p>==将随机事件的概率问题转化为随机变量取值的概率问题==</p>
<p>==因此，随机变量及其取值范围的概率问题是我们今后学习和研究的主要问题==</p>
<h2 id="随机变量的分布函数">2.2 随机变量的分布函数</h2>
<p>==分布函数非常重要==</p>
<p><strong>定义</strong>：设 <span class="math inline">\(X\)</span>
为随机变量，则 <span class="math inline">\(\{X \ge x\} = \{e \in
S|-\infty &lt; X(e) \le x\}\)</span> 为随机事件，令</p>
<p><span class="math inline">\(F(x) = P\{X \le x\},-\infty &lt; x &lt;
+\infty\)</span></p>
<p>为随机变量 <span class="math inline">\(X\)</span> 的<strong><span
class="math inline">\(\textcolor{red}{概率分布函数}\)</span></strong>，简称<strong><span
class="math inline">\(\textcolor{red}{分布函数}\)</span></strong>，记作
<span class="math inline">\(X \sim F(x)\)</span></p>
<p><span class="math inline">\(F(x)\)</span> 等于 <span
class="math inline">\(X\)</span> 在区间 <span class="math inline">\((-
\infty ,x]\)</span> 取值的概率</p>
<h2 id="离散型随机变量及其概率分布">2.3 离散型随机变量及其概率分布</h2>
<p><span class="math inline">\(X\)</span> 取各个可能值的概率</p>
<p><span class="math inline">\(p_k = P\{X = x_k\}, k =
1,2,\dots\)</span></p>
<p>称为概率分布（分布律、分布列）</p>
<h2 id="常用离散型随机变量的分布律">2.4 常用离散型随机变量的分布律</h2>
<h3 id="两点分布0-1分布">1.两点分布（（0-1）分布）</h3>
<p>服从（0-1）分布的试验叫做<strong>伯努利试验</strong></p>
<h3 id="泊松分布">2.泊松分布</h3>
<p><span class="math inline">\(P\{X = k\}=e^{-\lambda} \frac{\lambda ^
k}{k!},k=0,1,2,\dots\)</span></p>
<p>其中 <span class="math inline">\(\lambda &gt; 0\)</span>，称 <span
class="math inline">\(X\)</span> 服从参数为 <span
class="math inline">\(\lambda\)</span> 的泊松分布，记作 <span
class="math inline">\(X \sim \Pi(\lambda)\)</span>，这里用到幂级数展开式
<span class="math inline">\(e^x =
\sum_{k=0}^{+\infty}{\frac{x^k}{k!}}\)</span></p>
<blockquote>
<p>我头一次明白这个式子，这是前面乘一个 <span
class="math inline">\(e^{-\lambda}\)</span>
系数，然后后面做幂级数求和，得到结果 <span
class="math inline">\(e^{\lambda}\)</span> ，乘积恰好为1</p>
</blockquote>
<h3 id="超几何分布">3.超几何分布</h3>
<p>高中学的，多练例题即可</p>
<h3 id="二项分布">4.二项分布</h3>
<p><span class="math inline">\(P\{X=k\}=\sum_{k=0}^{n}
C_{n}^{k}p^kq^{n-k},k=0,1,2,\dots\)</span></p>
<blockquote>
<p>这公式真难敲啊，顺带提一嘴，我感觉这些没啥特别的，就是一个上标一个下标，把这个写好了就行。以及MarkDown没有自己的组合数</p>
</blockquote>
<p><span
class="math inline">\(\bcancel{你没有自己的组合数吗}\)</span></p>
<p>是 <span class="math inline">\((p+q)^n\)</span>
展开式中的一般项，记作 <span class="math inline">\(X \sim
B(n,p)\)</span></p>
<p>每次概率不改变的就是二项分布，<strong>常用的：放回式取用</strong></p>
<h3
id="二项分布的近似计算和查泊松分布表">5.二项分布的近似计算和查泊松分布表</h3>
<p>n很大，p很小的时候，二项分布接近泊松分布（一般 <span
class="math inline">\(n \ge 10, p_n \le 0.1\)</span> 时)</p>
<p>转换公式：<span class="math inline">\(\lambda = np\)</span></p>
<h2 id="连续型随机变量及其概率密度函数">2.5
连续型随机变量及其概率密度函数</h2>
<p><span class="math inline">\(f(x)\)</span> 为<strong><span
class="math inline">\(\textcolor{red}{概率密度函数}\)</span></strong>（分布密度函数），简称<strong><span
class="math inline">\(\textcolor{red}{概率密度}\)</span></strong></p>
<p>==概率密度和分布函数都很重要，同时也要区分清楚==</p>
<h2 id="常用的连续型随机变量分布">2.6 常用的连续型随机变量分布</h2>
<h3 id="均匀分布">1.均匀分布</h3>
<p><span class="math inline">\(\zeta \sim U[a,b]\)</span></p>
<h3 id="指数分布">2.指数分布</h3>
<p><span class="math display">\[
f(x)=
\begin{cases}
\lambda e^{- \lambda x},x \ge 0,\\
0,x &lt; 0
\end{cases}
\]</span></p>
<p>分布函数 <span class="math display">\[
F(x)=
\begin{cases}
0,x&lt;0,\\
\int_{-\infty}^x f(t)dt = 1-e^{-\lambda x},x \ge 0
\end{cases}
\]</span></p>
<h3 id="welbull-分布">3.Welbull 分布</h3>
<p>指数分布的一般情况，没怎么考过</p>
<h3 id="gamma-函数">4.<span class="math inline">\(\Gamma\)</span>
函数</h3>
<p>类似于辅助的作用，单独考有点逆天，算了不写了</p>
<h2 id="正态分布">2.7 正态分布</h2>
<h3 id="欧拉-泊松积分">1.欧拉-泊松积分</h3>
<p>很巧妙的算法，用二重积分证明 <span class="math display">\[
\int _{-\infty} ^{+\infty} e^{-x^2} dx = \sqrt{\pi}
\]</span></p>
<h3 id="正态分布-1">2.正态分布</h3>
<p><span class="math inline">\(\Huge f(x)=\frac{1}{\sigma
\sqrt{2\pi}}e^{-\frac{(x-\mu)^2}{2 \sigma^2}},-\infty &lt; x &lt;
+\infty\)</span></p>
<p>记作 <span class="math inline">\(\zeta \sim
N(\mu,\sigma^2)\)</span></p>
<p><span class="math inline">\(\Huge
\textcolor{red}{非常非常非常重要}\)</span></p>
<p>性质：</p>
<ul>
<li><span class="math inline">\(x = \mu\)</span> 时，取最大值 <span
class="math inline">\(f(\mu) = \Huge\frac{1}{\sigma
\sqrt{2\pi}}\)</span></li>
</ul>
<h3 id="标准正态分布">3.标准正态分布</h3>
<p><img src="Notes\Chapter2\2.7.3-1.png" /></p>
<p>鸽了，哥们真不想打公式了妈的</p>
<h3
id="正态分布与标准正态分布的关系">4.正态分布与标准正态分布的关系</h3>
<p><span class="math inline">\(\Huge F(x) =
\Phi(\frac{x-\mu}{\sigma}),-\infty &lt; x &lt; +\infty\)</span></p>
<blockquote>
<p>意义：将不好算的数据转化成可以查表的标准正态分布，相互转换得到结果</p>
</blockquote>
<h3 id="标准正态分布的-alpha-分位点">5.标准正态分布的 <span
class="math inline">\(\alpha\)</span> 分位点</h3>
<blockquote>
<p>重要理解：分位点是一个横坐标，这个图是偶函数，要注意其对称轴是 x = 0
而非 <span class="math inline">\(\frac{1}{2}\)</span></p>
</blockquote>
<p><img src="Notes\Chapter2\2.7.5-1.png" /></p>
<p><del>算了，和自己达成和解，公式太多了</del></p>
<p>考的不多但是要求一定的记忆量</p>
<h1 id="第三章-二维随机变量">第三章 二维随机变量</h1>
<h2 id="随机向量与联合分布">3.1 随机向量与联合分布</h2>
<h3
id="二维随机变量的定义和分布函数的基本性质">1.二维随机变量的定义和分布函数的基本性质</h3>
<p><span class="math display">\[
F(x,y) = P\{X \le x, Y \le y\} \}= P\{e \in S|X(e) \le x, Y(e) \le y\}
\]</span></p>
<p>称为二维随机变量 <span class="math inline">\((X,Y)\)</span>
的分布函数或随机变量 <span class="math inline">\(X\)</span> 和 <span
class="math inline">\(Y\)</span> 的联合分布函数</p>
<p><img src="Notes\Chapter3\3.1.1-1.png" /></p>
<p><img src="Notes\Chapter3\3.1.1-2.png" /></p>
<p><strong>千万注意这个交叉计算的方式</strong></p>
<h3 id="二维离散型随机变量">2.二维离散型随机变量</h3>
<p>没啥想写的，鸽了吧</p>
<p>记得有的题目要用条件概率（P73）</p>
<h3 id="二维连续型随机变量">3.二维连续型随机变量</h3>
<p><span class="math inline">\(\huge \frac{\partial^2 F}{\partial x
\partial y}(x_0,y_0) = f(x_0,y_0)\)</span></p>
<p><span class="math inline">\(\huge P\{(X,Y) \in D\} =
\iint_{D}f(x,y)dxdy\)</span></p>
<p>这里涉及到一些二重积分的内容，但是我全忘了</p>
<p>好消息，有淑芬书，坏消息，好像把淑芬书扔家里了</p>
<p>这两个🦁都极其重要，务必<del>基佬</del>记牢</p>
<h3 id="常用的二维连续型随机变量">4.常用的二维连续型随机变量</h3>
<figure>
<img src="image-20230201132709759.png" alt="image-20230201132709759" />
<figcaption aria-hidden="true">image-20230201132709759</figcaption>
</figure>
<p>这五个变量的意义请见第五章</p>
<h2 id="边缘分布函数">3.2 边缘分布函数</h2>
<blockquote>
<p>考虑两个变量分布函数之间的关系</p>
</blockquote>
<p>$$ F_X(x) = _{y+} F(x,y) = F(x, +)\</p>
<p>F_Y(y) = _{x+} F(x,y) = F(+, y) $$
由联合分布函数可计算边缘分布函数，但反之不可确定</p>
<h2 id="边缘分布律与条件分布律">3.3 边缘分布律与条件分布律</h2>
<p><span class="math inline">\((X, Y)\)</span> 关于 <span
class="math inline">\(X\)</span>
的变量分布律正好是联合分布律表中各行概率相加</p>
<p><span class="math inline">\((X, Y)\)</span> 关于 <span
class="math inline">\(Y\)</span>
的变量分布律正好是联合分布律表中各行概率相加</p>
<figure>
<img src="image-20230201132953614.png" alt="image-20230201132953614" />
<figcaption aria-hidden="true">image-20230201132953614</figcaption>
</figure>
<h2 id="边缘概率密度与条件概率密度">3.4 边缘概率密度与条件概率密度</h2>
<h3 id="边缘概率密度">1.边缘概率密度</h3>
<p><span class="math display">\[
f_X(x)=\int_{-\infty}^{+\infty} f(x,y)dy\\
f_Y(y)=\int_{-\infty}^{+\infty} f(x,y)dx
\]</span></p>
<h3 id="条件概率密度">2.条件概率密度</h3>
<p><img src="image-20230201133151631.png"
alt="image-20230201133151631" /> <span class="math display">\[
F_{X|Y}(x|y) = \frac{\frac{\partial}{\partial
x}F(x,y)}{\frac{d}{dx}F_Y(y)}\\
F_{Y|X}(y|x) = \frac{\frac{\partial}{\partial
y}F(x,y)}{\frac{d}{dy}F_X(x)}\\
F_{X|Y}(x|y) = \int_{-\infty}^x \frac{f(u,y)}{f_Y(y)} du\\
F_{Y|X}(y|x) = \int_{-\infty}^y \frac{f(x,v)}{f_X(x)} dv\\
f_{X|Y}(x|y) = \frac{f(x,y)}{f_Y(y)}\\
f_{Y|X}(y|x) = \frac{f(x,y)}{f_X(x)}
\]</span></p>
<h2 id="相互独立的随机变量">3.5 相互独立的随机变量</h2>
<h3 id="相互独立">1.相互独立</h3>
<p><span class="math display">\[
P\{X \le x, Y \le y\} = P\{X \le x\}·P\{Y \le y\} \\
F(x, y) = F_X(x)·F_Y(y), -\infty &lt; x, y &lt; \infty
\]</span></p>
<h3
id="离散型随机变量相互独立判别定理">2.离散型随机变量相互独立判别定理</h3>
<p><span class="math display">\[
P\{X \le x_i, Y \le y_j\} = P\{X \le x_i\}·P\{Y \le y_j\},i,j=1,2,\dots
\]</span></p>
<h3
id="连续型随机变量相互独立判别定理">3.连续型随机变量相互独立判别定理</h3>
<p><span class="math display">\[
f(x,y) = f_X(x)·f_Y(y)
\]</span></p>
<p>（几乎处处）</p>
<h3
id="有限多个或可列个变量相互独立">4.有限多个或可列个变量相互独立</h3>
<h1 id="第四章-随机变量的函数的分布">第四章 随机变量的函数的分布</h1>
<blockquote>
<p>用已有的概率分布求出函数式的概率分布</p>
</blockquote>
<h2 id="离散型随机变量的函数的分布">4.1 离散型随机变量的函数的分布</h2>
<h3
id="一维离散型随机变量的函数的分布律">1.一维离散型随机变量的函数的分布律</h3>
<p>y相同相加，不同分列</p>
<h3
id="二维离散型随机变量的函数的分布律">2.二维离散型随机变量的函数的分布律</h3>
<p>求出具体值</p>
<h2 id="一维连续型随机变量的函数的分布">4.2
一维连续型随机变量的函数的分布</h2>
<p>把y的范围转化成x的范围</p>
<p>一般方法：先求 <span class="math inline">\(Y = g(X)\)</span>
的分布函数 <span class="math inline">\(F_Y(y)\)</span>，求导得到 <span
class="math inline">\(f_Y(y)\)</span></p>
<p>也有公式，可以无脑套用<img src="image-20230201133941348.png"
alt="image-20230201133941348" /></p>
<h2 id="二维连续型随机变量的函数的分布">4.3
二维连续型随机变量的函数的分布</h2>
<p>转化成二重积分</p>
<p>几种特殊的方法：</p>
<h3 id="z-x-y-的分布">1.<span class="math inline">\(Z = X + Y\)</span>
的分布</h3>
<p><span class="math display">\[
f_Z(z)=\int_{-\infty}^{+\infty} f(x,z-x)dx = \int_{\over{AB}} f(x,y)dx
\]</span></p>
<p>第二型曲线积分</p>
<p>有点复杂啊，回头得好好看看</p>
<h3 id="z-maxx-y-的分布">2.<span class="math inline">\(Z = max\{X +
Y\}\)</span> 的分布</h3>
<p><span class="math display">\[
\{Z \le z\} = \{X \le z, Y \le z\}
\]</span></p>
<p><img src="Notes\Chapter4\4.3.2-1.png" /></p>
<h3 id="z-minx-y-的分布">3.<span class="math inline">\(Z = min\{X +
Y\}\)</span> 的分布</h3>
<p><img src="Notes\Chapter4\4.3.3-1.png" /></p>
<h1 id="第五章-随机变量的数字特征">第五章 随机变量的数字特征</h1>
<p>数字特征，指联系于分布函数的某些数：如平均值，方差等。反映了随机变量在某些方面的特征</p>
<p>确定分布函数需要一些参数，而参数又往往由某些数字特征或其他数值所决定，故找到这些特征便能确定分布函数。</p>
<p>实际中确定这些特征比较困难，而且没有必要，有时只需要知晓随机变量的某些特征即可。</p>
<h2 id="数学期望">5.1 数学期望</h2>
<p>P129，例4，收敛需要特殊记一下</p>
<p>相加相乘的性质</p>
<figure>
<img src="image-20230201135028202.png" alt="image-20230201135028202" />
<figcaption aria-hidden="true">image-20230201135028202</figcaption>
</figure>
<p><strong>几个定理</strong></p>
<figure>
<img src="image-20230201134714012.png" alt="image-20230201134714012" />
<figcaption aria-hidden="true">image-20230201134714012</figcaption>
</figure>
<figure>
<img src="image-20230201134726376.png" alt="image-20230201134726376" />
<figcaption aria-hidden="true">image-20230201134726376</figcaption>
</figure>
<h2 id="方差">5.2 方差</h2>
<h3 id="概念">1.概念</h3>
<p>几种符号</p>
<p>带括号不带括号，Var</p>
<p>标准差、均方差</p>
<p><strong>重要的计算公式 $ DX = EX^2 - (EX)^2 $</strong></p>
<h3 id="性质">2.性质</h3>
<figure>
<img src="image-20230201135954111.png" alt="image-20230201135954111" />
<figcaption aria-hidden="true">image-20230201135954111</figcaption>
</figure>
<figure>
<img src="image-20230201140009843.png" alt="image-20230201140009843" />
<figcaption aria-hidden="true">image-20230201140009843</figcaption>
</figure>
<h2 id="常用随机变量的数学期望和方差">5.3
常用随机变量的数学期望和方差</h2>
<h3 id="分布">0-1分布</h3>
<p><span class="math inline">\(EX = p, DX = p(1-p)\)</span></p>
<h3 id="二项分布-1">二项分布</h3>
<p><span class="math inline">\(EX = np, DX = npq\)</span></p>
<h3 id="泊松分布-1">泊松分布</h3>
<p><span class="math inline">\(EX = \lambda, DX = \lambda\)</span></p>
<h3 id="均匀分布-1">均匀分布</h3>
<p><span class="math inline">\(EX = \frac{a + b}{2}, DX =
\frac{(b-a)^2}{12}\)</span></p>
<h3 id="指数分布-1">指数分布</h3>
<p><span class="math inline">\(EX = \frac{1}{\lambda}, DX =
\frac{1}{\lambda^2}\)</span></p>
<h2 id="协方差和相关系数">5.4 协方差和相关系数</h2>
<p>表征二维向量 X 与 Y 之间的关系</p>
<h3 id="协方差">1.协方差</h3>
<p><span class="math display">\[ Cov(X,Y) = E[(X - EX) · (Y - EY)]
\]</span></p>
<p><span class="math display">\[ Cov(X,Y) = E(XY) - EX·EY \]</span></p>
<p>性质为：</p>
<h3 id="相关系数">2.相关系数</h3>
<p>也称标准协方差，记作 <span class="math inline">\(\rho\)</span></p>
<h3 id="计算举例">3.计算举例</h3>
<blockquote>
<p>时刻铭记：协方差本身就是一种方差，计算的时候不需要再乘上 <span
class="math inline">\(\sqrt{DX} \sqrt{DY}\)</span> 了</p>
</blockquote>
<h2 id="矩-协方差矩阵">5.5 矩 协方差矩阵</h2>
<p>记一下概念就行，式子比较麻烦后面补</p>
<p>以及这里应该不考，所以暂时先放了</p>
<h1 id="第六章-大数定律和中心极限定理">第六章
大数定律和中心极限定理</h1>
<p>极限可以刻画相同条件下大量重复的试验</p>
<p><strong>这章的思路：</strong></p>
<p><strong>大数定律：</strong></p>
<blockquote>
<p>随机事件的大量重复出现中，存在几乎必然的规律</p>
</blockquote>
<ul>
<li><strong>事件的频率作为事件的概率的估计</strong></li>
<li><strong>样本均值作为总体均值的估计</strong></li>
</ul>
<p><strong>中心极限定理：</strong></p>
<ul>
<li><strong>正态分布在概率论中占有极其重要的地位</strong></li>
</ul>
<h2 id="马尔可夫不等式和切比雪夫不等式">6.1
马尔可夫不等式和切比雪夫不等式</h2>
<p>两个重要的不等式，研究大数定律的基本工具</p>
<p><img src="Notes\Chapter6\6.1-1.png" /><img
src="Notes\Chapter6\6.1-2.png" /></p>
<p>马尔可夫不等式是前文提到的 k 阶绝对矩</p>
<p>切比雪夫不等式主要用于概率估计和理论推导</p>
<ul>
<li>理论上证实了 方差度量随机变量取值偏离均值的程度</li>
<li>引出了方差估计的“尾概率”</li>
</ul>
<p><img src="Notes\Chapter6\6.1-3.png" /></p>
<blockquote>
<p>没有偏离，则是所有变量相同取值，很好理解</p>
</blockquote>
<h2 id="大数定律">6.2 大数定律</h2>
<p>频率收敛到概率的理论根据</p>
<p>我们只介绍一些弱的情况</p>
<p><img src="Notes\Chapter6\6.2-1.png" /><img
src="Notes\Chapter6\6.2-2.png" /></p>
<p><img src="Notes\Chapter6\6.2-3.png" /></p>
<p><img src="Notes\Chapter6\6.2-4.png" /></p>
<p><img src="Notes\Chapter6\6.2-5.png" /></p>
<p><img src="Notes\Chapter6\6.2-6.png" /></p>
<p><img src="Notes\Chapter6\6.2-7.png" /></p>
<h2 id="中心极限定理">6.3 中心极限定理</h2>
<p>人们在对大量随机现象的研究中发现，如果一个量是由大量相互独立的随机因素所造成，而每一个因素在总量中所起的作用又较小，那么这种量通常服从或近似服从正态分布.
这种现象就是中心极限定理的客观背景.</p>
<p><img src="Notes\Chapter6\6.3-1.png" /></p>
<p><img src="Notes\Chapter6\6.3-2.png" /></p>
<p><img src="Notes\Chapter6\6.3-3.png" /></p>
<p><strong>独立同分布的随机变量序列，它们本身不服从正态分布，但是多个随机变量和的极限分布是正态分布，这就是量变引起质变的道理．</strong></p>
<p>设 <span class="math inline">\(X_1,X_2,\dots,X_n,\dots\)</span>
是相互独立的随机变量序列，且其服从参数为 <span
class="math inline">\(\lambda\)</span> 的指数分布，则</p>
<p><img src="C:/Users/Lee/AppData/Roaming/Typora/typora-user-images/image-20221120220346361.png" alt="image-20221120220341455" style="zoom:67%;" /><img src="C:/Users/Lee/AppData/Roaming/Typora/typora-user-images/image-20221120220355682.png" alt="image-20221120220355682" style="zoom:67%;" /><img src="C:/Users/Lee/AppData/Roaming/Typora/typora-user-images/image-20221120220400188.png" alt="image-20221120220400188" style="zoom:67%;" /></p>
<p>（公式太复杂，复制了个图片，摸了）</p>
<h1 id="第七章-统计总体与样本">第七章 统计总体与样本</h1>
<p><img src="Notes\Chapter7\7-1.png" /></p>
<p><strong>省流：只有参数估计和假设检验</strong></p>
<h2 id="总体与样本">7.1 总体与样本</h2>
<h3 id="总体与个体">1.总体与个体</h3>
<p>总体：具有一定共同属性的研究对象的全体</p>
<p>个体：组成总体的每一个元素</p>
<p>总体通常用 <span class="math inline">\(\Omega = \{ \omega \}\)</span>
或 <span class="math inline">\(S = \{e\}\)</span> 表示</p>
<p>在实际中，我们主要关心的是研究对象的某一（或某几项）<strong>数量指标
<span class="math inline">\(X=X(\omega)\)</span></strong>
，它是一个随机变量</p>
<blockquote>
<p>将总体的分布用随机变量刻画</p>
</blockquote>
<p>随机变量 <span class="math inline">\(X\)</span>
的分布就是总体的分布</p>
<p>总体就是指随机变量 <span class="math inline">\(X\)</span> 或 <span
class="math inline">\(X\)</span> 的取值集合</p>
<h3 id="样本与样本值">2.样本与样本值</h3>
<p>用部分统计的方法</p>
<p>从总体 <span class="math inline">\(X\)</span> 中有放回地随机抽取
<span class="math inline">\(n\)</span> 个数值，<span
class="math inline">\(x_i\)</span> 是一次抽样观察（记录）的结果，<span
class="math inline">\(x_1,x_2,\dots,x_n\)</span> 为总体 <span
class="math inline">\(X\)</span>
的一组样本观察值，简称<strong>样本值</strong></p>
<p><img src="Notes\Chapter7\7.1-1.png" /></p>
<p>这一段的一个重要的概念：<strong>观察值（样本值）独立与总体同分布</strong></p>
<p>简单随机样本、简单随机抽样（不再赘述）</p>
<p><strong>默认所提到的样本都是简单随机样本</strong></p>
<p><img src="Notes\Chapter7\7.1-2.png" /></p>
<h2 id="样本矩和统计量">7.2 样本矩和统计量</h2>
<blockquote>
<p>一些加工样本的方法</p>
</blockquote>
<h3 id="样本矩">1.样本矩</h3>
<p>样本 <span class="math inline">\(k\)</span> 阶矩（<span
class="math inline">\(k\)</span> 阶原点矩）： <span
class="math display">\[
A_k = \frac{1}{n}\sum_{i = 1}^n X_i ^ k
\]</span></p>
<p>样本 <span class="math inline">\(k\)</span> 阶中心矩： <span
class="math display">\[
B_k = \frac{1}{n} \sum_{i = 1} ^n (X_i - \overline{X}) ^ k
\]</span></p>
<p>样本均值、样本方差、样本 <span class="math inline">\(k\)</span>
阶矩和样本 <span class="math inline">\(k\)</span>
阶中心矩都是<strong>随机变量</strong></p>
<p><img src="Notes\Chapter7\7.2-1.png" /></p>
<p><img src="Notes\Chapter7\7.2-2.png" /></p>
<blockquote>
<p>样本 <span class="math inline">\(k\)</span> 阶矩收敛于总体 <span
class="math inline">\(k\)</span> 阶矩</p>
</blockquote>
<h3 id="统计量">2.统计量</h3>
<blockquote>
<p>对样本进行加工，需要针对不同的统计问题构造一个<strong>不含未知参数</strong>的样本的连续函数，称为统计量</p>
</blockquote>
<blockquote>
<p>若含有总体的未知参数，即使得到了样本的观测数据，仍然不能由这些样本数据通过统计量计算出要估计的量的值</p>
</blockquote>
<h3 id="顺序统计量与经验分布函数">3.顺序统计量与经验分布函数</h3>
<h2 id="常用统计量的分布">7.3 常用统计量的分布</h2>
<blockquote>
<p>统计量是对总体的分布或数字特征进行推断的基础。因此求统计量的分布是数理统计的基本问题之一</p>
</blockquote>
<blockquote>
<p>只研究正态总体的统计量分布</p>
</blockquote>
<p><strong>见另一个手写文件</strong></p>
<h1 id="第八章-参数估计">第八章 参数估计</h1>
<h2 id="参数的点估计">8.1 参数的点估计</h2>
<p><img src="Notes\Chapter8\8.1-1.png" /></p>
<p>用样本值估计总体的参数叫做参数估计</p>
<p>参数估计分为点估计和区间估计</p>
<p><strong>参数点估计的两种方法：矩估计法和极大似然估计法</strong></p>
<p>对于同一个参数，得出的估计量也是有时相同有时不同</p>
<h3 id="矩估计法">1.矩估计法</h3>
<p>令样本矩 = 总体矩解出矩估计量，矩估计量的观察值称为矩估计值</p>
<p>当样本一阶原点矩的式子中不含 <span
class="math inline">\(\theta\)</span>
时，需要求出二阶原点矩或者一阶绝对矩</p>
<h3 id="极大似然估计法">2.极大似然估计法</h3>
<p><strong>分连续型总体和离散型总体两种情况</strong></p>
<p>连续型总体：<span class="math inline">\(L(\theta) = \Pi_{i = 1} ^{n}
f(x_i;\theta)\)</span>，求导求最大值对应的 <span
class="math inline">\(\theta\)</span> 即为所求</p>
<p>离散型总体：<span class="math inline">\(L(\theta) = \Pi_{i = 1} ^{n}
p(x_i;\theta)\)</span>，求导求最大值对应的 <span
class="math inline">\(\theta\)</span> 即为所求</p>
<p>喜欢考的题：P203，指数的取最小值，倒数的取最大值</p>
<h2 id="点估计量的优良性">8.2 点估计量的优良性</h2>
<blockquote>
<p>评价估计量好坏的标准</p>
</blockquote>
<h3 id="无偏估计">1.无偏估计</h3>
<p><span class="math inline">\(E(\hat{\theta}) = \theta\)</span></p>
<p>对于几个无偏估计量应该也有区分他们好坏的标准</p>
<h3 id="最小方差无偏估计">2.最小方差无偏估计</h3>
<p>对任一无偏估计 <span class="math inline">\(\hat{\theta_2}\)</span>
，均有 <span class="math inline">\(D(\hat{\theta_1}) \leq
D(\hat{\theta_2})\)</span></p>
<p>对于正态总体找起来较为简单</p>
<h3 id="一致估计">3.一致估计</h3>
<h2 id="区间估计与置信区间">8.3 区间估计与置信区间</h2>
<blockquote>
<p><span class="math inline">\(\theta\)</span> 所在区间和区间包含 <span
class="math inline">\(\theta\)</span> 的可靠程度</p>
</blockquote>
<h3 id="置信区间">1.置信区间</h3>
<h3 id="单侧置信限">2.单侧置信限</h3>
<p>只关心置信区间的上限或下限</p>
<p>目前仅能实现对正态总体的参数 <span class="math inline">\(\mu\)</span>
和 <span class="math inline">\(\sigma\)</span> 的区间估计</p>
<h2 id="正态总体均值和方差的区间估计">8.4
正态总体均值和方差的区间估计</h2>
<h3 id="均值-ex-的区间估计">1.均值 EX 的区间估计</h3>
<h4
id="方差dx已知对ex进行区间估计">（1）方差DX已知，对EX进行区间估计</h4>
<p>用统计量 <span class="math inline">\(U\)</span> 估计</p>
<p>查这个比较多，因为算数简单</p>
<h4
id="方差dx未知对ex进行区间估计">（2）方差DX未知，对EX进行区间估计</h4>
<p>用统计量 <span class="math inline">\(T\)</span> 估计</p>
<h3 id="方差-dx-的区间估计">2.方差 DX 的区间估计</h3>
<h2 id="不考略过">8.5 不考，略过</h2>
<h1 id="第九章-假设检验">第九章 假设检验</h1>
<p>先对<strong>总体</strong>做出某种假设，然后通过样本数据对假设做出接受或者拒绝</p>
<h2 id="假设检验的提出及其基本思想">9.1 假设检验的提出及其基本思想</h2>
<h2 id="正态总体均值和方差的假设检验">9.2
正态总体均值和方差的假设检验</h2>
<h3 id="方差-sigma2-已知检验假设-h_0mu-mu_0h_1-任意">1.方差 <span
class="math inline">\(\sigma^2\)</span> 已知，检验假设 <span
class="math inline">\(H_0:\mu = \mu_0\)</span>，<span
class="math inline">\(H_1\)</span> 任意</h3>
<p>采用统计量 <span class="math inline">\(U_0 = \frac{\overline{x} -
\mu_0}{\sigma/\sqrt{n}}\)</span> 作为检验函数，<span
class="math inline">\(U_0 = \frac{\overline{x} - \mu_0}{\sigma/\sqrt{n}}
\sim N(0,1)\)</span></p>
<h3 id="方差-sigma2-未知检验假设-h_0mu-mu_0h_1-任意">2.方差 <span
class="math inline">\(\sigma^2\)</span> 未知，检验假设 <span
class="math inline">\(H_0:\mu = \mu_0\)</span>，<span
class="math inline">\(H_1\)</span> 任意</h3>
<p>采用统计量 <span class="math inline">\(T = \frac{\overline{x} -
\mu_0}{s/\sqrt{n}}\)</span> 作为检验函数，<span class="math inline">\(T
= \frac{\overline{x} - \mu_0}{s/\sqrt{n}} \sim t(n-1)\)</span></p>
<h3
id="单个正态总体方差的假设检验">3.（单个）正态总体方差的假设检验</h3>
<p>采用统计量 <span class="math inline">\(W =
\frac{(n-1)s^{2}}{\sigma_0^2}\)</span>，<span class="math inline">\(W =
\frac{(n-1)s^{2}}{\sigma_0^2} \sim \chi^2(n-1)\)</span></p>
<h2 id="不考略过-1">9.3、9.4 不考，略过</h2>
<h1 id="第十章-随机过程的基本概念">第十章 随机过程的基本概念</h1>
<h2 id="随机过程的定义及分类">10.1 随机过程的定义及分类</h2>
<h3 id="随机过程的概念">1.随机过程的概念</h3>
<h3 id="随机过程的分类">2.随机过程的分类</h3>
<p>二阶矩过程，包括正态过程和平稳过程等</p>
<p>马尔可夫过程...</p>
<h2 id="随机过程的概率分布">10.2 随机过程的概率分布</h2>
<h3 id="随机过程的-n-维分布函数">1.随机过程的 <span
class="math inline">\(n\)</span> 维分布函数</h3>
<h3 id="独立过程">2.独立过程</h3>
<p>任意 <span class="math inline">\(n\)</span>
个过程都是独立的，由过程的一维分布函数就能确定该过程的统计特征</p>
<figure>
<img src="image-20230211095739087.png" alt="image-20230211095739087" />
<figcaption aria-hidden="true">image-20230211095739087</figcaption>
</figure>
<h3
id="两个随机过程的有限维联合分布及独立性">3.两个随机过程的有限维联合分布及独立性</h3>
<h2 id="随机过程的数字特征比前面更易考">10.3
随机过程的数字特征（比前面更易考）</h2>
<blockquote>
<p>随机过程是随机变量构成的集合，所以可以通过考察随机变量的数字特征来研究</p>
</blockquote>
<figure>
<img src="image-20230211100031053.png" alt="image-20230211100031053" />
<figcaption aria-hidden="true">image-20230211100031053</figcaption>
</figure>
<h1 id="第十一章-平稳过程">第十一章 平稳过程</h1>
<h2 id="考试题型">考试题型</h2>
<p>先写 <span class="math inline">\(\Theta\)</span> 和 <span
class="math inline">\(X\)</span>
基础的分布、再求数字特征，最后判断是不是平稳过程</p>
<h2 id="严平稳过程">11.1 严平稳过程</h2>
<h2 id="广义平稳过程平稳过程">11.2 广义平稳过程（平稳过程）</h2>
<h3 id="定义">1.定义</h3>
<figure>
<img src="1.png" alt="1" />
<figcaption aria-hidden="true">1</figcaption>
</figure>
<h3 id="数字特征的性质">2.数字特征的性质</h3>
<h1 id="第十二章-马尔可夫链引论">第十二章 马尔可夫链引论</h1>
<h2 id="考试题型-1">考试题型</h2>
<p>判断、状态空间、一步转移矩阵、平稳分布、两步的总条件概率</p>
<p>判断：<img src="image-20230211091530921.png"
alt="image-20230211091530921" /></p>
<p>用上面的判据好像稍微多一些</p>
<figure>
<img src="image-20230211091800582.png" alt="image-20230211091800582" />
<figcaption aria-hidden="true">image-20230211091800582</figcaption>
</figure>
<figure>
<img src="image-20230211093731986.png" alt="image-20230211093731986" />
<figcaption aria-hidden="true">image-20230211093731986</figcaption>
</figure>
<p>两步的条件概率要注意马尔可夫的独立性，或者说是标明了一种确定的状态转移过程</p>
<p>平稳过程和马尔可夫一般都作为最后一道题出现，但是他们的难度并不大，基本都是套路题，能拿的分要稳稳握住</p>
<p>祝诸君考试都有好运气</p>
]]></content>
      <categories>
        <category>概率统计</category>
        <category>数学基础</category>
        <category>S3</category>
      </categories>
      <tags>
        <tag>数学基础</tag>
        <tag>概率统计</tag>
      </tags>
  </entry>
  <entry>
    <title>浙大翁恺OO</title>
    <url>/WK-OO/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言">前言</h2>
<blockquote>
<p><em>Not finished</em></p>
<p>浙大翁恺老师的 OO 入门课</p>
</blockquote>
<span id="more"></span>
<blockquote>
<p><em>Refs</em>：翁恺 &amp; 黑马程序员</p>
</blockquote>
<h2 id="第一周-类与对象">第一周 类与对象</h2>
<h3 id="用类制造对象">用类制造对象</h3>
<p>前置知识：对象变量是对象的管理者而非所有者，所以涉及到赋值、函数参数传递和比较（如果两个对象变量相等说明管理的是同一内容，判断管理内容是否相同应用<code>equal</code>判断）都与普通变量有所不同。</p>
<p>现在，我们要来尝试自己定义类，然后用自己定义的类来创建对象</p>
<h3 id="定义类">定义类</h3>
<p>观察这类事物的特点，用一些成员和函数表示这个类</p>
<ul>
<li>private是对类而非对象，所以同一类的不同对象之间可以访问彼此的成员</li>
<li>如果不声明默认friendly，可以在同一个包的文件下共用</li>
<li>protected见继承中的project</li>
</ul>
<h3 id="成员变量和成员函数">成员变量和成员函数</h3>
<p><code>this</code> 这个特殊的本地变量起着至关重要的作用</p>
<ul>
<li>注意：如果成员函数的参数与成员变量同名，那么会取作用域更小的，也即取参数作为这个变量名对应的变量</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">New</span> &#123;</span><br><span class="line">    <span class="type">int</span> price;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setPrice</span><span class="params">(<span class="type">int</span> price)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>成员函数内部调用其他成员函数也可不加<code>this.</code></p>
<p>区别于定义在函数内部的本地变量，成员变量的生存期是对象的生存期，作用域是类内部的成员函数（也即类内的成员函数可以使用成员变量，成员变量初始化...）</p>
<h3 id="对象初始化">对象初始化</h3>
<p>成员变量在对象初始化时，如果未赋值，会安排一个初始值，当然也可以手动初始化（手动直接赋值、调用函数赋值）</p>
<table>
<thead>
<tr class="header">
<th>变量类型</th>
<th>初始值</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>boolean</td>
<td>false</td>
</tr>
<tr class="even">
<td>int</td>
<td>0</td>
</tr>
<tr class="odd">
<td>object（某个对象）</td>
<td>null</td>
</tr>
</tbody>
</table>
<p>构造函数（课上讲过不少了，我摸了（bushi））</p>
<h2 id="第二周-对象交互">第二周 对象交互</h2>
<h3 id="对象的识别">对象的识别</h3>
<p>感觉和定义类是一回事，两件事情可以在定义类的时候同时完成。</p>
<h3 id="对象的交互">对象的交互</h3>
<p>课上讲过一嘴，说到可以用static修饰的“类全局变量”</p>
<p>也可以通过将一个类的成员变量设置为其他类的对象来达到目的</p>
<figure>
<img
src="../../AppData/Roaming/Typora/typora-user-images/image-20220913223756886.png"
alt="image-20220913223756886" />
<figcaption aria-hidden="true">image-20220913223756886</figcaption>
</figure>
<p><strong>图1 以钟表为例来看对象的交互</strong></p>
<h3 id="访问属性">访问属性</h3>
<p><img src="../../AppData/Roaming/Typora/typora-user-images/image-20220913223824851.png" alt="image-20220913223824851" style="zoom: 33%;" /></p>
<p>图2 用鸡蛋图表示封装思想</p>
<p><strong>封装思想</strong>：把数据和对数据的操作放在一起</p>
<p>public：同一个编译单元（一个java文件）里只能有一个class为public，且public
class的名字必须与编译单元同名</p>
<p>如果不加public，则不能在这个package外面访问</p>
<p>一个编译单元最多有一个public class，但也可以一个都没有</p>
<p>文件结构：clock(project)-&gt;src-&gt;clock(package)-&gt;clock.java</p>
<p><strong>import</strong>：用到的类不在同一个package里，就需要import</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> display.Display</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br></pre></td></tr></table></figure>
<p>包的名字.包的类</p>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20220911164023484.png"
alt="image-20220911164023484" />
<figcaption aria-hidden="true">image-20220911164023484</figcaption>
</figure>
<p>如果不用import，也可以像这样给出全名</p>
<p>也可以万能import（引用display所有内容，但是可能冲突，推荐import具体的类）</p>
<figure>
<img
src="C:\Users\Lee\AppData\Roaming\Typora\typora-user-images\image-20220911164335992.png"
alt="image-20220911164335992" />
<figcaption aria-hidden="true">image-20220911164335992</figcaption>
</figure>
<p>包的名字里面的点实际上表达文件夹层次</p>
<p>Java通过这样的手段管理文件系统（</p>
<p><strong>static：类变量</strong>，不属于任何一个对象，属于这个类，任何一个对象都拥有这个变量，但是</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>() &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">f</span><span class="params">()</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">        f();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Wrong usage</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>() &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">f</span><span class="params">()</span> &#123;</span><br><span class="line">        value++; <span class="comment">// cannot compile</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">        f();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>static函数只能调用static函数，只能访问static成员变量（这回理解了）</p>
<p>static函数和变量可以通过类访问，也可以通过对象访问，只是不能获得对象的具体信息</p>
<p>static变量的初始化只执行一次，和对象的创建过程无关</p>
<p>这就不得不提static的四种用法了（课上讲过，我摸了，略记一下）</p>
<h2 id="第三周-对象容器">第三周 对象容器</h2>
<h3 id="记事本的例子">记事本的例子</h3>
<ul>
<li>确定功能</li>
<li>接口设计</li>
</ul>
<p>每一个类都写main，方便做调试</p>
<h3 id="泛型容器">泛型容器</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> ArrayList&lt;String&gt; notes = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;(); <span class="comment">// ArrayList of String，用来存放String的ArrayList</span></span><br></pre></td></tr></table></figure>
<p>ArrayList是一个类，notes本身是对象管理者</p>
<p>容器类型、元素类型</p>
<ul>
<li>对象数组中的每个元素都是对象的管理者而非对象本身</li>
</ul>
<p>set：set相当于数学中的集合，元素不重复，且没有排序的概念</p>
<p>toString函数直接输出这个对象，会输出toString()函数返回的字符串结果</p>
<p>可以先写一个“空”的返回值，比如返回int类型的，先写个return
0，后面再改；</p>
<p>返回String的先写个return "";</p>
<p>HashMap：想写出“聪明”的代码，和具体数据无关</p>
<p>容器里的类型必须是对象，不能是基本元素，所以需要Integer这样的包裹类型</p>
<p>包裹类型的变量可以直接接受所对应的基础类型变量</p>
<p>所以HashMap的返回值也是对象，就是一个管理者</p>
<p>如果存在会返回有效值，不存在返回null</p>
<p>key唯一，后面的会覆盖前面的</p>
<p>遍历没有特别简单的方法，<strong>可以考虑采取for-each遍历entrySet或者valueSet的方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(Integet k : name.keySet()) &#123;</span><br><span class="line">	<span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> name.get(k);</span><br><span class="line">    System.out.println(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>要写构造器constructor</p>
<h2 id="第四周-继承与多态">第四周 继承与多态</h2>
<blockquote>
<p>一周后看：当时看觉得难是正常的，因为现在也觉得难（）</p>
</blockquote>
<p><strong>继承得到了父类的所有东西</strong>，item里面的所有都得到了，都是<strong>可能</strong>可以用的（至于为什么是可能，会涉及<strong>访问权限</strong>的问题，我们后面说）</p>
<p>如果不在子类里定义title，那么就会报“The field Item.title is not
visible”（此时没有super()）</p>
<p><strong>父类的private成员真的只有父类自己才能用</strong></p>
<p>虽然继承给了子类，但是子类不能直接用</p>
<p>本来我们应该做的事情是让Item给Item的title赋值，所以应该由Item来做初始化</p>
<figure>
<img
src="../../AppData/Roaming/Typora/typora-user-images/image-20220914222324033.png"
alt="image-20220914222324033" />
<figcaption aria-hidden="true">image-20220914222324033</figcaption>
</figure>
<p>可以看到，虽然CD没有private的title，但是确实产生了title</p>
<ul>
<li>第一个解决方案：把标识符改成protected（自己可以访问，同一个包内的其他类可以访问，子类可以访问）<strong>这是一种没办法的办法</strong></li>
</ul>
<p>对item做一个constructor</p>
<ul>
<li>cd的构造器得拿到title，用<code>super(title);</code>把参数传给父类，父类构造器通过参数构造；</li>
<li>如果用<code>super()</code>，找不到这个没有参数的构造器</li>
<li>如果不通过<code>super()</code>传递参数，父类会用不带参数的构造器进行构造</li>
</ul>
<blockquote>
<p>因为</p>
</blockquote>
<ul>
<li>先做了父类的初始化（定义初始化和构造器），然后才来做子类自己定义的初始化（我理解这样方便覆盖），再进构造函数做其他事情</li>
<li>需要保证父类的成员变量得到恰当的初始化——定义初始化、构造器（原来在二者兼备时优先定义初始化，然后构造器），总体的顺序是父类-&gt;子类，也即父类定义初始化、构造器-&gt;子类初始化、构造器，与是否采用super()传递参数无关</li>
<li>同时存在两个成员，也是可以的，父类的被隐藏
<ul>
<li>计算机的基本原则：优先选择范围小的，也即title应该是DVD自己的title</li>
<li>回到父类对父类成员变量操作时，操作的是父类自己的成员变量</li>
</ul></li>
<li>总结一下
<ul>
<li>父类的所有内容都继承给子类
<ul>
<li>但是如果是private的，子类不能访问</li>
<li>在谁的函数里面，所指的成员变量就是谁的
<ul>
<li>子类父类出现同名成员变量，在子类里面的就是子类自己的，在父类里面的就是父类自己的，之间没有任何联系</li>
</ul></li>
</ul></li>
</ul></li>
</ul>
<p><strong>要用父类的print()，需要加一个super</strong>，比如下面这段代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.print(<span class="string">&quot;DVD:&quot;</span>);</span><br><span class="line">    <span class="built_in">super</span>.print();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>类定义了类型</p>
<p>子类定义了子类型</p>
<p>子类的对象可以被当作父类的对象来使用</p>
<ul>
<li>赋值给父类的对象</li>
<li>传递给需要父类对象的函数</li>
<li>放进存放父类对象的容器里</li>
</ul>
<p>成员函数的绑定都是动态绑定</p>
<p><img src="../../AppData/Roaming/Typora/typora-user-images/image-20220912171422963.png" alt="image-20220912171422963" style="zoom:50%;" /></p>
<p><img src="../../AppData/Roaming/Typora/typora-user-images/image-20220912172044907.png" alt="image-20220912172044907" style="zoom:50%;" /></p>
<p>记得这里有一个强制类型转换</p>
<p>以及函数声明必须完全相同（函数名、参数表）</p>
<p><img src="../../AppData/Roaming/Typora/typora-user-images/image-20220912173013633.png" alt="image-20220912173013633" style="zoom:50%;" /></p>
<p>可扩展性：不需要修改就能添加新的内容</p>
<p>可维护性：需要修改才能添加新的内容</p>
<p><img src="../../AppData/Roaming/Typora/typora-user-images/image-20220912173133898.png" alt="image-20220912173133898" style="zoom:50%;" /></p>
<h2 id="第五周-设计原则">第五周 设计原则</h2>
<p>城堡游戏</p>
<p>open declaration：进入对应的声明</p>
<p>String类的操作系统开销大，可以用StringBuffer类</p>
<p><img src="../../AppData/Roaming/Typora/typora-user-images/image-20220912174838925.png" alt="image-20220912174838925" style="zoom:50%;" /></p>
<p><img src="../../AppData/Roaming/Typora/typora-user-images/image-20220912175117169.png" alt="image-20220912175117169" style="zoom:33%;" /></p>
<p>可扩展性：用HashMap避免“硬编码”（即不需要写出每一对对应的具体键值和值，只需要每次扩展时添加新的即可）</p>
<h2 id="第六周-抽象与接口">第六周 抽象与接口</h2>
<h3 id="抽象">6.1 抽象</h3>
<p><strong>抽象就是为了防止被制造实体</strong></p>
<p>抽象类的作用仅仅是表达接口，而不是具体的实现细节。抽象类中可以存在抽象方法。抽象方法也是使用abstract关键字来修饰。抽象的方法是不完全的，它只是一个<strong>方法签名</strong>而完全没有方法体</p>
<p>但是为了表达类之间的关系，还需要这样一个类来表达。如第一章的例子，如果去掉
<code>Shape</code> 类，那么 <code>Circle</code> 和
<code>Rectangle</code> 类就没有关系了</p>
<p>抽象函数<strong>（不能有括号）</strong>：表达概念而无法实现具体代码的函数，目的是为了告诉子类需要写
<code>draw()</code> 方法</p>
<p>只要有一个函数是抽象的，类就是抽象的。（这很容易理解，否则便无法调用这个抽象方法）</p>
<ul>
<li>有抽象类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">draw</span><span class="params">(Graphics g)</span>;</span><br><span class="line"><span class="comment">// 注意不能有大括号，即不能定义函数体</span></span><br></pre></td></tr></table></figure>
<p>抽象类<strong>（不能产生对象，但是可以定义变量）</strong>：表达概念而无法构造出实体的类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Shape</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rectangle</span>(a, b);</span><br></pre></td></tr></table></figure>
<ul>
<li>任何继承了抽象类的非抽象子类的对象可以赋值给这个变量（也即任何Shape类子类的对象都可以由s来管理）</li>
</ul>
<p>实现抽象函数</p>
<ul>
<li>继承自抽象类的子类必须覆盖父类中的抽象函数，这种覆盖叫做<strong>实现</strong></li>
<li>否则这个类自己就会成为抽象类</li>
</ul>
<p>计算机中的两种抽象</p>
<ul>
<li>与具体相对
<ul>
<li>表达一种概念而非实体</li>
</ul></li>
<li>与细节相对
<ul>
<li>表示在一定程度上忽略细节而着眼大局</li>
</ul></li>
</ul>
<h3 id="数据与表现分离">6.2 数据与表现分离</h3>
<p>两种看程序的方法：</p>
<ul>
<li>看main函数，挨个展开需要看的子类代码（”自顶向下“方法）</li>
<li>看最小的类，追到父类，从看懂小部件开始看懂整个代码（”自底向上“方法，联想HuffmanCode）</li>
</ul>
<p>JFrame、View（窗口）</p>
<p><del>重绘这个图工作量太大了，先摸为敬</del></p>
<figure>
<img
src="../../AppData/Roaming/Typora/typora-user-images/image-20220912194352676.png"
alt="image-20220912194352676" />
<figcaption aria-hidden="true">image-20220912194352676</figcaption>
</figure>
<p>数据与表现分离</p>
<ul>
<li>程序的业务逻辑与表现无关
<ul>
<li>表现可以是图形的也可以是文本的</li>
<li>表现可以是当地的也可以是远程的</li>
</ul></li>
</ul>
<p>（强调了一种“各司其职”的思想，写业务逻辑的程序员不需要关心表现是怎样的，不需要关心是通过网页输入字符串还是控制台输入还是blabla）</p>
<p><img src="../../AppData/Roaming/Typora/typora-user-images/image-20220912194831143.png" alt="image-20220912194831143" style="zoom:33%;" /></p>
<p>责任驱动设计</p>
<ul>
<li>将程序要实现的功能分配到合适的类/对象中去</li>
</ul>
<p>网格化</p>
<ul>
<li>图形界面本身有更高的清晰度</li>
<li>但是将画面网格化后数据更易处理</li>
</ul>
<p><img src="../../AppData/Roaming/Typora/typora-user-images/image-20220912195010980.png" alt="image-20220912195010980" style="zoom: 25%;" /></p>
<p><img src="../../AppData/Roaming/Typora/typora-user-images/image-20220912195043598.png" alt="image-20220912195043598" style="zoom:25%;" /></p>
<p>除了C++都不支持多继承<del>（那为啥不用C++）</del></p>
<blockquote>
<p>9.20更新：Java可以通过接口实现多继承</p>
</blockquote>
<p><strong>接口</strong></p>
<ul>
<li><strong>接口是纯抽象类</strong>
<ul>
<li><strong>所有的成员函数都是抽象函数</strong></li>
<li><strong>所有的成员变量都是public static
final（常量）</strong>，static方便调用，接口名.函数名即可调用</li>
<li>无构造方法</li>
<li>成员变量：
<ul>
<li>JDK7：接口中只能有抽象方法</li>
<li>JDK8：接口中可以定义有方法体的方法</li>
<li>JDK9：接口中可以定义私有方法</li>
</ul></li>
</ul></li>
<li>接口规定了长什么样，但是不管里面有什么</li>
</ul>
<figure>
<img
src="../../AppData/Roaming/Typora/typora-user-images/image-20220912220141030.png"
alt="image-20220912220141030" />
<figcaption aria-hidden="true">image-20220912220141030</figcaption>
</figure>
<p><code>cell o</code>的意思是任何实现了cell接口的都可以交给这个变量</p>
<p>interface是一种特殊的class，<strong>和class的地位是一样的</strong>，原来用class的地方都可以用interface</p>
<p>实现接口</p>
<ul>
<li>类用<code>extends</code>，接口用<code>complements</code></li>
<li>类可以实现很多接口</li>
<li>接口可以继承接口，但不能继承类</li>
<li>接口不能实现接口</li>
</ul>
<p>讲的就是两个东西之间的链接</p>
<p>需要其他服务的时候，不是定义一个类，而是定义一个接口</p>
<p>cell是view和field定义的</p>
<p><strong>面向接口的编程方式</strong></p>
<ul>
<li>设计程序时先定义接口，再实现类</li>
<li>任何需要在函数间传入传出的一定是接口而不是具体的类</li>
<li>是Java成功的关键之一，因为极适合多人同时写一个大程序</li>
<li>也是Java被批评的要点之一，因为代码量膨胀起来很快</li>
</ul>
<blockquote>
<p><em>补充自黑马程序员</em></p>
</blockquote>
<p>抽象类：更多地用作父类，是对事物的抽象</p>
<p>抽取共性方法作为抽象方法，抽象方法所在的类便成为抽象类</p>
<p>接口：更多地侧重于规则，是对行为的抽象（如游泳接口，可由动物和人实现）</p>
<p>接口的子类也称作实现类</p>
<ul>
<li>要么重写接口中所有的抽象方法</li>
<li>要么也是抽象类</li>
</ul>
<p>可以多实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Subclass</span> <span class="keyword">implements</span> <span class="title class_">Class1</span>, Class2 &#123;&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>所以我感觉多接口继承也是用接口的重要原因之一</p>
</blockquote>
<p>接口和类之间的关系</p>
<ul>
<li>类和类的关系
<ul>
<li>继承关系，只能单继承，不能多继承，但是可以多重继承</li>
</ul></li>
<li>类和接口的关系
<ul>
<li>实现关系，可以单实现，也可以多实现，还可以在继承一个类的同时实现多个接口
<ul>
<li>实现多个接口需要重写<strong>全部的</strong>抽象方法</li>
<li>同名的话就是实现了不同接口的同名函数</li>
</ul></li>
</ul></li>
<li>接口和接口的关系
<ul>
<li>继承关系，可以单继承，也可以多继承
<ul>
<li>实现最下面的子接口的话，需要重写所有的抽象方法</li>
</ul></li>
</ul></li>
</ul>
<h2 id="第七周-控制反转与mvc模式">第七周 控制反转与MVC模式</h2>
<h3 id="布局管理器">7.1 布局管理器</h3>
<p>Swing：所有的东西都叫做部件、另外一种东西叫做容器</p>
<p>容器可以加到容器里，部件也需要加到容器里</p>
<p>容器管部件在哪里，显示多大</p>
<p>布局管理器</p>
<p>layout manager</p>
<p>frame默认的layout manager是border</p>
<p>这章似乎和图形可视化等等关系比较大，所以我摸了（）</p>
<h2 id="第八周-异常处理与输入输出">第八周 异常处理与输入输出</h2>
<h3 id="捕捉异常">8.1.1 捕捉异常</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span></span><br><span class="line">    <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">    <span class="type">int</span> idx;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    idx = in.nextInt();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        a[idx] = <span class="number">10</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ArrayIndexOutOfBoundsException e) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Caught&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入5，输出Hello</span></span><br><span class="line"><span class="comment">// 输入10，输出Caught</span></span><br><span class="line"><span class="comment">// 说明第6行没做，从第6行跳到了第9行</span></span><br></pre></td></tr></table></figure>
<h3 id="异常处理机制">8.1.2 异常处理机制</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayIndex</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">f</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        a[<span class="number">10</span>] = <span class="number">10</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            k();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ArrayIndexOutOfBoundsException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;caught&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;main&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>a[10] = 10</code>
出了异常，之后的hello不会执行，离开f回到调用的地方<img
src="D:\Working\MarkDownFiles\exception-execution.png" /></p>
<h3 id="捕捉到的异常">8.1.3 捕捉到的异常</h3>
<p>捉到了做什么</p>
<p><code>String getMessage()</code></p>
<p><code>String toString()</code></p>
<p><code>void printStackTrace</code></p>
<p>输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">caught</span><br><span class="line">10</span><br><span class="line">java.lang.ArrayIndexOutOfBoundsException: 10</span><br></pre></td></tr></table></figure>
<p>再度抛出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">catch (Exception e) &#123;</span><br><span class="line">     System.err.println(&quot;An exception with thrown&quot;);</span><br><span class="line">     throw e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果在这个层面上需要处理，但是不能做最终的决定</p>
<h3 id="异常">8.2.1 异常</h3>
<p>读文件的例子</p>
<p>bussiness logic业务逻辑</p>
<figure>
<img
src="../../AppData/Roaming/Typora/typora-user-images/image-20220913194007073.png"
alt="image-20220913194007073" />
<figcaption aria-hidden="true">image-20220913194007073</figcaption>
</figure>
<p>如果某一步出了问题，就用catch解决问题</p>
<p>异常：不寻常的事情发生之时，需要终止预期的任务，让另一段代码处理</p>
<p>异常机制最大的好处就是清晰地分开了业务逻辑代码和遇到情况时的处理代码</p>
<p>异常声明</p>
<ul>
<li>如果你的函数可能抛出异常，就必须在函数头部加以声明<code>void f() throws TooBig, TooSmall, DivZero &#123; //... &#125;</code></li>
<li>可以声明并不会真正抛出的异常</li>
</ul>
<p>什么能扔？</p>
<ul>
<li>任何继承了Throwable类的对象</li>
<li>Exception类继承了Throwable</li>
<li>throw new Exception;</li>
<li>throw new Exception("Help");</li>
</ul>
<p>catch怎么匹配的异常</p>
<h3 id="流">8.3.1 流</h3>
<p>流是输入输出的方式</p>
<ul>
<li>流是一维单向的
<ul>
<li>一维：用一个数字就可以表达位置</li>
<li>单向：读 or 写</li>
</ul></li>
</ul>
<p>所有的IO操作都是有风险的</p>
<h2 id="tips">Tips</h2>
<h3 id="printf格式化输出">printf()格式化输出</h3>
<p>Java也支持<code>printf</code>格式化输出，格式与C语言相同</p>
<p>两个类里的<code>main函数</code>可以同时运行，当然还要看评测要求</p>
]]></content>
      <categories>
        <category>OO</category>
        <category>S3</category>
      </categories>
      <tags>
        <tag>OO</tag>
        <tag>S3</tag>
        <tag>网课笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>科目三实战技巧</title>
    <url>/subject3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言">前言</h2>
<blockquote>
<p>笔者与科三的爱恨情仇</p>
</blockquote>
<span id="more"></span>
<p>笔者去年没有练完的科三拖到了今年来练...在模拟了两次破费一百大洋后终于掌握要诀，肉疼的笔者心里那个不服，用键盘<del>讨伐</del>记录如下</p>
<h3 id="上车准备">上车准备</h3>
<blockquote>
<p>先上车进行身份验证，直到听到“请进行下车准备”时，观察左后视镜，扭头观察左后方无车后打开车门下车。逆时针绕车，在距离每个感应点20-30cm处交叉手臂几次，隐约听到车内“正在经过车尾”。绕车结束后上车，检查远光灯复位，挡位处在空挡，手刹拉起。调整座椅，系好安全带。</p>
</blockquote>
<h3 id="灯光">灯光</h3>
<blockquote>
<p>听到“请启动发动机”口令后，踩住离合器一次性把火打着，（随机考五个灯光）</p>
</blockquote>
<h3 id="起步">起步</h3>
<blockquote>
<p>听到“关闭灯光请起步”语音，打左转向灯，按喇叭两次，挂一档松手刹，左右观察驶入第二车道。加油门挂二档</p>
</blockquote>
<h3 id="行驶中">行驶中</h3>
<blockquote>
<p>行驶中第一个项目<strong>通过学校</strong>，无语音播报。观察左内右后视镜轻点刹车，需要注意，轻点刹车要使车有<strong>顿挫感</strong>。</p>
<p>第二个项目<strong>通过公交车站</strong>，无语音播报。观察左内右后视镜轻点刹车。</p>
<p>第三个项目<strong>直线行驶</strong>，听到“直线行驶”语音后，车在车道中间正负15cm，方向盘角度不超过15度，行驶一百米。</p>
<p>第四个项目<strong>前方路口左转</strong>，听到“前方路口左转”语音后，踩一次<strong>刹车</strong>，打<strong>左转向灯</strong>，观察左内右后视镜<strong>轻点刹车</strong>，注意观察路口情况，注意避让对侧直行社会车辆，<strong>避免斑马线停车</strong>。保险起见在路口斑马线前再踩一次<strong>刹车</strong>。</p>
<p>第五个项目<strong>加减挡</strong>，无语音播报。车速15迈左右挂二挡，25迈左右挂三挡，35迈左右挂四挡，踩油门保持车速35迈，默念6-7个数（5s）。松开油门回三挡，轻踩刹车，25迈以下回二挡。注意<strong>不要越级挂挡</strong>。</p>
<p>第六个项目<strong>前方路口直行</strong>，听到“前方路口直行”语音后，观察左内右后视镜<strong>轻点刹车</strong>。</p>
<p>第七个项目<strong>会车</strong>，听到前方会车语音以后，观察左内右后视镜<strong>轻点刹车。</strong></p>
<p>第八个项目<strong>掉头</strong>，听到“前方请找合适地点掉头”语音后，变更至最左侧车道，<strong>打左转向灯</strong>，快掉头时换一挡，在掉头前刹车一次，刷新一挡行驶距离（一挡连续行驶不能超过50m）。左打死观察左右情况掉头。</p>
<p>第九个项目<strong>变更车道</strong>，听到“变更车道”语音后，打右转向灯，看右后视镜并扭头观察右后方，往右打方向盘变道。</p>
<p>第十个项目<strong>前方路口右转</strong>，听到“前方路口右转”语音后，踩一次<strong>刹车</strong>，打<strong>右转向灯</strong>，观察左内右后视镜<strong>轻点刹车</strong>，注意观察路口情况，<strong>避免斑马线停车</strong>。保险起见在路口斑马线前再踩一次<strong>刹车</strong>。</p>
<p>第十一个项目<strong>超越前方车辆</strong>，听到“超越前方车辆语音”后，<strong>打左转向灯</strong>，看左后视镜并扭头观察左后方，往左变道，行驶四十米（约7-8条白线），看右后视镜并扭头观察右后方，变道驶回原车道。</p>
<p>第十二个项目<strong>通过人行横道</strong>，观察左内右观察后视镜<strong>轻点刹车</strong>。</p>
<p>第十三个项目<strong>靠边停车</strong>，听到“前方请找合适路段靠边停车”语音后，<strong>打右转向灯</strong>，看右后视镜并扭头观察右后方变道。挂一档靠边慢溜，车身与边线不能超过30cm（约一条半白线宽）。注意看前方将车顺正再看后视镜确认距离。如需调整应先顺正再微调。即使已发出“操作完毕请下车”语音仍可继续微调。确认可以以后，拉起手刹，摘空挡，熄火。踩住离合和刹车，确认上述三项复位。松安全带，松离合，松脚刹，观察左内右后视镜和左扭头观察左后方，确认安全后开关车门但不下车，开关车门的时间不能超过15秒。听到语音播报成绩，考试结束。</p>
</blockquote>
]]></content>
      <categories>
        <category>生活记录</category>
        <category>S3 Winter</category>
      </categories>
      <tags>
        <tag>科目三</tag>
      </tags>
  </entry>
  <entry>
    <title>《编译技术》笔记</title>
    <url>/compiling-technique-notes/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="0bb8651752b4169b57a9e91093ed6b2c8cb36d20ba8a6f8bf7a34e15d6437b34"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>读书笔记</tag>
        <tag>编译</tag>
      </tags>
  </entry>
  <entry>
    <title>组合数学笔记</title>
    <url>/combinatorics-notes/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="总述">总述</h2>
<blockquote>
<p>2023 春组合数学笔记，博文实在 deploy 不上去，参见我的 Github 吧</p>
</blockquote>
<span id="more"></span>
<p><a
href="%5BStrivingLee/Introductory-Combinatorics:%20Course%20resources%20of%20BUAA%20introductory%20combinatorics%20(github.com)%5D(https://github.com/StrivingLee/Introductory-Combinatorics)">Click
here to see the remote repository</a></p>
]]></content>
      <tags>
        <tag>数学基础</tag>
        <tag>课程笔记</tag>
        <tag>组合数学</tag>
      </tags>
  </entry>
</search>
